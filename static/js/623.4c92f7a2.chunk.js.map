{"version":3,"file":"static/js/623.4c92f7a2.chunk.js","mappings":"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","sources":["components/Common/Card/Card.styled.jsx","components/Common/Card/Card.jsx","components/InteractiveContent/QuizCard/QuizCard.styled.jsx","components/InteractiveContent/QuizCard/QuizCard.jsx","components/Common/SectionHeading/SectionHeading.styled.jsx","components/Common/SectionHeading/SectionHeading.jsx","components/InteractiveContent/RevealCard/RevealCard.styled.jsx","components/Common/ToggleButton/ToggleButton.styled.jsx","components/Common/ToggleButton/ToggleButton.jsx","components/InteractiveContent/RevealCard/RevealCard.jsx","components/HomeGroups/HomeGroups.styled.jsx","components/SpecificContentDisplays/HomeGroupLessonMetaInfo/HomeGroupLessonMetaInfo.jsx","components/InteractiveContent/HighlightBox/HighlightBox.styled.jsx","components/InteractiveContent/HighlightBox/HighlightBox.jsx","components/InteractiveContent/QuestionPrompt/QuestionPrompt.styled.jsx","components/InteractiveContent/QuestionPrompt/QuestionPrompt.jsx","components/InteractiveContent/ListCards/ListCards.styled.jsx","components/InteractiveContent/ListCards/ListCards.jsx","components/InteractiveContent/Timeline/Timeline.styled.jsx","components/InteractiveContent/Timeline/Timeline.jsx","components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.styled.jsx","components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.jsx","components/HomeGroups/HomeGroups.jsx","pages/HomeGroupsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledCard = styled.section`\n  background-color: ${({ theme }) =>\n    theme.background}; /* Тепер використовує основний колір фону з теми */\n  border-radius: 15px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Тінь залишена без змін */\n  padding: 2rem;\n  margin-bottom: 2rem;\n\n  // ДОДАНО: Плавний перехід для фонового кольору та тіні\n  transition: background-color 0.4s ease-in-out, box-shadow 0.4s ease-in-out;\n`;\n","import React from \"react\";\nimport { StyledCard } from \"./Card.styled\";\n\nexport default function Card({ children }) {\n  return <StyledCard>{children}</StyledCard>;\n}\n","// src/components/InteractiveContent/QuizCard/QuizCard.styled.js\nimport styled from \"styled-components\";\n\nexport const StyledQuizCard = styled.div`\n  background-color: ${({ theme }) => theme.background}; // Основний фон картки\n  border: 1px solid ${({ theme }) => theme.borderColor}; // Межа картки\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05); // Тінь залишена без змін\n\n  // ДОДАНО: Плавні переходи для фону та межі картки\n  transition: background-color 0.4s ease-in-out, border-color 0.4s ease-in-out;\n`;\n\nexport const QuizQuestion = styled.h4`\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: 15px;\n  color: ${({ theme }) => theme.color}; // Колір тексту запитання\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  // ПЕРЕВІРЕНО: Перехід для 'color' вже визначено у GlobalStyles.js для всіх h4 елементів.\n  // Тому тут окремо його додавати не потрібно, він вже працює.\n`;\n\nexport const QuizOptionsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-top: 15px;\n  border-top: 1px solid ${({ theme }) => theme.borderColor}; // Межа для списку опцій\n  padding-top: 15px;\n\n  // ДОДАНО: Плавний перехід для кольору верхньої межі списку опцій\n  transition: border-color 0.4s ease-in-out;\n`;\n\nexport const QuizOptionItem = styled.li`\n  background-color: ${({ theme }) => theme.background}; // Фон опції\n  border: 1px solid ${({ theme }) => theme.borderColor}; // Межа опції\n  border-radius: 5px;\n  padding: 10px 15px;\n  margin-bottom: 10px;\n  font-size: 1rem;\n  color: ${({ theme }) => theme.color}; // Колір тексту опції\n  cursor: pointer;\n\n  // ЧУДОВО! Переходи вже визначені тут, вони охоплюють всі зміни кольорів та фону\n  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.hoverBg}; // Колір фону при наведенні\n  }\n\n  // Стилі для обраної відповіді\n  ${props =>\n    props.isSelected &&\n    `\n    background-color: ${props.theme.accentBg}; // Акцентний фон для обраної\n    border-color: ${props.theme.accentColor}; // Акцентний колір межі для обраної\n    color: ${props.theme.buttonColor}; // Колір тексту для обраної (як buttonColor для контрасту)\n  `}\n\n  // Стилі для правильної відповіді, що відображаються ЛИШЕ ПІСЛЯ ВИБОРУ КОРИСТУВАЧЕМ\n  ${props =>\n    props.showFeedback &&\n    props.isCorrectOption &&\n    `\n    background-color: ${props.theme.successBg}; // Фон для правильної відповіді\n    border-color: ${props.theme.successColor}; // Межа для правильної відповіді\n    color: ${props.theme.successText}; // Текст для правильної відповіді\n    font-weight: bold;\n  `}\n\n  // Стилі для НЕПРАВИЛЬНОЇ відповіді, яку обрав користувач\n  ${props =>\n    props.showFeedback &&\n    props.isSelected &&\n    !props.isCorrectOption &&\n    `\n    background-color: ${props.theme.dangerBg}; // Фон для неправильної відповіді\n    border-color: ${props.theme.dangerColor}; // Межа для неправильної відповіді\n    color: ${props.theme.dangerText}; // Текст для неправильної відповіді\n  `}\n`;\n\nexport const QuizToggleIcon = styled.span`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${({ theme }) => theme.color}; // Колір іконки\n\n  // ДОДАНО: Перехід для кольору іконки (на додаток до transform)\n  transition: transform 0.2s ease-in-out, color 0.2s ease-in-out;\n`;\n","// src/components/InteractiveContent/QuizCard/QuizCard.js\nimport React, { useState } from \"react\";\nimport {\n  StyledQuizCard,\n  QuizQuestion,\n  QuizOptionsList,\n  QuizOptionItem,\n  QuizToggleIcon,\n} from \"./QuizCard.styled\";\n\nexport default function QuizCard({ quizData }) {\n  const [showOptions, setShowOptions] = useState(false);\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null); // Новий стан для обраної відповіді\n\n  const toggleOptions = () => {\n    setShowOptions(!showOptions);\n    // Приховуємо вибрану відповідь, якщо знову закриваємо список\n    if (showOptions) {\n      setSelectedAnswerIndex(null);\n    }\n  };\n\n  const handleOptionClick = index => {\n    setSelectedAnswerIndex(index);\n    // Якщо хочете автоматично показувати результат після вибору, можна тут додати логіку\n    // Наразі просто фіксуємо вибір\n  };\n\n  return (\n    <StyledQuizCard>\n      <QuizQuestion onClick={toggleOptions}>\n        {quizData.question}\n        <QuizToggleIcon isActive={showOptions}>{showOptions ? \"−\" : \"+\"}</QuizToggleIcon>\n      </QuizQuestion>\n\n      {showOptions && (\n        <QuizOptionsList>\n          {quizData.options.map((option, index) => (\n            <QuizOptionItem\n              key={index}\n              onClick={() => handleOptionClick(index)} // Обробник кліку на опцію\n              isSelected={selectedAnswerIndex === index} // Проп для стилізації обраної відповіді\n              isCorrectOption={option.isCorrect} // Проп для стилізації правильної відповіді (не змінює поведінку, але впливає на вигляд)\n              showFeedback={selectedAnswerIndex !== null} // Показувати фідбек лише після вибору відповіді\n            >\n              {option.text}\n            </QuizOptionItem>\n          ))}\n        </QuizOptionsList>\n      )}\n    </StyledQuizCard>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const StyledHeading = styled.h3`\n  color: ${({ theme }) => theme.accentColor}; // ✅ Змінив на accentColor для заголовків секцій\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  margin-top: 2.5rem;\n  margin-bottom: 1.5rem;\n  line-height: 1.2;\n\n  ${props =>\n    props.size === \"default\" &&\n    `\n    font-size: ${props.theme.fontSizes.xlarge}; // ✅ З теми\n  `}\n\n  ${props =>\n    props.size === \"medium\" &&\n    `\n    font-size: ${props.theme.fontSizes.large}; // ✅ З теми\n  `}\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","// src/components/Common/SectionHeading/SectionHeading.js\nimport React from \"react\";\nimport { StyledHeading } from \"./SectionHeading.styled\"; // ✅ Імпортуємо стилі\n// import DOMPurify from 'dompurify'; // Розкоментуйте, якщо використовуєте DOMPurify\n\n// Компонент SectionHeading\nconst SectionHeading = ({ as = \"h3\", size = \"default\", children }) => {\n  // Функція для безпечного рендерингу HTML\n  const renderHtmlContent = htmlString => {\n    // Якщо ви використовуєте DOMPurify, розкоментуйте рядок нижче\n    // return { __html: DOMPurify.sanitize(htmlString) };\n    return { __html: htmlString };\n  };\n\n  return (\n    <StyledHeading\n      as={as}\n      size={size}\n      // Застосовуємо dangerouslySetInnerHTML до children, оскільки це може бути HTML-рядок\n      dangerouslySetInnerHTML={renderHtmlContent(children)}\n    />\n  );\n};\n\nexport default SectionHeading;\n","import styled from \"styled-components\";\n\nexport const StyledRevealCard = styled.div`\n  background-color: ${({ theme }) => theme.background}; // ✅ З теми\n  border: 1px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  border-radius: ${({ theme }) => theme.borderRadius.medium}; // ✅ З теми\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n  overflow: hidden; /* Щоб вміст не виходив за рамки */\n  transition: box-shadow 0.2s ease-in-out;\n\n  &:hover {\n    box-shadow: ${({ theme }) => theme.shadows.medium}; // ✅ З теми\n  }\n`;\n\nexport const CardTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 1.5rem;\n  background-color: ${({ theme }) => theme.accentBg}; // ✅ З теми\n  color: ${({ theme }) => theme.buttonColor}; // ✅ З теми (для контрасту на accentBg)\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.accentBgHover || theme.accentBg}; // ✅ З теми\n  }\n\n  span:first-child {\n    /* Для емодзі */\n    margin-right: 0.75rem;\n    font-size: ${({ theme }) => theme.fontSizes.xlarge}; // ✅ З теми\n  }\n\n  a {\n    /* Стилі для посилань всередині заголовка картки */\n    color: ${({ theme }) => theme.buttonColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nexport const CardContent = styled.div`\n  padding: 1.5rem;\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ✅ З теми\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  line-height: 1.6;\n\n  p {\n    margin-bottom: 1rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .bible-quote {\n    font-style: italic;\n    color: ${({ theme }) => theme.colorSecondary}; // ✅ З теми\n    margin-top: 0.5rem;\n    padding-left: 1rem;\n    border-left: 2px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  }\n`;\n","// src/components/Common/ToggleButton/ToggleButton.styled.js\nimport styled from \"styled-components\";\n\nexport const StyledToggleButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.2em;\n  cursor: pointer;\n  padding: 5px;\n\n  // Колір кнопки залежить від isActive, використовуючи кольори з теми\n  color: ${props =>\n    props.isActive\n      ? props.theme.accentColor\n      : props.theme.color}; /* Активний: акцентний колір; Неактивний: основний колір тексту */\n\n  // Переходи вже були, це чудово\n  transition: transform 0.2s ease-in-out, color 0.2s ease-in-out;\n  transform: ${props => (props.isActive ? \"rotate(180deg)\" : \"rotate(0deg)\")};\n\n  &:hover {\n    // Колір при наведенні також залежить від isActive та теми\n    // Можна використовувати theme.navActive або додати спеціальний toggleHoverColor до вашої теми\n    color: ${props =>\n      props.isActive\n        ? props.theme.navActive\n        : props.theme\n            .borderColor}; /* Приклад: Активний hover: колір navActive; Неактивний hover: колір borderColor */\n  }\n`;\n","// src/components/Common/ToggleButton/ToggleButton.js\nimport React from \"react\";\nimport { StyledToggleButton } from \"./ToggleButton.styled\";\n\nexport default function ToggleButton({ isActive, onClick }) {\n  return (\n    <StyledToggleButton onClick={onClick} isActive={isActive}>\n      {isActive ? \"▲\" : \"▼\"} {/* Можете використовувати іконки чи інший текст */}\n    </StyledToggleButton>\n  );\n}\n","// src/components/InteractiveContent/RevealCard/RevealCard.js\nimport React, { useState } from \"react\";\nimport { StyledRevealCard, CardContent, CardTitle } from \"./RevealCard.styled\";\nimport ToggleButton from \"../../Common/ToggleButton/ToggleButton\"; // Переконайтеся, що ToggleButton існує\n// import DOMPurify from 'dompurify'; // Розкоментуйте, якщо використовуєте DOMPurify\n\nexport default function RevealCard({ cardData }) {\n  const [isRevealed, setIsRevealed] = useState(false);\n\n  const toggleReveal = () => setIsRevealed(!isRevealed);\n\n  // Функція для безпечного рендерингу HTML\n  const renderHtmlContent = htmlString => {\n    // Якщо ви використовуєте DOMPurify, розкоментуйте рядок нижче\n    // return { __html: DOMPurify.sanitize(htmlString) };\n    return { __html: htmlString };\n  };\n\n  return (\n    <StyledRevealCard>\n      {/* Застосовуємо dangerouslySetInnerHTML для CardTitle, якщо він може містити HTML */}\n      <CardTitle onClick={toggleReveal}>\n        {cardData.emoji}\n        <span dangerouslySetInnerHTML={renderHtmlContent(cardData.title)} />\n        <ToggleButton isActive={isRevealed} onClick={toggleReveal} />\n      </CardTitle>\n      {isRevealed && (\n        // Застосовуємо dangerouslySetInnerHTML для CardContent, оскільки він містить HTML\n        <CardContent dangerouslySetInnerHTML={renderHtmlContent(cardData.content)} />\n      )}\n    </StyledRevealCard>\n  );\n}\n","// src/components/HomeGroups/HomeGroups.styled.jsx\nimport styled from \"styled-components\";\n\n// Перейменовуємо Container на HomeGroupsContainer\nexport const HomeGroupsContainer = styled.div`\n  /* Ваші існуючі стилі для контейнера */\n`;\n\n// Перейменовуємо NoSermonMessage на NoLessonMessage\nexport const NoLessonMessage = styled.p`\n  /* Ваші існуючі стилі для повідомлення */\n  text-align: center;\n  margin-top: 50px;\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colorSecondary};\n`;\n","// src/components/SpecificContentDisplays/HomeGroupLessonMetaInfo/HomeGroupLessonMetaInfo.jsx\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst MetaInfoContainer = styled.div`\n  // Цю назву можна залишити або змінити на HomeGroupLessonMetaInfoContainer\n  font-size: 0.95rem;\n  color: ${({ theme }) => theme.colorSecondary};\n  margin-top: 15px;\n\n  p {\n    margin: 5px 0;\n  }\n\n  span {\n    font-weight: bold;\n    color: ${({ theme }) => theme.color};\n  }\n\n  .lesson-tags {\n    margin-top: 10px;\n    span {\n      display: inline-block;\n      background-color: ${({ theme }) => theme.tagBg};\n      color: ${({ theme }) => theme.tagColor};\n      padding: 4px 8px;\n      border-radius: 4px;\n      margin-right: 8px;\n      margin-bottom: 5px;\n      font-size: 0.85rem;\n    }\n  }\n`;\n\n// Замість LessonMetaInfo використовуємо HomeGroupLessonMetaInfo\nfunction HomeGroupLessonMetaInfo({ author, book, chapter, verses, date, duration, theme, tags }) {\n  return (\n    <MetaInfoContainer>\n      {author && (\n        <p>\n          Автор: <span>{author}</span>\n        </p>\n      )}\n      {(book || chapter || verses) && (\n        <p>\n          Книга:{\" \"}\n          <span>\n            {book} {chapter ? `глава ${chapter}` : \"\"}\n            {verses ? `, вірші ${verses}` : \"\"}\n          </span>\n        </p>\n      )}\n      {date && (\n        <p>\n          Дата: <span>{date}</span>\n        </p>\n      )}\n      {duration && (\n        <p>\n          Тривалість: <span>{duration}</span>\n        </p>\n      )}\n      {theme && (\n        <p>\n          Тема: <span>{theme}</span>\n        </p>\n      )}\n      {tags && tags.length > 0 && (\n        <div className=\"lesson-tags\">\n          {tags.map((tag, index) => (\n            <span key={index}>{tag}</span>\n          ))}\n        </div>\n      )}\n    </MetaInfoContainer>\n  );\n}\n\nexport default HomeGroupLessonMetaInfo;\n","import styled from \"styled-components\";\n\nexport const HighlightBoxContainer = styled.div`\n  background-color: ${({ theme }) => theme.interactiveBgLight}; // ✅ З теми\n  border-left: 5px solid ${({ theme }) => theme.interactiveBorderLight}; // ✅ З теми\n  padding: 1.5rem;\n  margin: 2rem 0;\n  border-radius: ${({ theme }) => theme.borderRadius.medium}; // ✅ З теми\n  display: flex;\n  align-items: flex-start;\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n`;\n\nexport const HighlightBoxEmoji = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.xxlarge}; // ✅ З теми\n  margin-right: 1.5rem;\n  line-height: 1;\n`;\n\nexport const HighlightBoxContent = styled.div`\n  flex-grow: 1;\n`;\n\nexport const HighlightBoxTitle = styled.h4`\n  color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n`;\n","import React from \"react\";\nimport {\n  HighlightBoxContainer,\n  HighlightBoxContent,\n  HighlightBoxTitle,\n  HighlightBoxEmoji,\n} from \"./HighlightBox.styled\";\n// import DOMPurify from 'dompurify'; // Розкоментуйте, якщо використовуєте DOMPurify\n\nconst HighlightBox = ({ title, content, emoji }) => {\n  // Функція для безпечного рендерингу HTML\n  const renderHtmlContent = htmlString => {\n    // Якщо ви використовуєте DOMPurify, розкоментуйте рядок нижче\n    // return { __html: DOMPurify.sanitize(htmlString) };\n    return { __html: htmlString };\n  };\n\n  return (\n    <HighlightBoxContainer>\n      {emoji && <HighlightBoxEmoji>{emoji}</HighlightBoxEmoji>}\n      <HighlightBoxContent>\n        {/* ✅ Тут ми використовуємо dangerouslySetInnerHTML для title, якщо він може містити HTML */}\n        {title && <HighlightBoxTitle dangerouslySetInnerHTML={renderHtmlContent(title)} />}\n        {/* ✅ І тут для content, що є критично важливим для вашого випадку */}\n        <p dangerouslySetInnerHTML={renderHtmlContent(content)} />\n      </HighlightBoxContent>\n    </HighlightBoxContainer>\n  );\n};\n\nexport default HighlightBox;\n","import styled from \"styled-components\";\n\nexport const QuestionPromptContainer = styled.div`\n  background-color: ${({ theme }) => theme.interactiveBgYellow}; // ✅ З теми\n  border: 1px solid ${({ theme }) => theme.interactiveBorderYellow}; // ✅ З теми\n  padding: 1.5rem;\n  margin: 2rem 0;\n  border-radius: ${({ theme }) => theme.borderRadius.medium}; // ✅ З теми\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n`;\n\nexport const QuestionEmoji = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.xxlarge}; // ✅ З теми\n  margin-bottom: 1rem;\n`;\n\nexport const QuestionText = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  margin-bottom: 1rem;\n`;\n\nexport const ToggleAnswerButton = styled.button`\n  background-color: ${({ theme }) => theme.buttonBg}; // ✅ З теми\n  color: ${({ theme }) => theme.buttonColor}; // ✅ З теми\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small}; // ✅ З теми\n  cursor: pointer;\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ✅ З теми\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n  }\n`;\n\nexport const AnswerText = styled.div`\n  background-color: ${({ theme }) => theme.background}; // ✅ З теми\n  border-left: 3px solid ${({ theme }) => theme.successColor}; // ✅ З теми\n  padding: 1rem;\n  margin-top: 1.5rem;\n  font-style: italic;\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  border-radius: ${({ theme }) => theme.borderRadius.small}; // ✅ З теми\n  width: 100%;\n`;\n","import React, { useState } from \"react\";\nimport {\n  QuestionPromptContainer,\n  QuestionText,\n  ToggleAnswerButton,\n  AnswerText,\n  QuestionEmoji,\n} from \"./QuestionPrompt.styled\";\n\nconst QuestionPrompt = ({ question, answer, emoji }) => {\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  const handleToggleAnswer = () => {\n    setShowAnswer(!showAnswer);\n  };\n\n  return (\n    <QuestionPromptContainer>\n      <QuestionEmoji>{emoji || \"❓\"}</QuestionEmoji>\n      <QuestionText>{question}</QuestionText>\n      {answer && (\n        <ToggleAnswerButton onClick={handleToggleAnswer}>\n          {showAnswer ? \"Сховати відповідь\" : \"Показати відповідь\"}\n        </ToggleAnswerButton>\n      )}\n      {showAnswer && answer && <AnswerText>{answer}</AnswerText>}\n    </QuestionPromptContainer>\n  );\n};\n\nexport default QuestionPrompt;\n","import styled from \"styled-components\";\n\nexport const ListCardsContainer = styled.div`\n  margin: 3rem 0;\n  display: grid;\n  gap: 1.5rem;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n`;\n\nexport const CardItem = styled.div`\n  background-color: ${({ theme }) => theme.background}; // ✅ З теми\n  border: 1px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  border-radius: ${({ theme }) => theme.borderRadius.medium}; // ✅ З теми\n  padding: 1.5rem;\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: ${({ theme }) => theme.shadows.medium}; // ✅ З теми\n  }\n`;\n\nexport const CardEmoji = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.xlarge}; // ✅ З теми\n  margin-bottom: 0.8rem;\n`;\n\nexport const CardTitle = styled.h5`\n  color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  line-height: 1.3;\n`;\n\nexport const CardContent = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ✅ З теми\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  line-height: 1.6;\n\n  p {\n    margin-bottom: 0.5rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n  .bible-quote {\n    font-style: italic;\n    color: ${({ theme }) => theme.colorSecondary}; // ✅ З теми\n    margin-top: 0.5rem;\n    padding-left: 1rem;\n    border-left: 2px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  }\n`;\n","import React from \"react\";\nimport {\n  ListCardsContainer,\n  CardItem,\n  CardTitle,\n  CardContent,\n  CardEmoji,\n} from \"./ListCards.styled\";\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\"; // Можливо, вам вже імпортований\n\nconst ListCards = ({ title, cards }) => {\n  const renderHtmlContent = htmlString => {\n    // Рекомендується використовувати DOMPurify для очищення HTML, якщо він надходить від користувачів\n    // import DOMPurify from 'dompurify';\n    // return { __html: DOMPurify.sanitize(htmlString) };\n    return { __html: htmlString };\n  };\n\n  return (\n    <ListCardsContainer>\n      {title && (\n        <SectionHeading as=\"h3\" size=\"default\">\n          {title}\n        </SectionHeading>\n      )}\n      {cards.map((card, index) => (\n        <CardItem key={index}>\n          {card.emoji && <CardEmoji>{card.emoji}</CardEmoji>}\n          <CardTitle dangerouslySetInnerHTML={renderHtmlContent(card.title)} />{\" \"}\n          {/* Додано для Title */}\n          <CardContent dangerouslySetInnerHTML={renderHtmlContent(card.content)} /> {/* Вже було */}\n        </CardItem>\n      ))}\n    </ListCardsContainer>\n  );\n};\n\nexport default ListCards;\n","import styled from \"styled-components\";\n\nexport const TimelineContainer = styled.div`\n  margin: 3rem 0;\n  position: relative;\n  padding-left: 30px;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: 12px;\n    top: 0;\n    bottom: 0;\n    width: 2px;\n    background-color: ${({ theme }) => theme.borderColor}; // ✅ З теми\n  }\n`;\n\nexport const TimelineEvent = styled.div`\n  position: relative;\n  margin-bottom: 2rem;\n  padding-left: 30px;\n`;\n\nexport const EventDot = styled.div`\n  position: absolute;\n  left: 0;\n  top: 5px;\n  width: 12px;\n  height: 12px;\n  background-color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n  border-radius: 50%;\n  border: 2px solid ${({ theme }) => theme.background}; // ✅ З теми\n  z-index: 1;\n`;\n\nexport const EventContent = styled.div`\n  background-color: ${({ theme }) => theme.background}; // ✅ З теми\n  padding: 1rem 1.5rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small}; // ✅ З теми\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n  border: 1px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n\n  p {\n    margin-bottom: 0.5rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .bible-quote {\n    font-style: italic;\n    color: ${({ theme }) => theme.colorSecondary}; // ✅ З теми\n    margin-top: 0.5rem;\n    padding-left: 1rem;\n    border-left: 2px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  }\n`;\n\nexport const EventTitle = styled.h4`\n  color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nexport const EventDescription = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ✅ З теми\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  line-height: 1.5;\n  margin-bottom: 0;\n\n  strong {\n    font-weight: bold; /* Залишаємо, якщо не в темі */\n  }\n\n  em {\n    font-style: italic;\n  }\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .bible-quote {\n    font-style: italic;\n    color: ${({ theme }) => theme.colorSecondary}; // ✅ З теми\n    margin-top: 0.5rem;\n    padding-left: 1rem;\n    border-left: 2px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  }\n`;\n","import React from \"react\";\nimport {\n  TimelineContainer,\n  TimelineEvent,\n  EventDot,\n  EventContent,\n  EventTitle,\n  EventDescription,\n} from \"./Timeline.styled\";\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\"; // Можливо, вам вже імпортований\n// import DOMPurify from 'dompurify'; // Розкоментуйте, якщо використовуєте DOMPurify\n\nconst Timeline = ({ title, events }) => {\n  // Функція для безпечного рендерингу HTML\n  const renderHtmlContent = htmlString => {\n    // Якщо ви використовуєте DOMPurify, розкоментуйте рядок нижче\n    // return { __html: DOMPurify.sanitize(htmlString) };\n    return { __html: htmlString };\n  };\n\n  return (\n    <TimelineContainer>\n      {/* Якщо title для Timeline теж може містити HTML */}\n      {title && (\n        <SectionHeading as=\"h3\" size=\"default\" dangerouslySetInnerHTML={renderHtmlContent(title)} />\n      )}\n      {events.map((event, index) => (\n        <TimelineEvent key={index}>\n          <EventDot />\n          <EventContent>\n            {/* ✅ Застосовуємо dangerouslySetInnerHTML до EventTitle */}\n            <EventTitle dangerouslySetInnerHTML={renderHtmlContent(event.title)} />\n            {/* ✅ Застосовуємо dangerouslySetInnerHTML до EventDescription */}\n            <EventDescription dangerouslySetInnerHTML={renderHtmlContent(event.description)} />\n          </EventContent>\n        </TimelineEvent>\n      ))}\n    </TimelineContainer>\n  );\n};\n\nexport default Timeline;\n","// src/components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.styled.jsx\nimport styled from \"styled-components\";\n\n// Замість LessonDisplayContainer використовуємо HomeGroupLessonDisplayContainer\nexport const HomeGroupLessonDisplayContainer = styled.div`\n  padding: 20px;\n  max-width: 900px;\n  margin: 0 auto;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.color};\n  min-height: calc(100vh - var(--header-height, 60px));\n`;\n\n// Замість LessonTitleWrapper використовуємо HomeGroupLessonTitleWrapper\nexport const HomeGroupLessonTitleWrapper = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n  h2 {\n    font-size: 2.5rem;\n    color: ${({ theme }) => theme.accentColor};\n    margin-bottom: 10px;\n    line-height: 1.2;\n  }\n`;\n\nexport const MainContentWrapper = styled.div`\n  /* Можливо, тут будуть додаткові стилі для контейнера з картою, якщо потрібно */\n`;\n\n// Замість LessonTextWrapper використовуємо HomeGroupLessonTextWrapper\nexport const HomeGroupLessonTextWrapper = styled.div`\n  line-height: 1.7;\n  font-size: 1.1rem;\n\n  p {\n    margin-bottom: 1em;\n  }\n\n  h3 {\n    font-size: 1.8rem;\n    color: ${({ theme }) => theme.color};\n    margin-top: 30px;\n    margin-bottom: 15px;\n  }\n\n  h4 {\n    font-size: 1.4rem;\n    color: ${({ theme }) => theme.color};\n    margin-top: 25px;\n    margin-bottom: 10px;\n  }\n\n  strong {\n    font-weight: bold;\n    color: ${({ theme }) => theme.accentColor};\n  }\n`;\n\nexport const StyledParagraph = styled.p`\n  /* Додаткові стилі для параграфів, якщо потрібно */\n`;\n\nexport const RevealCardsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 20px;\n  margin-top: 25px;\n  margin-bottom: 30px;\n  padding: 15px;\n  background-color: ${({ theme }) => theme.cardBackground};\n  border-radius: 8px;\n  box-shadow: ${({ theme }) => theme.shadow};\n`;\n","// src/components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.js\nimport React from \"react\";\nimport Card from \"../../Common/Card/Card\";\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\";\nimport QuizCard from \"../../InteractiveContent/QuizCard/QuizCard\";\nimport RevealCard from \"../../InteractiveContent/RevealCard/RevealCard\";\n\n// ✅ ЗМІНЕНО: Імпорт нового компонента метаінформації\nimport HomeGroupLessonMetaInfo from \"../HomeGroupLessonMetaInfo/HomeGroupLessonMetaInfo\";\n\n// --- НОВІ ІМПОРТИ КОМПОНЕНТІВ ---\nimport HighlightBox from \"../../InteractiveContent/HighlightBox/HighlightBox\"; // Приклад шляху\nimport QuestionPrompt from \"../../InteractiveContent/QuestionPrompt/QuestionPrompt\"; // Приклад шляху\nimport ListCards from \"../../InteractiveContent/ListCards/ListCards\"; // Приклад шляху\nimport Timeline from \"../../InteractiveContent/Timeline/Timeline\"; // Приклад шляху\n// import QuoteBlock from \"../../Common/QuoteBlock/QuoteBlock\"; // Якщо ви вирішили його створити\n\nimport {\n  HomeGroupLessonDisplayContainer,\n  HomeGroupLessonTextWrapper,\n  StyledParagraph,\n  RevealCardsGrid,\n  HomeGroupLessonTitleWrapper,\n  MainContentWrapper,\n  // --- НОВІ ІМПОРТИ СТИЛІВ, ЯКЩО ПОТРІБНО ---\n  // ListCardsContainer, // Приклад: якщо ListCards потребує зовнішнього контейнера\n  // TimelineWrapper, // Приклад: якщо Timeline потребує зовнішнього контейнера\n} from \"./HomeGroupLessonDisplay.styled\";\n\nfunction HomeGroupLessonDisplay({ lessonData }) {\n  if (!lessonData) {\n    return <p>Завантаження уроку домашньої групи...</p>;\n  }\n\n  const {\n    title,\n    author,\n    book,\n    chapter,\n    verses,\n    date,\n    duration,\n    theme,\n    tags,\n    description,\n    sections,\n  } = lessonData;\n\n  const renderHtmlContent = htmlString => {\n    // Важливо: для безпеки використовуйте DOMPurify, якщо контент може надходити від користувачів\n    // У цьому прикладі припускається, що контент є безпечним або вже очищеним\n    return { __html: htmlString };\n  };\n\n  return (\n    <HomeGroupLessonDisplayContainer>\n      <HomeGroupLessonTitleWrapper>\n        <h2>{title}</h2>\n        <HomeGroupLessonMetaInfo\n          author={author}\n          book={book}\n          chapter={chapter}\n          verses={verses}\n          date={date}\n          duration={duration}\n          theme={theme}\n          tags={tags}\n        />\n      </HomeGroupLessonTitleWrapper>\n      <MainContentWrapper>\n        <Card>\n          <HomeGroupLessonTextWrapper>\n            {description && (\n              <StyledParagraph dangerouslySetInnerHTML={renderHtmlContent(description)} />\n            )}\n            {sections.map((section, index) => {\n              // Краще використовувати switch-case для чистоти, коли багато типів секцій\n              switch (section.type) {\n                case \"text\":\n                  return (\n                    <React.Fragment key={index}>\n                      {section.title && (\n                        <SectionHeading\n                          as={section.subtitle ? \"h4\" : \"h3\"}\n                          size={section.subtitle ? \"medium\" : \"default\"}\n                        >\n                          {section.title}\n                        </SectionHeading>\n                      )}\n                      {section.content.map((paragraph, pIndex) => (\n                        <StyledParagraph\n                          key={pIndex}\n                          dangerouslySetInnerHTML={renderHtmlContent(paragraph)}\n                        />\n                      ))}\n                    </React.Fragment>\n                  );\n                case \"quiz\":\n                  return <QuizCard key={section.id} quizData={section} />;\n                case \"reveal-cards\":\n                  // Якщо 'reveal-cards' вже має свою внутрішню логіку рендерингу Card,\n                  // тоді RevealCardsGrid може бути не потрібна, або бути частиною самого компонента RevealCards.\n                  // Я залишив як у вашому прикладі, але будьте уважні до вкладеності.\n                  return (\n                    <RevealCardsGrid key={index}>\n                      {section.cards.map(card => (\n                        <RevealCard key={card.id} cardData={card} />\n                      ))}\n                    </RevealCardsGrid>\n                  );\n                // --- НОВІ ТИПИ СЕКЦІЙ ---\n                case \"highlight-box\":\n                  return <HighlightBox key={index} {...section} />; // Передаємо всі властивості секції\n                case \"question-prompt\":\n                  return <QuestionPrompt key={index} {...section} />;\n                case \"list-cards\":\n                  return <ListCards key={index} {...section} />;\n                case \"timeline\":\n                  return <Timeline key={index} {...section} />;\n                // case \"quote-block\": // Якщо ви вирішили його створити\n                //   return <QuoteBlock key={index} {...section} />;\n\n                default:\n                  // Якщо зустрічається невідомий тип секції, можна вивести попередження\n                  console.warn(`Невідомий тип секції: ${section.type}`);\n                  return null;\n              }\n            })}\n          </HomeGroupLessonTextWrapper>\n        </Card>\n      </MainContentWrapper>\n    </HomeGroupLessonDisplayContainer>\n  );\n}\n\nexport default HomeGroupLessonDisplay;\n","// src/components/HomeGroups/HomeGroups.jsx\nimport React, { useEffect, useState } from \"react\"; // ✅ ДОДАНО useState\nimport { HomeGroupsContainer, NoLessonMessage } from \"./HomeGroups.styled\";\nimport HomeGroupLessonDisplay from \"../SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay\";\nimport { homeGroupsContent } from \"../../data/homeGroups/homeGroupsContent\";\nimport { useHomeGroups } from \"../../contexts/HomeGroupsContext\";\n\nconst getLessonMetaDataById = lessonId => {\n  // ✅ ЗМІНЕНО НАЗВУ: тепер отримуємо метадані\n  if (!lessonId) return null;\n\n  for (const categoryKey in homeGroupsContent) {\n    if (homeGroupsContent.hasOwnProperty(categoryKey)) {\n      const lessonsArray = homeGroupsContent[categoryKey];\n      if (Array.isArray(lessonsArray) && lessonsArray.length > 0) {\n        const foundLesson = lessonsArray.find(lesson => lesson.id === lessonId);\n        if (foundLesson) {\n          return foundLesson; // Повертаємо об'єкт з метаданими та loadLesson\n        }\n      }\n    }\n  }\n  return null;\n};\n\nconst HomeGroups = () => {\n  const { selectedHomeGroupLesson, setSelectedHomeGroupLesson } = useHomeGroups();\n  const [loadedLessonContent, setLoadedLessonContent] = useState(null); // ✅ НОВИЙ СТАН: для зберігання завантаженого уроку\n  const [loading, setLoading] = useState(true); // ✅ НОВИЙ СТАН: для індикації завантаження\n\n  // Отримуємо метадані обраного уроку (з loadLesson функцією)\n  const selectedLessonMetaData = getLessonMetaDataById(selectedHomeGroupLesson);\n\n  useEffect(() => {\n    // Встановлюємо перший урок за замовчуванням, якщо жоден не вибрано\n    if (!selectedHomeGroupLesson) {\n      let firstLessonId = null;\n      for (const categoryKey in homeGroupsContent) {\n        if (homeGroupsContent.hasOwnProperty(categoryKey)) {\n          const lessonsArray = homeGroupsContent[categoryKey];\n          if (Array.isArray(lessonsArray) && lessonsArray.length > 0) {\n            firstLessonId = lessonsArray[0].id;\n            break;\n          }\n        }\n      }\n      if (firstLessonId) {\n        setSelectedHomeGroupLesson(firstLessonId);\n      } else {\n        setLoading(false); // Якщо немає уроків взагалі\n      }\n    }\n  }, [selectedHomeGroupLesson, setSelectedHomeGroupLesson]);\n\n  // ✅ НОВИЙ useEffect для завантаження контенту уроку\n  useEffect(() => {\n    const loadLessonContent = async () => {\n      setLoading(true); // Починаємо завантаження\n      setLoadedLessonContent(null); // Очищаємо попередній контент\n\n      if (selectedLessonMetaData && selectedLessonMetaData.loadLesson) {\n        try {\n          const module = await selectedLessonMetaData.loadLesson();\n          // Припускаємо, що module.default містить об'єкт уроку (як nehemiah4.js)\n          setLoadedLessonContent(module.default);\n        } catch (error) {\n          console.error(\"Помилка завантаження уроку:\", error);\n          setLoadedLessonContent(null); // У випадку помилки скидаємо контент\n        } finally {\n          setLoading(false); // Завершуємо завантаження\n        }\n      } else {\n        setLoading(false); // Немає метаданих або функції loadLesson\n      }\n    };\n\n    if (selectedHomeGroupLesson) {\n      // Запускаємо завантаження, лише якщо selectedHomeGroupLesson встановлено\n      loadLessonContent();\n    }\n  }, [selectedLessonMetaData, selectedHomeGroupLesson]); // Залежності: зміни метаданих або ID обраного уроку\n\n  return (\n    <HomeGroupsContainer>\n      {loading ? (\n        <NoLessonMessage>Завантаження уроку...</NoLessonMessage> // Показати, поки урок завантажується\n      ) : loadedLessonContent ? (\n        <HomeGroupLessonDisplay lessonData={loadedLessonContent} /> // Передаємо завантажений контент\n      ) : (\n        <NoLessonMessage>\n          Будь ласка, оберіть урок домашньої групи зі списку в меню.\n        </NoLessonMessage>\n      )}\n    </HomeGroupsContainer>\n  );\n};\n\nexport default HomeGroups;\n","import HomeGroups from \"../components/HomeGroups\";\n\nexport default function HomeGroupsPage() {\n  return <HomeGroups />;\n}\n"],"names":["StyledCard","styled","section","_ref","theme","background","Card","children","_jsx","StyledQuizCard","div","_ref2","borderColor","QuizQuestion","h4","_ref3","color","QuizOptionsList","ul","_ref4","QuizOptionItem","li","_ref5","_ref6","_ref7","_ref8","hoverBg","props","isSelected","accentBg","accentColor","buttonColor","showFeedback","isCorrectOption","successBg","successColor","successText","dangerBg","dangerColor","dangerText","QuizToggleIcon","span","_ref9","QuizCard","quizData","showOptions","setShowOptions","useState","selectedAnswerIndex","setSelectedAnswerIndex","_jsxs","onClick","toggleOptions","question","isActive","options","map","option","index","handleOptionClick","isCorrect","text","StyledHeading","h3","size","fontSizes","xlarge","large","as","dangerouslySetInnerHTML","htmlString","__html","StyledRevealCard","borderRadius","medium","shadows","small","CardTitle","accentBgHover","_ref0","_ref1","CardContent","_ref10","_ref11","_ref12","_ref13","colorSecondary","_ref14","StyledToggleButton","button","navActive","ToggleButton","RevealCard","cardData","isRevealed","setIsRevealed","toggleReveal","renderHtmlContent","emoji","title","content","HomeGroupsContainer","NoLessonMessage","p","MetaInfoContainer","tagBg","tagColor","author","book","chapter","verses","date","duration","tags","length","className","tag","HighlightBoxContainer","interactiveBgLight","interactiveBorderLight","HighlightBoxEmoji","xxlarge","HighlightBoxContent","HighlightBoxTitle","QuestionPromptContainer","interactiveBgYellow","interactiveBorderYellow","QuestionEmoji","QuestionText","ToggleAnswerButton","buttonBg","AnswerText","answer","showAnswer","setShowAnswer","handleToggleAnswer","ListCardsContainer","CardItem","CardEmoji","h5","cards","SectionHeading","card","TimelineContainer","TimelineEvent","EventDot","EventContent","EventTitle","EventDescription","_ref15","_ref16","events","event","description","HomeGroupLessonDisplayContainer","HomeGroupLessonTitleWrapper","MainContentWrapper","HomeGroupLessonTextWrapper","StyledParagraph","RevealCardsGrid","cardBackground","shadow","lessonData","sections","HomeGroupLessonMetaInfo","type","React","subtitle","paragraph","pIndex","id","HighlightBox","QuestionPrompt","ListCards","Timeline","console","warn","HomeGroups","selectedHomeGroupLesson","setSelectedHomeGroupLesson","useHomeGroups","loadedLessonContent","setLoadedLessonContent","loading","setLoading","selectedLessonMetaData","lessonId","categoryKey","homeGroupsContent","hasOwnProperty","lessonsArray","Array","isArray","foundLesson","find","lesson","getLessonMetaDataById","useEffect","firstLessonId","async","loadLesson","module","default","error","loadLessonContent","HomeGroupLessonDisplay","HomeGroupsPage"],"sourceRoot":""}