{"version":3,"file":"static/js/838.2aef14bc.chunk.js","mappings":"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","sources":["components/InteractiveContent/RevealCard/RevealCard.styled.jsx","components/Common/ToggleButton/ToggleButton.styled.jsx","components/Common/ToggleButton/ToggleButton.jsx","components/InteractiveContent/RevealCard/RevealCard.jsx","components/Common/SectionHeading/SectionHeading.styled.jsx","components/Common/SectionHeading/SectionHeading.jsx","components/Common/Card/Card.styled.jsx","components/Common/Card/Card.jsx","components/HomeGroups/HomeGroups.styled.jsx","components/SpecificContentDisplays/HomeGroupLessonMetaInfo/HomeGroupLessonMetaInfo.jsx","components/InteractiveContent/Diagram/Diagram.styled.jsx","components/InteractiveContent/Diagram/Diagram.jsx","utils/chartHelpers.js","components/InteractiveContent/ImagePlaceholder/ImagePlaceholder.styled.jsx","components/InteractiveContent/ImagePlaceholder/ImagePlaceholder.jsx","components/InteractiveContent/HighlightBox/HighlightBox.styled.jsx","components/InteractiveContent/HighlightBox/HighlightBox.jsx","components/InteractiveContent/QuestionPrompt/QuestionPrompt.styled.jsx","components/InteractiveContent/QuestionPrompt/QuestionPrompt.jsx","components/InteractiveContent/ListCards/ListCards.styled.jsx","components/InteractiveContent/ListCards/ListCards.jsx","components/InteractiveContent/Timeline/Timeline.styled.jsx","components/Common/CollapsibleContent/CollapsibleContent.jsx","components/InteractiveContent/Timeline/Timeline.jsx","components/InteractiveContent/ContrastDisplay/ContrastDisplay.styled.jsx","components/InteractiveContent/ContrastDisplay/ContrastDisplay.jsx","components/InteractiveContent/DescriptionWithImage/DescriptionWithImage.styled.jsx","components/InteractiveContent/DescriptionWithImage/DescriptionWithImage.jsx","components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.jsx","components/HomeGroups/HomeGroups.jsx","pages/HomeGroupsPage.jsx","components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.styled.jsx","components/InteractiveContent/QuizCard/QuizCard.styled.jsx","components/InteractiveContent/QuizCard/QuizCard.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledRevealCard = styled.div`\n  background-color: ${({ theme }) => theme.background}; // ✅ З теми\n  border: 1px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  border-radius: ${({ theme }) => theme.borderRadius.medium}; // ✅ З теми\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n  overflow: hidden; /* Щоб вміст не виходив за рамки */\n  transition: box-shadow 0.2s ease-in-out;\n  &:hover {\n    box-shadow: ${({ theme }) => theme.shadows.medium}; // ✅ З теми\n  }\n`;\n\nexport const CardTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 1.5rem;\n  background-color: ${({ theme }) => theme.accentBg}; // ✅ З теми\n  color: ${({ theme }) => theme.buttonColor}; // ✅ З теми (для контрасту на accentBg)\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.accentBgHover || theme.accentBg}; // ✅ З теми\n  }\n\n  span:first-child {\n    /* Для емодзі */\n    margin-right: 0.75rem;\n    font-size: ${({ theme }) => theme.fontSizes.xlarge}; // ✅ З теми\n  }\n\n  a {\n    /* Стилі для посилань всередині заголовка картки */\n    color: ${({ theme }) => theme.buttonColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nexport const CardContent = styled.div`\n  padding: 1.5rem;\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ✅ З теми\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  line-height: 1.6;\n\n  p {\n    margin-bottom: 1rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .bible-quote {\n    font-style: italic;\n    color: ${({ theme }) => theme.colorSecondary}; // ✅ З теми\n    margin-top: 0.5rem;\n    padding-left: 1rem;\n    border-left: 2px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  }\n`;\n","// src/components/Common/ToggleButton/ToggleButton.styled.js\nimport styled from \"styled-components\";\n\nexport const StyledToggleButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.2em;\n  cursor: pointer;\n  padding: 5px;\n\n  // Колір кнопки залежить від isActive, використовуючи кольори з теми\n  color: ${props =>\n    props.isActive\n      ? props.theme.accentColor\n      : props.theme.color}; /* Активний: акцентний колір; Неактивний: основний колір тексту */\n\n  // Переходи вже були, це чудово\n  transition: transform 0.2s ease-in-out, color 0.2s ease-in-out;\n  transform: ${props => (props.isActive ? \"rotate(180deg)\" : \"rotate(0deg)\")};\n\n  &:hover {\n    // Колір при наведенні також залежить від isActive та теми\n    // Можна використовувати theme.navActive або додати спеціальний toggleHoverColor до вашої теми\n    color: ${props =>\n      props.isActive\n        ? props.theme.navActive\n        : props.theme\n            .borderColor}; /* Приклад: Активний hover: колір navActive; Неактивний hover: колір borderColor */\n  }\n`;\n","// src/components/Common/ToggleButton/ToggleButton.js\nimport React from \"react\";\nimport { StyledToggleButton } from \"./ToggleButton.styled\";\n\nexport default function ToggleButton({ isActive, onClick }) {\n  return (\n    <StyledToggleButton onClick={onClick} isActive={isActive}>\n      {isActive ? \"▲\" : \"▼\"} {/* Можете використовувати іконки чи інший текст */}\n    </StyledToggleButton>\n  );\n}\n","// src/components/InteractiveContent/RevealCard/RevealCard.js\nimport React, { useState } from \"react\";\nimport { StyledRevealCard, CardContent, CardTitle } from \"./RevealCard.styled\";\nimport ToggleButton from \"../../Common/ToggleButton/ToggleButton\";\n\nexport default function RevealCard({ cardData }) {\n  const [isRevealed, setIsRevealed] = useState(false);\n\n  const toggleReveal = () => setIsRevealed(!isRevealed);\n\n  return (\n    <StyledRevealCard>\n      <CardTitle onClick={toggleReveal}>\n        {cardData.emoji}\n        {/* ✅ ВИПРАВЛЕНО: Рендеримо cardData.title безпосередньо */}\n        <span>{cardData.title}</span>\n        <ToggleButton isActive={isRevealed} onClick={toggleReveal} />\n      </CardTitle>\n      {isRevealed && (\n        // ✅ ВИПРАВЛЕНО: Рендеримо cardData.content безпосередньо\n        <CardContent>{cardData.content}</CardContent>\n      )}\n    </StyledRevealCard>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const StyledHeading = styled.h3`\n  color: ${({ theme }) => theme.accentColor}; // ✅ Змінив на accentColor для заголовків секцій\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  margin-top: 2.5rem;\n  margin-bottom: 1.5rem;\n  line-height: 1.2;\n\n  ${props =>\n    props.size === \"default\" &&\n    `\n    font-size: ${props.theme.fontSizes.xlarge}; // ✅ З теми\n  `}\n\n  ${props =>\n    props.size === \"medium\" &&\n    `\n    font-size: ${props.theme.fontSizes.large}; // ✅ З теми\n  `}\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","// src/components/Common/SectionHeading/SectionHeading.js\nimport React from \"react\";\nimport { StyledHeading } from \"./SectionHeading.styled\";\n\n// Компонент SectionHeading\nconst SectionHeading = ({ as = \"h3\", size = \"default\", children }) => {\n  return (\n    <StyledHeading as={as} size={size}>\n      {children} {/* ✅ ВИПРАВЛЕНО: Рендеримо children безпосередньо */}\n    </StyledHeading>\n  );\n};\n\nexport default SectionHeading;\n","import styled from \"styled-components\";\n\nexport const StyledCard = styled.section`\n  background-color: ${({ theme }) =>\n    theme.background}; /* Тепер використовує основний колір фону з теми */\n  border-radius: 15px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Тінь залишена без змін */\n  padding: 2rem;\n  margin-bottom: 2rem;\n\n  // ДОДАНО: Плавний перехід для фонового кольору та тіні\n  transition: background-color 0.4s ease-in-out, box-shadow 0.4s ease-in-out;\n`;\n","import React from \"react\";\nimport { StyledCard } from \"./Card.styled\";\n\nexport default function Card({ children }) {\n  return <StyledCard>{children}</StyledCard>;\n}\n","// src/components/HomeGroups/HomeGroups.styled.jsx\nimport styled from \"styled-components\";\n\n// Перейменовуємо Container на HomeGroupsContainer\nexport const HomeGroupsContainer = styled.div`\n  /* Ваші існуючі стилі для контейнера */\n`;\n\n// Перейменовуємо NoSermonMessage на NoLessonMessage\nexport const NoLessonMessage = styled.p`\n  /* Ваші існуючі стилі для повідомлення */\n  text-align: center;\n  margin-top: 50px;\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colorSecondary};\n`;\n","// src/components/SpecificContentDisplays/HomeGroupLessonMetaInfo/HomeGroupLessonMetaInfo.jsx\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst MetaInfoContainer = styled.div`\n  // Цю назву можна залишити або змінити на HomeGroupLessonMetaInfoContainer\n  font-size: 0.95rem;\n  color: ${({ theme }) => theme.colorSecondary};\n  margin-top: 15px;\n\n  p {\n    margin: 5px 0;\n  }\n\n  span {\n    font-weight: bold;\n    color: ${({ theme }) => theme.color};\n  }\n\n  .lesson-tags {\n    margin-top: 10px;\n    span {\n      display: inline-block;\n      background-color: ${({ theme }) => theme.tagBg};\n      color: ${({ theme }) => theme.tagColor};\n      padding: 4px 8px;\n      border-radius: 4px;\n      margin-right: 8px;\n      margin-bottom: 5px;\n      font-size: 0.85rem;\n    }\n  }\n`;\n\n// Замість LessonMetaInfo використовуємо HomeGroupLessonMetaInfo\nfunction HomeGroupLessonMetaInfo({ author, book, chapter, verses, date, duration, theme, tags }) {\n  return (\n    <MetaInfoContainer>\n      {author && (\n        <p>\n          Автор: <span>{author}</span>\n        </p>\n      )}\n      {(book || chapter || verses) && (\n        <p>\n          Книга:{\" \"}\n          <span>\n            {book} {chapter ? `глава ${chapter}` : \"\"}\n            {verses ? `, вірші ${verses}` : \"\"}\n          </span>\n        </p>\n      )}\n      {date && (\n        <p>\n          Дата: <span>{date}</span>\n        </p>\n      )}\n      {duration && (\n        <p>\n          Тривалість: <span>{duration}</span>\n        </p>\n      )}\n      {theme && (\n        <p>\n          Тема: <span>{theme}</span>\n        </p>\n      )}\n      {tags && tags.length > 0 && (\n        <div className=\"lesson-tags\">\n          {tags.map((tag, index) => (\n            <span key={index}>{tag}</span>\n          ))}\n        </div>\n      )}\n    </MetaInfoContainer>\n  );\n}\n\nexport default HomeGroupLessonMetaInfo;\n","// src/components/InteractiveContent/Diagram/Diagram.styled.js\nimport styled from \"styled-components\";\n\nexport const DiagramContainer = styled.div`\n  width: 100%;\n  max-width: 950px; /* ✅ Збільште це значення, якщо діаграма та легенда не вміщуються */\n  height: 450px; /* ✅ Фіксована висота для всього контейнера */\n  margin: 20px auto;\n  padding: 15px;\n  background-color: ${({ theme }) => theme.background};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n`;\n","// src/components/InteractiveContent/Diagram/Diagram.jsx\nimport React, { useMemo } from \"react\";\nimport { DiagramContainer } from \"./Diagram.styled\";\n\nimport { Line, Bar, Pie, Doughnut, PolarArea, Radar, Bubble, Scatter } from \"react-chartjs-2\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  RadialLinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\n\nimport { useTheme } from \"../../../contexts/ThemeProvider\";\n// ✅ ІМПОРТУЄМО ФУНКЦІЇ З НОВОГО ХЕЛПЕР-ФАЙЛУ\nimport { getChartOptionsWithTheme, getChartDataWithTheme } from \"../../../utils/chartHelpers\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  RadialLinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\n// ✅ renderChart МОЖНА ЗАЛИШИТИ ТУТ АБО ТАКОЖ ВИНЕСТИ\nconst renderChart = (chartType, chartData, chartOptions) => {\n  switch (chartType) {\n    case \"line\":\n      return <Line data={chartData} options={chartOptions} />;\n    case \"bar\":\n      return <Bar data={chartData} options={chartOptions} />;\n    case \"pie\":\n      return <Pie data={chartData} options={chartOptions} />;\n    case \"doughnut\":\n      return <Doughnut data={chartData} options={chartOptions} />;\n    case \"polarArea\":\n      return <PolarArea data={chartData} options={chartOptions} />;\n    case \"radar\":\n      return <Radar data={chartData} options={chartOptions} />;\n    case \"bubble\":\n      return <Bubble data={chartData} options={chartOptions} />;\n    case \"scatter\":\n      return <Scatter data={chartData} options={chartOptions} />;\n    default:\n      return <p>Невідомий тип діаграми: {chartType}</p>;\n  }\n};\n\nfunction Diagram({ title, description, chartType, chartData, chartOptions }) {\n  const { currentTheme } = useTheme();\n\n  // Хуки useMemo тепер викликають імпортовані функції\n  const memoizedChartData = useMemo(() => {\n    return getChartDataWithTheme(chartData, currentTheme, chartType);\n  }, [chartData, currentTheme, chartType]);\n\n  const memoizedChartOptions = useMemo(() => {\n    return getChartOptionsWithTheme({ ...chartOptions, chartType }, currentTheme);\n  }, [chartOptions, currentTheme, chartType]);\n\n  const customLegendItems = useMemo(() => {\n    if (\n      !memoizedChartData ||\n      !memoizedChartData.labels ||\n      !memoizedChartData.datasets ||\n      memoizedChartData.datasets.length === 0\n    ) {\n      return [];\n    }\n    const colors = memoizedChartData.datasets[0]?.backgroundColor || [];\n\n    return memoizedChartData.labels.map((label, index) => ({\n      text: label,\n      color: Array.isArray(colors) ? colors[index % colors.length] : colors,\n    }));\n  }, [memoizedChartData]);\n\n  if (!currentTheme) {\n    return <p>Завантаження діаграми...</p>;\n  }\n\n  return (\n    <DiagramContainer>\n      {title && <h4>{title}</h4>}\n      {description && <p>{description}</p>}\n      <div style={{ display: \"flex\", flexDirection: \"row\", width: \"100%\", height: \"100%\" }}>\n        <div style={{ flexGrow: 1, minWidth: \"0\", maxWidth: \"calc(100% - 320px)\" }}>\n          {\" \"}\n          {/* ✅ Змінено на 320px, щоб відповідати ширині легенди */}\n          {renderChart(chartType, memoizedChartData, memoizedChartOptions)}\n        </div>\n\n        <div\n          style={{\n            width: \"320px\", // ✅ Ширина вашої легенди\n            flexShrink: 0,\n            paddingLeft: \"15px\",\n            overflowY: \"auto\",\n            maxHeight: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          {customLegendItems.map((item, index) => (\n            <div\n              key={index}\n              style={{ display: \"flex\", alignItems: \"flex-start\", marginBottom: \"8px\" }}\n            >\n              <span\n                style={{\n                  display: \"inline-block\",\n                  minWidth: \"15px\",\n                  height: \"15px\",\n                  backgroundColor: item.color,\n                  marginRight: \"8px\",\n                  marginTop: \"3px\",\n                  borderRadius: \"3px\",\n                }}\n              ></span>\n              <span\n                style={{\n                  color: currentTheme.color,\n                  fontSize: \"13px\",\n                  wordBreak: \"break-word\",\n                  wordWrap: \"break-word\",\n                  whiteSpace: \"normal\",\n                  lineHeight: \"1.3\",\n                }}\n              >\n                {item.text}\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n      {!title && !description && !chartData && <p>Діаграма завантажується або відсутні дані.</p>}\n    </DiagramContainer>\n  );\n}\n\nexport default Diagram;\n","// src/utils/chartHelpers.js\n\n/**\n * Повертає опції Chart.js з урахуванням теми.\n * @param {object} options - Початкові опції діаграми.\n * @param {object} themeColors - Об'єкт кольорів поточної теми.\n * @returns {object} Оновлені опції діаграми.\n */\nexport const getChartOptionsWithTheme = (options, themeColors) => {\n  let newOptions = {\n    ...options,\n    responsive: true,\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        left: 5,\n        right: 40,\n        top: 10,\n        bottom: 5,\n      },\n    },\n    plugins: {\n      ...options.plugins,\n      legend: {\n        // Вмикаємо легенду тільки для Line/Bar/Radar/Scatter/Bubble/PolarArea.\n        // Для Pie/Doughnut вона буде вимкнена, оскільки для них використовується кастомна HTML-легенда.\n        display: ![\"pie\", \"doughnut\"].includes(options.chartType),\n        labels: {\n          color: themeColors?.color,\n          font: {\n            size: 12,\n          },\n          boxWidth: 20,\n          padding: 10,\n        },\n        position: \"right\",\n        align: \"center\",\n      },\n      tooltip: {\n        ...options.plugins?.tooltip,\n        bodyFont: {\n          size: 12,\n        },\n        titleFont: {\n          size: 14,\n        },\n      },\n    },\n    scales: {\n      ...options.scales,\n      y: {\n        ...options.scales?.y,\n        border: {\n          display: false,\n        },\n        ticks: {\n          // ✅ ДОДАНО: Вимкнення відображення міток на осі Y\n          display: false,\n          color: themeColors?.color,\n          font: {\n            size: 10,\n          },\n        },\n        grid: {\n          display: false, // Вимкнено лінії сітки на осі Y\n          color: (themeColors?.borderColor || \"#D3D3D3\") + \"80\",\n        },\n      },\n      x: {\n        ...options.scales?.x,\n        border: {\n          display: false,\n        },\n        ticks: {\n          // ✅ ДОДАНО: Вимкнення відображення міток на осі X\n          display: false,\n          color: themeColors?.color,\n          font: {\n            size: 10,\n          },\n        },\n        grid: {\n          display: false, // Вимкнено лінії сітки на осі X\n          color: (themeColors?.borderColor || \"#D3D3D3\") + \"80\",\n        },\n      },\n    },\n  };\n\n  if ([\"doughnut\", \"pie\"].includes(options.chartType)) {\n    newOptions.cutout = options.cutout || \"70%\";\n  }\n\n  if (!newOptions.plugins) newOptions.plugins = {};\n  return newOptions;\n};\n\n/**\n * Повертає дані Chart.js з застосованими кольорами теми.\n * @param {object} data - Початкові дані діаграми.\n * @param {object} themeColors - Об'єкт кольорів поточної теми.\n * @param {string} type - Тип діаграми (для коректного застосування кольорів).\n * @returns {object} Оновлені дані діаграми.\n */\nexport const getChartDataWithTheme = (data, themeColors, type) => {\n  if (!data || !data.datasets) return data;\n\n  if (!themeColors) {\n    return data;\n  }\n\n  const newChartData = { ...data };\n  newChartData.datasets = newChartData.datasets.map(dataset => {\n    const newDataset = { ...dataset };\n\n    const dynamicColors = [\n      themeColors.accentColor,\n      themeColors.navActive,\n      themeColors.accentBg,\n      themeColors.color,\n      themeColors.navBg,\n      themeColors.background,\n      themeColors.borderColor,\n      themeColors.interactiveBgLight,\n      themeColors.interactiveBorderLight,\n      themeColors.interactiveBgYellow,\n      themeColors.interactiveBorderYellow,\n      themeColors.buttonBg,\n      themeColors.successColor,\n      themeColors.dangerColor,\n    ];\n\n    if (\n      !newDataset.backgroundColor ||\n      newDataset.backgroundColor.length === 0 ||\n      newDataset.backgroundColor === \"dynamic\"\n    ) {\n      if (type === \"pie\" || type === \"doughnut\" || type === \"polarArea\") {\n        const dataPointsCount = newDataset.data.length;\n        newDataset.backgroundColor = Array.from(\n          { length: dataPointsCount },\n          (_, i) => dynamicColors[i % dynamicColors.length]\n        );\n        newDataset.borderColor = themeColors.borderColor;\n      } else {\n        newDataset.backgroundColor = themeColors.accentColor + \"B3\";\n        newDataset.borderColor = themeColors.accentColor;\n      }\n    } else if (Array.isArray(newDataset.backgroundColor)) {\n      newDataset.backgroundColor = newDataset.backgroundColor.map((color, i) =>\n        color === \"dynamic\" ? dynamicColors[i % dynamicColors.length] : color\n      );\n      if (!newDataset.borderColor) {\n        newDataset.borderColor = themeColors.borderColor;\n      }\n    }\n\n    if (newDataset.pointBackgroundColor === \"dynamic\") {\n      newDataset.pointBackgroundColor = themeColors.accentColor;\n    }\n    if (newDataset.pointBorderColor === \"dynamic\") {\n      newDataset.pointBorderColor = themeColors.color;\n    }\n    if (newDataset.hoverBackgroundColor === \"dynamic\") {\n      newDataset.hoverBackgroundColor = themeColors.hoverBg;\n    }\n    if (newDataset.hoverBorderColor === \"dynamic\") {\n      newDataset.hoverBorderColor = themeColors.borderColor;\n    }\n    if (newDataset.fill === true) {\n      newDataset.backgroundColor = themeColors.accentBg + \"50\";\n    }\n\n    return newDataset;\n  });\n  return newChartData;\n};\n","// src/components/InteractiveContent/ImagePlaceholder/ImagePlaceholder.styled.js\nimport styled from \"styled-components\";\n\nexport const ImageContainer = styled.div`\n  background-color: ${({ theme }) => theme.background};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  margin: 2rem 0;\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  text-align: center;\n  transition: all 0.4s ease-in-out; /* Додано перехід */\n\n  h4 {\n    margin-bottom: 1rem;\n    color: ${({ theme }) => theme.accentColor};\n    transition: color 0.4s ease-in-out; /* Додано перехід */\n  }\n\n  p {\n    color: ${({ theme }) => theme.color};\n    font-size: ${({ theme }) => theme.fontSizes.medium};\n    margin-bottom: 1.5rem;\n    transition: color 0.4s ease-in-out, font-size 0.4s ease-in-out; /* Додано перехід */\n  }\n`;\n\nexport const StyledImage = styled.img`\n  max-width: 100%;\n  height: auto;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  margin-bottom: 1rem;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  transition: border-radius 0.4s ease-in-out; /* Додано перехід */\n`;\n\nexport const ImageCaption = styled.p`\n  font-style: italic;\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  color: ${({ theme }) => theme.color};\n  margin-top: 0.5rem;\n  transition: color 0.4s ease-in-out, font-size 0.4s ease-in-out; /* Додано перехід */\n`;\n","// src/components/InteractiveContent/ImagePlaceholder/ImagePlaceholder.jsx\nimport React from \"react\";\nimport { ImageContainer, StyledImage, ImageCaption } from \"./ImagePlaceholder.styled\";\n\nfunction ImagePlaceholder({ imageUrl, caption, altText }) {\n  return (\n    <ImageContainer>\n      {imageUrl ? (\n        <StyledImage src={imageUrl} alt={altText || \"Зображення\"} />\n      ) : (\n        <p>Зображення відсутнє.</p>\n      )}\n      {caption && <ImageCaption>{caption}</ImageCaption>}\n    </ImageContainer>\n  );\n}\n\nexport default ImagePlaceholder;\n","import styled from \"styled-components\";\n\nexport const HighlightBoxContainer = styled.div`\n  background-color: ${({ theme }) => theme.interactiveBgLight}; // ✅ З теми\n  border-left: 5px solid ${({ theme }) => theme.interactiveBorderLight}; // ✅ З теми\n  padding: 1.5rem;\n  margin: 2rem 0;\n  border-radius: ${({ theme }) => theme.borderRadius.medium}; // ✅ З теми\n  display: flex;\n  align-items: flex-start;\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n`;\n\nexport const HighlightBoxEmoji = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.xxlarge}; // ✅ З теми\n  margin-right: 1.5rem;\n  line-height: 1;\n`;\n\nexport const HighlightBoxContent = styled.div`\n  flex-grow: 1;\n`;\n\nexport const HighlightBoxTitle = styled.h4`\n  color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n`;\n","// src/components/InteractiveContent/HighlightBox/HighlightBox.js\nimport React from \"react\";\nimport {\n  HighlightBoxContainer,\n  HighlightBoxContent,\n  HighlightBoxTitle,\n  HighlightBoxEmoji,\n} from \"./HighlightBox.styled\";\n\nconst HighlightBox = ({ title, content, emoji }) => {\n  return (\n    <HighlightBoxContainer>\n      {emoji && <HighlightBoxEmoji>{emoji}</HighlightBoxEmoji>}\n      <HighlightBoxContent>\n        {/* ✅ ВИПРАВЛЕНО: Рендеримо title безпосередньо */}\n        {title && <HighlightBoxTitle>{title}</HighlightBoxTitle>}\n\n        {content && <p>{content}</p>}\n      </HighlightBoxContent>\n    </HighlightBoxContainer>\n  );\n};\n\nexport default HighlightBox;\n","import styled from \"styled-components\";\n\nexport const QuestionPromptContainer = styled.div`\n  background-color: ${({ theme }) => theme.interactiveBgYellow}; // ✅ З теми\n  border: 1px solid ${({ theme }) => theme.interactiveBorderYellow}; // ✅ З теми\n  padding: 1.5rem;\n  margin: 2rem 0;\n  border-radius: ${({ theme }) => theme.borderRadius.medium}; // ✅ З теми\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n`;\n\nexport const QuestionEmoji = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.xxlarge}; // ✅ З теми\n  margin-bottom: 1rem;\n`;\n\nexport const QuestionText = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  margin-bottom: 1rem;\n`;\n\nexport const ToggleAnswerButton = styled.button`\n  background-color: ${({ theme }) => theme.buttonBg}; // ✅ З теми\n  color: ${({ theme }) => theme.buttonColor}; // ✅ З теми\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small}; // ✅ З теми\n  cursor: pointer;\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ✅ З теми\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n  }\n`;\n\nexport const AnswerText = styled.div`\n  background-color: ${({ theme }) => theme.background}; // ✅ З теми\n  border-left: 3px solid ${({ theme }) => theme.successColor}; // ✅ З теми\n  padding: 1rem;\n  margin-top: 1.5rem;\n  font-style: italic;\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  border-radius: ${({ theme }) => theme.borderRadius.small}; // ✅ З теми\n  width: 100%;\n`;\n","import React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\"; // Імпортуємо motion та AnimatePresence\nimport {\n  QuestionPromptContainer,\n  QuestionText,\n  ToggleAnswerButton,\n  AnswerText,\n  QuestionEmoji,\n} from \"./QuestionPrompt.styled\";\n\nconst QuestionPrompt = ({ question, answer, emoji }) => {\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  const handleToggleAnswer = () => {\n    setShowAnswer(!showAnswer);\n  };\n\n  return (\n    <QuestionPromptContainer>\n      <QuestionEmoji>{emoji || \"❓\"}</QuestionEmoji>\n      <QuestionText>{question}</QuestionText>\n      {answer && (\n        <ToggleAnswerButton onClick={handleToggleAnswer}>\n          {showAnswer ? \"Сховати відповідь\" : \"Показати відповідь\"}\n        </ToggleAnswerButton>\n      )}\n      {/* Використовуємо AnimatePresence для входу/виходу анімації */}\n      <AnimatePresence>\n        {showAnswer && answer && (\n          <motion.div\n            // Початковий стан: висота 0, прозорість 0\n            initial={{ height: 0, opacity: 0, overflow: \"hidden\" }}\n            // Кінцевий стан: автоматична висота, прозорість 1\n            animate={{ height: \"auto\", opacity: 1 }}\n            // Стан виходу: висота 0, прозорість 0\n            exit={{ height: 0, opacity: 0 }}\n            // Параметри переходу для жвавості\n            transition={{\n              duration: 0.3, // Тривалість анімації\n              ease: [0.4, 0, 0.2, 1], // Крива Безьє для \"жвавого\" відчуття (ease-in-out-cubic)\n            }}\n          >\n            <AnswerText>{answer}</AnswerText>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </QuestionPromptContainer>\n  );\n};\n\nexport default QuestionPrompt;\n","import styled from \"styled-components\";\n\nexport const ListContainer = styled.div`\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 0 1rem;\n\n  @media (min-width: 768px) {\n    padding: 0;\n  }\n`;\n\nexport const Title = styled.h2`\n  color: ${({ theme }) => theme.accentColor};\n  font-size: ${({ theme }) => theme.fontSizes.xLarge};\n  padding: 0;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  font-weight: bold;\n  line-height: 1.3;\n\n  @media (max-width: 768px) {\n    font-size: ${({ theme }) => theme.fontSizes.large};\n    margin-bottom: 0.1rem;\n  }\n`;\n\nexport const CardsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 2rem;\n  justify-content: center;\n  align-items: stretch;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 1.5rem;\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n`;\n\nexport const CardWrapper = styled.article`\n  background: ${({ theme }) => theme.cardBackground || theme.background};\n  border-radius: ${({ theme }) => theme.borderRadius.large};\n  padding: 1rem;\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  transition: transform 0.25s ease, box-shadow 0.25s ease, border-color 0.25s ease;\n  overflow: hidden;\n  position: relative;\n  border: 1px solid ${({ theme }) => theme.cardBorder || theme.borderColor};\n  will-change: transform, box-shadow, height; /* 'height' тут не потрібен, якщо Framer Motion його анімує на дочірньому елементі */\n  outline: none;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: ${({ theme }) => theme.shadows.medium};\n    border-color: ${({ theme }) => theme.primaryColor};\n  }\n\n  &:focus-within {\n    box-shadow: ${({ theme }) => theme.shadows.medium};\n    transform: translateY(-5px);\n  }\n\n  &[tabindex=\"0\"]:focus-visible {\n    box-shadow: ${({ theme }) => theme.shadows.medium};\n    transform: translateY(-5px);\n  }\n`;\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.2rem;\n`;\n\nexport const Emoji = styled.span`\n  font-size: 2rem;\n  margin-right: 0.8rem;\n  line-height: 1;\n  filter: grayscale(10%);\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n`;\n\nexport const CardTitle = styled.h3`\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  color: ${({ theme }) => theme.color};\n  margin: 0;\n  line-height: 1.3;\n`;\n\nexport const CardContentWrapper = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  line-height: 1.6;\n  color: ${({ theme }) => theme.color};\n  flex: 1;\n  position: relative;\n  width: 100%;\n\n  padding-bottom: ${({ isExpanded }) => (isExpanded ? \"5.5rem\" : \"0\")};\n\n  p {\n    margin-bottom: 1em;\n  }\n\n  p:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: ${({ theme }) => theme.cardBackground || theme.background};\n  border-bottom-left-radius: ${({ theme }) => theme.borderRadius.large};\n  border-bottom-right-radius: ${({ theme }) => theme.borderRadius.large};\n  display: flex;\n  justify-content: flex-start;\n  padding: 0.5rem 1rem;\n  box-sizing: border-box;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: -3rem;\n    left: 0;\n    width: 100%;\n    height: 3rem;\n    background: linear-gradient(\n      to bottom,\n      rgba(\n          ${({ theme }) => {\n            const bg = theme.cardBackground || theme.background;\n            const hexToRgb = hex =>\n              hex\n                .replace(\n                  /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n                  (m, r, g, b) => \"#\" + r + r + g + g + b + b\n                )\n                .substring(1)\n                .match(/.{2}/g)\n                .map(x => parseInt(x, 16));\n            const rgb = hexToRgb(bg);\n            return rgb ? rgb.join(\",\") : \"255,255,255\";\n          }},\n          0\n        )\n        0%,\n      rgba(\n          ${({ theme }) => {\n            const bg = theme.cardBackground || theme.background;\n            const hexToRgb = hex =>\n              hex\n                .replace(\n                  /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n                  (m, r, g, b) => \"#\" + r + r + g + g + b + b\n                )\n                .substring(1)\n                .match(/.{2}/g)\n                .map(x => parseInt(x, 16));\n            const rgb = hexToRgb(bg);\n            return rgb ? rgb.join(\",\") : \"255,255,255\";\n          }},\n          0.9\n        )\n        100%\n    );\n    pointer-events: none;\n  }\n`;\n\nexport const ReadMoreButton = styled.button`\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.buttonBg};\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  font-weight: 700;\n  cursor: pointer;\n  padding: 0.5rem 0;\n  align-self: flex-start;\n  transition: color 0.2s ease-in-out, transform 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  z-index: 1;\n\n  &:hover {\n    border: none;\n    box-shadow: none;\n    color: ${({ theme }) => theme.hoverBtn};\n    transform: ${({ isExpanded }) => (isExpanded ? \"translateY(-2px)\" : \"translateY(2px)\")};\n  }\n`;\n","import React, { useReducer, useCallback, useRef, useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\"; // AnimatePresence не потрібен, оскільки елементи не монтуються/демонтуються\nimport {\n  ListContainer,\n  Title,\n  CardsGrid,\n  CardWrapper,\n  CardHeader,\n  Emoji,\n  CardTitle,\n  CardContentWrapper,\n  ReadMoreButton,\n  ButtonWrapper,\n} from \"./ListCards.styled\";\n\n// Reducer для управління станом активного рядка\n// Тепер state буде зберігати індекс активного ряду, або null, якщо жоден ряд не активний\nconst expansionReducer = (state, action) => {\n  switch (action.type) {\n    case \"ACTIVATE_ROW\":\n      return action.payload.rowIndex;\n    case \"DEACTIVATE_ROW\":\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst PREVIEW_HEIGHT = 160;\n\nconst Card = React.memo(\n  ({ card, index, isExpanded, toggleExpand, collapseCard, handleRowBlur }) => {\n    const contentRef = useRef(null);\n    const [isOverflowing, setIsOverflowing] = useState(false);\n    const [contentFullHeight, setContentFullHeight] = useState(PREVIEW_HEIGHT);\n\n    useEffect(() => {\n      const checkOverflow = () => {\n        if (contentRef.current) {\n          const { scrollHeight } = contentRef.current;\n          setIsOverflowing(scrollHeight > PREVIEW_HEIGHT);\n          if (scrollHeight > PREVIEW_HEIGHT) {\n            setContentFullHeight(scrollHeight);\n          } else {\n            setContentFullHeight(PREVIEW_HEIGHT);\n          }\n        }\n      };\n\n      checkOverflow();\n      window.addEventListener(\"resize\", checkOverflow);\n      const timeoutId = setTimeout(checkOverflow, 150);\n\n      return () => {\n        window.removeEventListener(\"resize\", checkOverflow);\n        clearTimeout(timeoutId);\n      };\n    }, [card.content]);\n\n    useEffect(() => {\n      if (isExpanded && contentRef.current) {\n        setContentFullHeight(contentRef.current.scrollHeight);\n      } else if (!isExpanded) {\n        setContentFullHeight(PREVIEW_HEIGHT);\n      }\n    }, [isExpanded]);\n\n    return (\n      // Використовуємо handleRowBlur на CardWrapper, щоб обробляти втрату фокусу з ряду\n      <CardWrapper\n        onBlur={handleRowBlur} // Новий обробник\n        tabIndex={isOverflowing ? 0 : -1}\n        aria-expanded={isExpanded}\n      >\n        <CardHeader>\n          <Emoji role=\"img\" aria-label={`Emoji for ${card.title}`}>\n            {card.emoji}\n          </Emoji>\n          <CardTitle>{card.title}</CardTitle>\n        </CardHeader>\n\n        <motion.div\n          layout\n          initial={{ height: PREVIEW_HEIGHT }}\n          animate={{\n            height: isExpanded ? contentFullHeight : PREVIEW_HEIGHT,\n            opacity: 1,\n          }}\n          transition={{\n            duration: 0.25, // Тривалість анімації\n            ease: [0.4, 0, 0.2, 1],\n          }}\n          style={{ overflow: \"hidden\", width: \"100%\" }}\n        >\n          <CardContentWrapper ref={contentRef} isExpanded={isExpanded} id={`card-content-${index}`}>\n            {card.content}\n          </CardContentWrapper>\n        </motion.div>\n\n        {isOverflowing && (\n          <ButtonWrapper isExpanded={isExpanded}>\n            <ReadMoreButton\n              onClick={e => {\n                e.stopPropagation();\n                toggleExpand(index);\n              }}\n              aria-controls={`card-content-${index}`}\n              tabIndex={0}\n              isExpanded={isExpanded}\n            >\n              {isExpanded ? <>Згорнути</> : <>Читати далі</>}\n            </ReadMoreButton>\n          </ButtonWrapper>\n        )}\n      </CardWrapper>\n    );\n  }\n);\n\nconst ListCards = ({ title, cards }) => {\n  // activeRowIndex зберігатиме індекс активного ряду (або null)\n  const [activeRowIndex, dispatch] = useReducer(expansionReducer, null);\n  const [columnCount, setColumnCount] = useState(3); // За замовчуванням 3 колонки\n  const gridRef = useRef(null); // Реф для CardsGrid\n\n  // Функція для визначення кількості колонок\n  const getColumnCount = useCallback(() => {\n    // Визначення кількості колонок на основі ширини вікна\n    if (window.innerWidth <= 768) {\n      return 1;\n    } else if (window.innerWidth <= 1200) {\n      return 2;\n    } else {\n      return 3;\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setColumnCount(getColumnCount());\n      // При зміні кількості колонок скидаємо активний ряд\n      dispatch({ type: \"DEACTIVATE_ROW\" });\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    // Встановлюємо початкове значення при монтуванні\n    setColumnCount(getColumnCount());\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [getColumnCount]);\n\n  // Ця функція активує ряд\n  const toggleExpand = useCallback(\n    index => {\n      const clickedRowIndex = Math.floor(index / columnCount);\n      // Якщо клікнуто на картку вже активного ряду, то закриваємо весь ряд\n      if (activeRowIndex === clickedRowIndex) {\n        dispatch({ type: \"DEACTIVATE_ROW\" });\n      } else {\n        // Інакше активуємо новий ряд\n        dispatch({ type: \"ACTIVATE_ROW\", payload: { rowIndex: clickedRowIndex } });\n      }\n    },\n    [activeRowIndex, columnCount]\n  );\n\n  // Функція для обробки втрати фокусу з ряду карток\n  const handleRowBlur = useCallback(e => {\n    // Перевіряємо, чи новий фокус НЕ знаходиться всередині gridRef\n    // (тобто, фокус перемістився за межі сітки карток)\n    if (gridRef.current && !gridRef.current.contains(e.relatedTarget)) {\n      dispatch({ type: \"DEACTIVATE_ROW\" });\n    }\n  }, []);\n\n  const collapseCard = useCallback(index => {\n    // Ця функція більше не використовується безпосередньо, але залишаємо для повноти\n    // Якщо потрібно буде закрити окрему картку, її можна використовувати\n    dispatch({ type: \"DEACTIVATE_ROW\" }); // Закриває весь ряд, якщо фокус втрачено\n  }, []);\n\n  return (\n    <ListContainer>\n      {title && <Title>{title}</Title>}\n      <CardsGrid ref={gridRef}>\n        {\" \"}\n        {/* Призначаємо реф для відстеження фокусу */}\n        {cards.map((card, index) => {\n          const cardRowIndex = Math.floor(index / columnCount);\n          // isExpanded тепер залежить від того, чи є її ряд активним\n          const isCardExpanded = activeRowIndex === cardRowIndex;\n\n          return (\n            <Card\n              key={index}\n              card={card}\n              index={index}\n              isExpanded={isCardExpanded} // Передаємо новий стан розширення\n              toggleExpand={toggleExpand}\n              collapseCard={collapseCard} // Можна прибрати, якщо не використовується\n              handleRowBlur={handleRowBlur} // Передаємо обробник blur\n            />\n          );\n        })}\n      </CardsGrid>\n    </ListContainer>\n  );\n};\n\nexport default ListCards;\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nexport const TimelineContainer = styled.div`\n  margin: 3rem 0;\n  position: relative;\n  padding-left: 30px;\n  padding-right: 15px; /* Відступ для вертикальної лінії */\n  overflow-x: hidden;\n  padding-bottom: 0;\n\n  /* Вертикальна лінія */\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: 12px;\n    top: 0;\n    bottom: 0;\n    width: 2px;\n    background-color: ${({ theme }) => theme.borderColor};\n    z-index: 0;\n  }\n\n  ${({ theme }) => theme.media.down(\"sm\")`\n    padding-left: 20px;\n    &::before {\n      left: 9px;\n    }\n  `}\n`;\n\nexport const HorizontalLine = styled.div`\n  display: none;\n`;\n\nexport const TimelineEventWrapper = styled(motion.div)`\n  position: relative;\n  margin-bottom: 2rem;\n  padding-left: 30px;\n  text-align: left;\n\n  ${({ theme }) => theme.media.down(\"sm\")`\n    padding-left: 20px;\n    margin-bottom: 1.5rem;\n  `}\n`;\n\nexport const EventDot = styled(motion.div)`\n  position: absolute;\n  left: 0;\n  top: 5px; /* Вирівнювання по вертикалі з верхньою частиною EventContent */\n  width: 12px;\n  height: 12px;\n  background-color: ${({ theme }) => theme.accentColor};\n  border-radius: 50%;\n  border: 2px solid ${({ theme }) => theme.background};\n  z-index: 1;\n  transform-origin: center;\n\n  ${({ theme }) => theme.media.down(\"sm\")`\n    width: 10px;\n    height: 10px;\n    border: 1px solid ${({ theme }) => theme.background};\n  `}\n`;\n\nexport const EventContent = styled(motion.div)`\n  background-color: ${({ theme }) => theme.cardBackground};\n  padding: 1rem 1rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  min-height: auto;\n  display: flex;\n  flex-direction: column; /* Основний вміст картки йде стовпчиком */\n  justify-content: center;\n  position: relative; /* Щоб EventTitle міг використовувати flex */\n  cursor: pointer;\n`;\n\n// EventTitle тепер знову буде головним flex-контейнером для року/назви та іконки\nexport const EventTitle = styled.h4`\n  color: ${({ theme }) => theme.accentColor};\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  margin: 0; /* Прибираємо всі стандартні відступи h4 */\n  font-weight: bold;\n  line-height: 1.3;\n\n  display: flex; /* РОБИМО EventTitle FLEX-КОНТЕЙНЕРОМ */\n  flex-direction: row; /* Рік/назва та іконка в рядок */\n  justify-content: space-between; /* Розносимо їх по краях */\n  align-items: flex-start; /* Вирівнюємо по верху, якщо вміст різний */\n\n  /* Контейнер для року та назви */\n  & > div:first-of-type {\n    display: flex;\n    flex-direction: column; /* Рік над назвою */\n    align-items: flex-start; /* Вирівнюємо по лівому краю */\n    flex-grow: 1; /* Дозволяємо цьому блоку займати весь доступний простір */\n    margin-right: 10px; /* Відступ від іконки, щоб не було тісно */\n  }\n\n  /* Стилі для іконки (motion.span), яка є прямим нащадком EventTitle */\n  & > span {\n    flex-shrink: 0; /* Щоб іконка не стискалася */\n    line-height: 1.3; /* Вирівнюємо по заголовку */\n    font-size: ${({ theme }) => theme.fontSizes.large}; /* Збільшимо розмір іконки */\n    color: ${({ theme }) => theme.colorSecondary}; /* Можливо, інший колір для контрасту */\n  }\n\n  ${({ theme }) => theme.media.down(\"sm\")`\n    font-size: ${({ theme }) => theme.fontSizes.medium};\n    \n    & > div:first-of-type {\n        margin-right: 8px;\n    }\n    \n    & > span {\n        font-size: ${({ theme }) => theme.fontSizes.medium};\n    }\n  `}\n`;\n\nexport const EventYear = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  color: ${({ theme }) => theme.colorSecondary};\n  margin-bottom: 0.2rem; /* Відступ між роком та заголовком */\n  white-space: nowrap; /* Рік в один рядок */\n  font-weight: normal;\n\n  ${({ theme }) => theme.media.down(\"sm\")`\n    font-size: ${({ theme }) => theme.fontSizes.xsmall};\n  `}\n`;\n\n// ✅ EventDescriptionWrapper ВИДАЛЕНО, оскільки його функціонал у CollapsibleContent.\n// ✅ Його стилі більше не потрібні тут.\n\nexport const EventDescription = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  color: ${({ theme }) => theme.color};\n  line-height: 1.5;\n  margin-bottom: 0;\n  word-wrap: break-word;\n  /* Видалені посилання на EventDescriptionWrapper */\n\n  ${({ theme }) => theme.media.down(\"sm\")`\n    font-size: ${({ theme }) => theme.fontSizes.small};\n  `}\n`;\n\nexport const EventVersesContainer = styled.div`\n  padding-top: 0.2rem;\n  border-top: 1px solid ${({ theme }) => theme.dividerColor};\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  cursor: default;\n  /* Видалені посилання на EventDescriptionWrapper */\n\n  ${({ theme }) => theme.media.down(\"sm\")`\n    gap: 6px;\n    margin-top: ${({ theme }) => theme.spacing.small};\n    padding-top: ${({ theme }) => theme.spacing.xsmall};\n    /* Видалені посилання на EventDescriptionWrapper */\n  `}\n`;\n","import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport styled from \"styled-components\";\n\nconst StyledCollapsibleContent = styled(motion.div)`\n  overflow: hidden;\n`;\n\n// Новий стилізований компонент для внутрішнього вмісту\nconst InnerContentWrapper = styled(motion.div)`\n  padding-top: 0.8rem; /* Перемістили padding-top сюди */\n  /* Зміни в opacity можна застосовувати тут, якщо потрібно */\n`;\n\nconst CollapsibleContent = ({ isOpen, children, ...props }) => {\n  return (\n    <AnimatePresence initial={false}>\n      {isOpen && (\n        <StyledCollapsibleContent\n          initial=\"collapsed\"\n          animate=\"open\"\n          exit=\"collapsed\"\n          variants={{\n            open: { height: \"auto\", opacity: 1 },\n            collapsed: { height: 0, opacity: 0 },\n          }}\n          transition={{\n            duration: 0.25,\n            ease: [0.4, 0, 0.2, 1], // Стандартна крива\n            // type: \"spring\", stiffness: 400, damping: 30  // Можете повернути, якщо звичайний ease не допоможе\n          }}\n          layout // Залишаємо layout для плавних змін розміру\n          {...props}\n        >\n          {/* ✅ Нова обгортка для внутрішнього вмісту */}\n          <InnerContentWrapper\n            // Ці анімації для opacity краще залишити на InnerContentWrapper,\n            // щоб вони анімувалися паралельно з height, але не впливали на layout\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.2, delay: 0.1 }} // Невеликий delay, щоб з'явився після початку розкриття\n          >\n            {children}\n          </InnerContentWrapper>\n        </StyledCollapsibleContent>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default CollapsibleContent;\n","import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useTheme } from \"../../../contexts/ThemeProvider\";\nimport {\n  TimelineContainer,\n  TimelineEventWrapper,\n  EventDot,\n  EventContent,\n  EventTitle,\n  EventDescription,\n  EventYear,\n  EventVersesContainer,\n} from \"./Timeline.styled\";\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\";\nimport CollapsibleContent from \"../../Common/CollapsibleContent/CollapsibleContent\";\n\nconst Timeline = ({ title, events }) => {\n  const { currentTheme } = useTheme();\n  const [activeEventId, setActiveEventId] = useState(null);\n\n  const handleToggle = index => {\n    const newActiveEventId = activeEventId === index ? null : index;\n    setActiveEventId(newActiveEventId);\n  };\n\n  const handleVerseClick = e => {\n    e.stopPropagation();\n  };\n\n  return (\n    <TimelineContainer>\n      {title && (\n        <SectionHeading as=\"h3\" size=\"default\">\n          {title}\n        </SectionHeading>\n      )}\n\n      {events.map((event, index) => (\n        <TimelineEventWrapper\n          key={index}\n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true, amount: 0.5 }}\n          transition={{ duration: 0.5, delay: index * 0.1 }}\n        >\n          <EventDot\n            // ✅ Оновлено: колір точки змінюється лише при активному стані\n            animate={\n              activeEventId === index\n                ? { scale: [1, 1.2, 1], backgroundColor: currentTheme.accentColor } // Активний стан: миготіння та колір акценту\n                : { scale: 1, backgroundColor: currentTheme.accentColor } // Неактивний стан: без анімації scale, колір акценту\n            }\n            transition={{\n              duration: 0.5,\n              repeat: activeEventId === index ? Infinity : 0, // Миготіння лише при активному стані\n              repeatType: \"loop\",\n            }}\n          />\n          <EventContent\n            onClick={() => handleToggle(index)}\n            // ✅ Змінено: Додано окремий transition для whileHover\n            whileHover={{\n              scale: 1.03,\n            }}\n            transition={{\n              scale: { duration: 0.15, ease: \"easeOut\" }, // ✅ Окрема, швидка анімація для масштабу при ховері\n              backgroundColor: { duration: 0.2, ease: \"easeOut\" }, // Анімація фону залишається окремою, але тут не потрібна для ховеру\n            }}\n            animate={{\n              scale: activeEventId === index ? 1.03 : 1,\n              backgroundColor:\n                activeEventId === index ? currentTheme.hoverBg : currentTheme.cardBackground,\n            }}\n          >\n            <EventTitle style={{ cursor: \"pointer\" }}>\n              <div>\n                {event.year && <EventYear>{event.year}</EventYear>}\n                {event.title}\n              </div>\n              <motion.span\n                initial={false}\n                animate={{ rotate: activeEventId === index ? 90 : 0 }}\n                transition={{ duration: 0.2 }}\n                style={{ marginLeft: \"10px\", display: \"inline-block\" }}\n              >\n                ▶\n              </motion.span>\n            </EventTitle>\n\n            <CollapsibleContent isOpen={activeEventId === index}>\n              {event.description && <EventDescription>{event.description}</EventDescription>}\n\n              {event.verses && event.verses.length > 0 && (\n                <EventVersesContainer onClick={handleVerseClick}>\n                  {event.verses.map((verseComponent, verseIndex) =>\n                    React.cloneElement(verseComponent, { key: verseIndex })\n                  )}\n                </EventVersesContainer>\n              )}\n            </CollapsibleContent>\n          </EventContent>\n        </TimelineEventWrapper>\n      ))}\n    </TimelineContainer>\n  );\n};\n\nexport default Timeline;\n","// src/components/InteractiveContent/ContrastDisplay/ContrastDisplay.styled.jsx\nimport styled from \"styled-components\";\n\nexport const ContrastDisplayContainer = styled.div`\n  // ✅ Додано export\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 0 1rem;\n\n  @media (min-width: 768px) {\n    padding: 0;\n  }\n`;\n\nexport const ContrastItemsWrapper = styled.div`\n  // ✅ Додано export\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1.5rem;\n  justify-content: center;\n  align-items: stretch;\n  width: 100%;\n`;\n\nexport const ContrastItem = styled.div`\n  flex: 1 1 auto;\n  max-width: calc(50% - 0.75rem);\n\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n  box-sizing: border-box;\n\n  background-color: ${({ theme }) => theme.cardBackground || theme.background};\n  border: 1px solid ${({ theme }) => theme.borderColor || theme.accentBg};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  transition: all 0.3s ease-in-out;\n\n  background-color: ${props => {\n    if (props.$type === \"positive\") return props.theme.positiveBackground;\n    if (props.$type === \"negative\") return props.theme.negativeBackground;\n    if (props.$type === \"neutral1\") return props.theme.neutralBackground1;\n    if (props.$type === \"neutral2\") return props.theme.neutralBackground2;\n    return props.theme.cardBackground;\n  }};\n  border: 1px solid\n    ${props => {\n      if (props.$type === \"positive\") return props.theme.positiveBorder;\n      if (props.$type === \"negative\") return props.theme.negativeBorder;\n      if (props.$type === \"neutral1\") return props.theme.neutralBorder1;\n      if (props.$type === \"neutral2\") return props.theme.neutralBorder2;\n      return props.theme.cardBorder;\n    }};\n\n  &:hover {\n    box-shadow: ${({ theme }) => theme.shadows.medium};\n    transform: translateY(-2px);\n  }\n\n  @media (max-width: 650px) {\n    max-width: 100%;\n  }\n  min-width: 280px;\n`;\n\nexport const ItemHeading = styled.h4`\n  // ✅ Додано export\n  font-size: 1.3rem;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  color: ${props => {\n    if (props.$type === \"positive\") return props.theme.positiveText;\n    if (props.$type === \"negative\") return props.theme.negativeText;\n    if (props.$type === \"neutral1\") return props.theme.neutralText1;\n    if (props.$type === \"neutral2\") return props.theme.neutralText2;\n    return props.theme.color;\n  }};\n`;\n\nexport const ItemEmoji = styled.span`\n  // ✅ Додано export\n  font-size: 2rem;\n  margin-right: 0.8rem;\n`;\n\nexport const ItemContent = styled.div`\n  // ✅ Додано export\n  font-size: 1rem;\n  line-height: 1.6;\n  color: ${({ theme }) => theme.color};\n\n  p {\n    margin-bottom: 1em;\n  }\n  p:last-child {\n    margin-bottom: 0;\n  }\n`;\n","// src/components/InteractiveContent/ContrastDisplay/ContrastDisplay.jsx\nimport React from \"react\";\n// ✅ ВИПРАВЛЕНО: Імпортуємо всі стилізовані компоненти з ContrastDisplay.styled.jsx\nimport {\n  ContrastDisplayContainer,\n  ContrastItemsWrapper,\n  ContrastItem,\n  ItemHeading,\n  ItemEmoji,\n  ItemContent,\n} from \"./ContrastDisplay.styled\";\n\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\"; // Залишаємо цей імпорт, якщо SectionHeading не перенесено\n\n// --- Компонент ContrastDisplay ---\nconst ContrastDisplay = ({ title, items }) => {\n  if (!items || items.length < 2) {\n    return null; // Потрібно принаймні два елементи для порівняння\n  }\n\n  return (\n    <ContrastDisplayContainer>\n      {title && <SectionHeading as=\"h3\">{title}</SectionHeading>}\n      <ContrastItemsWrapper>\n        {items.map((item, index) => (\n          <ContrastItem key={index} $type={item.type}>\n            <ItemHeading $type={item.type}>\n              {item.emoji && <ItemEmoji>{item.emoji}</ItemEmoji>}\n              {item.heading}\n            </ItemHeading>\n            <ItemContent>{item.content}</ItemContent>\n          </ContrastItem>\n        ))}\n      </ContrastItemsWrapper>\n    </ContrastDisplayContainer>\n  );\n};\n\nexport default ContrastDisplay;\n","import styled from \"styled-components\";\n\nexport const DescriptionWithImageContainer = styled.section`\n  margin: 3rem 0;\n  padding: 20px;\n  background-color: ${({ theme }) => theme.background};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  display: flex;\n  flex-direction: column; /* За замовчуванням стовпець на мобільних */\n  gap: 2rem; /* Відступ між текстовим блоком та ілюстрацією */\n  align-items: center; /* Центрування елементів */\n\n  .content-area {\n    display: flex;\n    flex-direction: column;\n    width: 100%; /* Займає всю ширину контейнера */\n    gap: 1.5rem; /* Відступ між текстовим блоком та зображенням всередині content-area */\n\n    @media (min-width: 768px) {\n      flex-direction: ${({ imagePosition }) => (imagePosition === \"left\" ? \"row-reverse\" : \"row\")};\n      align-items: flex-start; /* Вирівнювання по верху */\n    }\n  }\n\n  /* Якщо у вас є SectionHeading, він має власні стилі.\n     Якщо ви хочете стилізувати h3 безпосередньо тут, можете так: */\n  h3 {\n    text-align: center;\n    margin-bottom: 1.5rem;\n    color: ${({ theme }) => theme.color}; /* Використовуйте змінну з теми */\n    font-size: ${({ theme }) => theme.fontSizes.extraLarge};\n    width: 100%; /* Забезпечує, що заголовок займає всю ширину */\n    @media (min-width: 768px) {\n      text-align: left;\n    }\n  }\n`;\n\nexport const TextContentWrapper = styled.div`\n  flex: 2; /* Дозволяє займати більше місця для тексту */\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  line-height: 1.6;\n  color: ${({ theme }) => theme.color};\n\n  p {\n    margin-bottom: 1em;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  strong {\n    color: ${({ theme }) => theme.accentColor};\n  }\n\n  @media (min-width: 768px) {\n    padding-right: 20px; /* Відступ від зображення на великих екранах */\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  flex: 1; /* Дозволяє займати доступне місце */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  background-color: ${({ theme }) => theme.secondaryBackground};\n  padding: 15px;\n  padding-top: 0; /* Відступ зверху для зображення */\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  box-shadow: ${({ theme }) => theme.shadows.extraSmall};\n  max-width: 100%; /* Забезпечення адаптивності */\n\n  @media (min-width: 768px) {\n    max-width: 45%; /* Приклад, можна налаштувати */\n  }\n`;\n\nexport const StyledImage = styled.img`\n  max-width: 100%;\n  height: auto;\n  border-radius: ${({ theme }) => theme.borderRadius.extraSmall};\n  margin-bottom: 0.5rem;\n`;\n\nexport const ImageCaption = styled.figcaption`\n  /* Перейменував на ImageCaption */\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  color: ${({ theme }) => theme.textColorLight};\n  line-height: 1.4;\n`;\n","import React from \"react\";\nimport {\n  DescriptionWithImageContainer,\n  TextContentWrapper, // Можливо, перейменувати на TextWrapper або DescriptionWrapper\n  ImageWrapper,\n  StyledImage, // Додайте імпорт StyledImage\n  ImageCaption, // Додайте імпорт ImageCaption\n} from \"./DescriptionWithImage.styled\";\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\";\n\n// Компонент очікує пропси, які передаються йому з HomeGroupLessonDisplay\nconst DescriptionWithImage = ({\n  title,\n  content,\n  imageUrl,\n  altText,\n  caption,\n  imagePosition, // Додайте imagePosition до очікуваних пропсів\n}) => {\n  if (!content && !imageUrl) {\n    return null; // Якщо немає ні тексту, ні зображення, нічого не рендеримо\n  }\n\n  return (\n    // Передаємо imagePosition для стилізації, якщо це потрібно для контейнера\n    <DescriptionWithImageContainer imagePosition={imagePosition}>\n      {/* Заголовок для всієї секції */}\n      {title && <SectionHeading as=\"h3\">{title}</SectionHeading>}\n\n      {/* Окремі обгортки для контенту та зображення для гнучкості */}\n      <div className=\"content-area\">\n        {\" \"}\n        {/* Додайте обгортку для flexbox */}\n        {content && (\n          <TextContentWrapper>\n            {content} {/* descriptionContent вже є JSX, рендеримо його напряму */}\n          </TextContentWrapper>\n        )}\n        {imageUrl && (\n          <ImageWrapper>\n            <StyledImage src={imageUrl} alt={altText} />\n            {caption && <ImageCaption>{caption}</ImageCaption>}\n          </ImageWrapper>\n        )}\n      </div>\n    </DescriptionWithImageContainer>\n  );\n};\n\nexport default DescriptionWithImage;\n","// src/components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.jsx\nimport React from \"react\";\nimport Card from \"../../Common/Card/Card\";\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\";\nimport QuizCard from \"../../InteractiveContent/QuizCard/QuizCard\";\nimport RevealCard from \"../../InteractiveContent/RevealCard/RevealCard\";\n\nimport HomeGroupLessonMetaInfo from \"../HomeGroupLessonMetaInfo/HomeGroupLessonMetaInfo\";\nimport Diagram from \"../../InteractiveContent/Diagram/Diagram\";\nimport ImagePlaceholder from \"../../InteractiveContent/ImagePlaceholder/ImagePlaceholder\";\nimport HighlightBox from \"../../InteractiveContent/HighlightBox/HighlightBox\";\nimport QuestionPrompt from \"../../InteractiveContent/QuestionPrompt/QuestionPrompt\";\nimport ListCards from \"../../InteractiveContent/ListCards/ListCards\";\nimport Timeline from \"../../InteractiveContent/Timeline/Timeline\"; // Це вже є!\nimport ContrastDisplay from \"../../InteractiveContent/ContrastDisplay/ContrastDisplay\";\nimport DescriptionWithImage from \"../../InteractiveContent/DescriptionWithImage/DescriptionWithImage\";\n\nimport {\n  HomeGroupLessonDisplayContainer,\n  HomeGroupLessonTextWrapper,\n  HomeGroupLessonTitleWrapper,\n  MainContentWrapper,\n} from \"./HomeGroupLessonDisplay.styled\";\n\nfunction HomeGroupLessonDisplay({ lessonData }) {\n  if (!lessonData) {\n    return <p>Завантаження уроку домашньої групи...</p>;\n  }\n\n  const {\n    title,\n    author,\n    book,\n    chapter,\n    verses,\n    date,\n    duration,\n    theme: lessonTheme,\n    tags,\n    description,\n    sections,\n  } = lessonData;\n\n  return (\n    <HomeGroupLessonDisplayContainer>\n      <HomeGroupLessonTitleWrapper>\n        <h2>{title}</h2>\n        <HomeGroupLessonMetaInfo\n          author={author}\n          book={book}\n          chapter={chapter}\n          verses={verses}\n          date={date}\n          duration={duration}\n          theme={lessonTheme}\n          tags={tags}\n        />\n      </HomeGroupLessonTitleWrapper>\n      <MainContentWrapper>\n        <Card>\n          <HomeGroupLessonTextWrapper>\n            {description && description}\n            {sections.map((section, index) => {\n              switch (section.type) {\n                case \"text\":\n                  return (\n                    <React.Fragment key={index}>\n                      {section.title && (\n                        <SectionHeading\n                          as={section.subtitle ? \"h4\" : \"h3\"}\n                          size={section.subtitle ? \"medium\" : \"default\"}\n                        >\n                          {section.title}\n                        </SectionHeading>\n                      )}\n                      {/* content тепер масив JSX елементів, рендеримо їх напряму */}\n                      {section.content.map((paragraph, pIndex) => (\n                        <React.Fragment key={pIndex}>{paragraph}</React.Fragment>\n                      ))}\n                    </React.Fragment>\n                  );\n                case \"quiz\":\n                  return <QuizCard key={section.id} quizData={section} />;\n                case \"reveal-cards\":\n                  return (\n                    <React.Fragment key={index}>\n                      {section.title && (\n                        <SectionHeading as=\"h3\" size=\"default\">\n                          {section.title}\n                        </SectionHeading>\n                      )}\n                      {section.cards.map(card => (\n                        <RevealCard key={card.id} cardData={card} />\n                      ))}\n                    </React.Fragment>\n                  );\n                case \"highlight-box\":\n                  return <HighlightBox key={index} {...section} />;\n                case \"question-prompt\":\n                  return <QuestionPrompt key={index} {...section} />;\n                case \"list-cards\":\n                  return <ListCards key={index} {...section} />;\n                case \"timeline\":\n                  return <Timeline key={index} {...section} />;\n                case \"contrast-section\":\n                  return <ContrastDisplay key={index} {...section} />;\n\n                case \"diagram\":\n                  return (\n                    <Diagram\n                      key={index}\n                      chartType={section.chartType}\n                      title={section.title}\n                      description={section.description}\n                      chartData={section.chartData}\n                      chartOptions={section.chartOptions}\n                    />\n                  );\n                case \"image-placeholder\":\n                  return (\n                    <ImagePlaceholder\n                      key={index}\n                      title={section.title}\n                      description={section.description}\n                      imageUrl={section.imageUrl}\n                      altText={section.altText}\n                      caption={section.caption}\n                    />\n                  );\n                case \"description-with-image\":\n                  return (\n                    <DescriptionWithImage\n                      key={index}\n                      title={section.title}\n                      content={section.content}\n                      imageUrl={section.imageUrl}\n                      altText={section.altText}\n                      caption={section.caption}\n                      imagePosition={section.imagePosition}\n                    />\n                  );\n\n                default:\n                  console.warn(`Невідомий тип секції: ${section.type}`);\n                  return null;\n              }\n            })}\n          </HomeGroupLessonTextWrapper>\n        </Card>\n      </MainContentWrapper>\n    </HomeGroupLessonDisplayContainer>\n  );\n}\n\nexport default HomeGroupLessonDisplay;\n","// src/components/HomeGroups/HomeGroups.jsx\nimport React, { useEffect, useState } from \"react\"; // ✅ ДОДАНО useState\nimport { HomeGroupsContainer, NoLessonMessage } from \"./HomeGroups.styled\";\nimport HomeGroupLessonDisplay from \"../SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay\";\nimport { homeGroupsContent } from \"../../data/homeGroups/homeGroupsContent\";\nimport { useHomeGroups } from \"../../contexts/HomeGroupsContext\";\n\nconst getLessonMetaDataById = lessonId => {\n  // ✅ ЗМІНЕНО НАЗВУ: тепер отримуємо метадані\n  if (!lessonId) return null;\n\n  for (const categoryKey in homeGroupsContent) {\n    if (homeGroupsContent.hasOwnProperty(categoryKey)) {\n      const lessonsArray = homeGroupsContent[categoryKey];\n      if (Array.isArray(lessonsArray) && lessonsArray.length > 0) {\n        const foundLesson = lessonsArray.find(lesson => lesson.id === lessonId);\n        if (foundLesson) {\n          return foundLesson; // Повертаємо об'єкт з метаданими та loadLesson\n        }\n      }\n    }\n  }\n  return null;\n};\n\nconst HomeGroups = () => {\n  const { selectedHomeGroupLesson, setSelectedHomeGroupLesson } = useHomeGroups();\n  const [loadedLessonContent, setLoadedLessonContent] = useState(null); // ✅ НОВИЙ СТАН: для зберігання завантаженого уроку\n  const [loading, setLoading] = useState(true); // ✅ НОВИЙ СТАН: для індикації завантаження\n\n  // Отримуємо метадані обраного уроку (з loadLesson функцією)\n  const selectedLessonMetaData = getLessonMetaDataById(selectedHomeGroupLesson);\n\n  useEffect(() => {\n    // Встановлюємо перший урок за замовчуванням, якщо жоден не вибрано\n    if (!selectedHomeGroupLesson) {\n      let firstLessonId = null;\n      for (const categoryKey in homeGroupsContent) {\n        if (homeGroupsContent.hasOwnProperty(categoryKey)) {\n          const lessonsArray = homeGroupsContent[categoryKey];\n          if (Array.isArray(lessonsArray) && lessonsArray.length > 0) {\n            firstLessonId = lessonsArray[0].id;\n            break;\n          }\n        }\n      }\n      if (firstLessonId) {\n        setSelectedHomeGroupLesson(firstLessonId);\n      } else {\n        setLoading(false); // Якщо немає уроків взагалі\n      }\n    }\n  }, [selectedHomeGroupLesson, setSelectedHomeGroupLesson]);\n\n  // ✅ НОВИЙ useEffect для завантаження контенту уроку\n  useEffect(() => {\n    const loadLessonContent = async () => {\n      setLoading(true); // Починаємо завантаження\n      setLoadedLessonContent(null); // Очищаємо попередній контент\n\n      if (selectedLessonMetaData && selectedLessonMetaData.loadLesson) {\n        try {\n          const module = await selectedLessonMetaData.loadLesson();\n          // Припускаємо, що module.default містить об'єкт уроку (як nehemiah4.js)\n          setLoadedLessonContent(module.default);\n        } catch (error) {\n          console.error(\"Помилка завантаження уроку:\", error);\n          setLoadedLessonContent(null); // У випадку помилки скидаємо контент\n        } finally {\n          setLoading(false); // Завершуємо завантаження\n        }\n      } else {\n        setLoading(false); // Немає метаданих або функції loadLesson\n      }\n    };\n\n    if (selectedHomeGroupLesson) {\n      // Запускаємо завантаження, лише якщо selectedHomeGroupLesson встановлено\n      loadLessonContent();\n    }\n  }, [selectedLessonMetaData, selectedHomeGroupLesson]); // Залежності: зміни метаданих або ID обраного уроку\n\n  return (\n    <HomeGroupsContainer>\n      {loading ? (\n        <NoLessonMessage>Завантаження уроку...</NoLessonMessage> // Показати, поки урок завантажується\n      ) : loadedLessonContent ? (\n        <HomeGroupLessonDisplay lessonData={loadedLessonContent} /> // Передаємо завантажений контент\n      ) : (\n        <NoLessonMessage>\n          Будь ласка, оберіть урок домашньої групи зі списку в меню.\n        </NoLessonMessage>\n      )}\n    </HomeGroupsContainer>\n  );\n};\n\nexport default HomeGroups;\n","import HomeGroups from \"../components/HomeGroups\";\n\nexport default function HomeGroupsPage() {\n  return <HomeGroups />;\n}\n","// src/components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.styled.js\nimport styled from \"styled-components\";\n\n// Основний контейнер для сторінки уроку домашньої групи\nexport const HomeGroupLessonDisplayContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\n// Обгортка для заголовка та мета-інформації уроку\nexport const HomeGroupLessonTitleWrapper = styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n\n  h2 {\n    font-size: 2.5rem;\n    color: ${props =>\n      props.theme.color}; /* Використовуємо theme.color для основного тексту заголовка */\n    margin-bottom: 0.5rem;\n  }\n`;\n\n// Обгортка для основного вмісту (карток, тексту тощо)\nexport const MainContentWrapper = styled.div`\n  width: 100%;\n`;\n\n// Обгортка для текстового вмісту уроку (всередині Card)\nexport const HomeGroupLessonTextWrapper = styled.div`\n  line-height: 1.8;\n  font-size: 1.1rem;\n  color: ${props => props.theme.color}; /* Основний колір тексту */\n\n  p {\n    margin-bottom: 1em;\n  }\n\n  ul {\n    list-style-type: disc;\n    margin-left: 1.5em;\n    margin-bottom: 1em;\n  }\n\n  ol {\n    list-style-type: decimal;\n    margin-left: 1.5em;\n    margin-bottom: 1em;\n  }\n\n  li {\n    margin-bottom: 0.5em;\n  }\n\n  strong {\n    color: ${props => props.theme.color}; /* Жирний текст залишається основним кольором */\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${props => props.theme.color};\n  }\n`;\n\n// Стилізований компонент для кнопок-посилань на вірші\nexport const VerseButton = styled.button`\n  /* Скидаємо базові стилі кнопок браузера */\n  background: none;\n  border: none;\n  padding: 0;\n  font: inherit; /* Успадковуємо шрифт від батьківського елемента */\n  cursor: pointer; /* Курсор як у посилання */\n  text-decoration: underline; /* Підкреслення, як у посилань */\n  color: ${props => props.theme.accentColor || \"blue\"}; /* Колір посилання з теми (accentColor) */\n  display: inline; /* Важливо, щоб кнопка вела себе як inline-елемент тексту */\n\n  &:hover {\n    color: ${props =>\n      props.theme.accentBg ||\n      \"darkblue\"}; /* Зміна кольору при наведенні (можливо, accentBg або інший колір для ховеру) */\n    text-decoration: none; /* Прибираємо підкреслення при наведенні */\n  }\n\n  &:focus {\n    /* ЗАВЖДИ забезпечуйте видимий індикатор фокусу для доступності! */\n    outline: 2px solid ${props => props.theme.accentColor || \"blue\"};\n    outline-offset: 2px; /* Відступ обведення від елемента */\n  }\n\n  &:active {\n    color: ${props => props.theme.accentColor || \"purple\"}; /* Колір при активному натисканні */\n  }\n`;\n","// src/components/InteractiveContent/QuizCard/QuizCard.styled.js\nimport styled from \"styled-components\";\n\nexport const StyledQuizCard = styled.div`\n  background-color: ${({ theme }) => theme.background}; // Основний фон картки\n  border: 1px solid ${({ theme }) => theme.borderColor}; // Межа картки\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05); // Тінь залишена без змін\n\n  // ДОДАНО: Плавні переходи для фону та межі картки\n  transition: background-color 0.4s ease-in-out, border-color 0.4s ease-in-out;\n`;\n\nexport const QuizQuestion = styled.h4`\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: 15px;\n  color: ${({ theme }) => theme.color}; // Колір тексту запитання\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  // ПЕРЕВІРЕНО: Перехід для 'color' вже визначено у GlobalStyles.js для всіх h4 елементів.\n  // Тому тут окремо його додавати не потрібно, він вже працює.\n`;\n\nexport const QuizOptionsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-top: 15px;\n  border-top: 1px solid ${({ theme }) => theme.borderColor}; // Межа для списку опцій\n  padding-top: 15px;\n\n  // ДОДАНО: Плавний перехід для кольору верхньої межі списку опцій\n  transition: border-color 0.4s ease-in-out;\n`;\n\nexport const QuizOptionItem = styled.li`\n  background-color: ${({ theme }) => theme.background}; // Фон опції\n  border: 1px solid ${({ theme }) => theme.borderColor}; // Межа опції\n  border-radius: 5px;\n  padding: 10px 15px;\n  margin-bottom: 10px;\n  font-size: 1rem;\n  color: ${({ theme }) => theme.color}; // Колір тексту опції\n  cursor: pointer;\n\n  // ЧУДОВО! Переходи вже визначені тут, вони охоплюють всі зміни кольорів та фону\n  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.hoverBg}; // Колір фону при наведенні\n  }\n\n  // Стилі для обраної відповіді\n  ${props =>\n    props.isSelected &&\n    `\n    background-color: ${props.theme.accentBg}; // Акцентний фон для обраної\n    border-color: ${props.theme.accentColor}; // Акцентний колір межі для обраної\n    color: ${props.theme.buttonColor}; // Колір тексту для обраної (як buttonColor для контрасту)\n  `}\n\n  // Стилі для правильної відповіді, що відображаються ЛИШЕ ПІСЛЯ ВИБОРУ КОРИСТУВАЧЕМ\n  ${props =>\n    props.showFeedback &&\n    props.isCorrectOption &&\n    `\n    background-color: ${props.theme.successBg}; // Фон для правильної відповіді\n    border-color: ${props.theme.successColor}; // Межа для правильної відповіді\n    color: ${props.theme.successText}; // Текст для правильної відповіді\n    font-weight: bold;\n  `}\n\n  // Стилі для НЕПРАВИЛЬНОЇ відповіді, яку обрав користувач\n  ${props =>\n    props.showFeedback &&\n    props.isSelected &&\n    !props.isCorrectOption &&\n    `\n    background-color: ${props.theme.dangerBg}; // Фон для неправильної відповіді\n    border-color: ${props.theme.dangerColor}; // Межа для неправильної відповіді\n    color: ${props.theme.dangerText}; // Текст для неправильної відповіді\n  `}\n`;\n\nexport const QuizToggleIcon = styled.span`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${({ theme }) => theme.color}; // Колір іконки\n\n  // ДОДАНО: Перехід для кольору іконки (на додаток до transform)\n  transition: transform 0.2s ease-in-out, color 0.2s ease-in-out;\n`;\n","// src/components/InteractiveContent/QuizCard/QuizCard.js\nimport React, { useState } from \"react\";\nimport {\n  StyledQuizCard,\n  QuizQuestion,\n  QuizOptionsList,\n  QuizOptionItem,\n  QuizToggleIcon,\n} from \"./QuizCard.styled\";\n\nexport default function QuizCard({ quizData }) {\n  const [showOptions, setShowOptions] = useState(false);\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null); // Новий стан для обраної відповіді\n\n  const toggleOptions = () => {\n    setShowOptions(!showOptions);\n    // Приховуємо вибрану відповідь, якщо знову закриваємо список\n    if (showOptions) {\n      setSelectedAnswerIndex(null);\n    }\n  };\n\n  const handleOptionClick = index => {\n    setSelectedAnswerIndex(index);\n    // Якщо хочете автоматично показувати результат після вибору, можна тут додати логіку\n    // Наразі просто фіксуємо вибір\n  };\n\n  return (\n    <StyledQuizCard>\n      <QuizQuestion onClick={toggleOptions}>\n        {quizData.question}\n        <QuizToggleIcon isActive={showOptions}>{showOptions ? \"−\" : \"+\"}</QuizToggleIcon>\n      </QuizQuestion>\n\n      {showOptions && (\n        <QuizOptionsList>\n          {quizData.options.map((option, index) => (\n            <QuizOptionItem\n              key={index}\n              onClick={() => handleOptionClick(index)} // Обробник кліку на опцію\n              isSelected={selectedAnswerIndex === index} // Проп для стилізації обраної відповіді\n              isCorrectOption={option.isCorrect} // Проп для стилізації правильної відповіді (не змінює поведінку, але впливає на вигляд)\n              showFeedback={selectedAnswerIndex !== null} // Показувати фідбек лише після вибору відповіді\n            >\n              {option.text}\n            </QuizOptionItem>\n          ))}\n        </QuizOptionsList>\n      )}\n    </StyledQuizCard>\n  );\n}\n"],"names":["StyledRevealCard","styled","div","_ref","theme","background","_ref2","borderColor","_ref3","borderRadius","medium","_ref4","shadows","small","_ref5","CardTitle","_ref6","accentBg","_ref7","buttonColor","_ref8","fontSizes","large","_ref9","accentBgHover","_ref0","xlarge","_ref1","CardContent","_ref10","_ref11","color","_ref12","accentColor","_ref13","colorSecondary","_ref14","StyledToggleButton","button","props","isActive","navActive","ToggleButton","onClick","_jsxs","children","RevealCard","cardData","isRevealed","setIsRevealed","useState","toggleReveal","emoji","_jsx","title","content","StyledHeading","h3","size","as","StyledCard","section","Card","HomeGroupsContainer","NoLessonMessage","p","MetaInfoContainer","tagBg","tagColor","author","book","chapter","verses","date","duration","tags","length","className","map","tag","index","DiagramContainer","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","RadialLinearScale","Title","Tooltip","Legend","Filler","renderChart","chartType","chartData","chartOptions","Line","data","options","Bar","Pie","Doughnut","PolarArea","Radar","Bubble","Scatter","description","currentTheme","useTheme","memoizedChartData","useMemo","getChartDataWithTheme","themeColors","type","datasets","newChartData","dataset","newDataset","dynamicColors","navBg","interactiveBgLight","interactiveBorderLight","interactiveBgYellow","interactiveBorderYellow","buttonBg","successColor","dangerColor","backgroundColor","Array","isArray","i","dataPointsCount","from","_","pointBackgroundColor","pointBorderColor","hoverBackgroundColor","hoverBg","hoverBorderColor","fill","memoizedChartOptions","getChartOptionsWithTheme","_options$plugins","_options$scales","_options$scales2","newOptions","responsive","maintainAspectRatio","layout","padding","left","right","top","bottom","plugins","legend","display","includes","labels","font","boxWidth","position","align","tooltip","bodyFont","titleFont","scales","y","border","ticks","grid","x","cutout","customLegendItems","_memoizedChartData$da","colors","label","text","style","flexDirection","width","height","flexGrow","minWidth","maxWidth","flexShrink","paddingLeft","overflowY","maxHeight","justifyContent","item","alignItems","marginBottom","marginRight","marginTop","fontSize","wordBreak","wordWrap","whiteSpace","lineHeight","ImageContainer","StyledImage","img","ImageCaption","imageUrl","caption","altText","src","alt","HighlightBoxContainer","HighlightBoxEmoji","span","xxlarge","HighlightBoxContent","HighlightBoxTitle","h4","QuestionPromptContainer","QuestionEmoji","QuestionText","ToggleAnswerButton","AnswerText","question","answer","showAnswer","setShowAnswer","handleToggleAnswer","AnimatePresence","motion","initial","opacity","overflow","animate","exit","transition","ease","ListContainer","h2","xLarge","CardsGrid","CardWrapper","article","cardBackground","cardBorder","primaryColor","CardHeader","Emoji","CardContentWrapper","isExpanded","ButtonWrapper","_ref15","_ref16","_ref17","_ref18","bg","rgb","replace","m","r","g","b","substring","match","parseInt","join","_ref19","ReadMoreButton","_ref20","_ref21","_ref22","hoverBtn","_ref23","expansionReducer","state","action","payload","rowIndex","PREVIEW_HEIGHT","React","card","toggleExpand","collapseCard","handleRowBlur","contentRef","useRef","isOverflowing","setIsOverflowing","contentFullHeight","setContentFullHeight","useEffect","checkOverflow","current","scrollHeight","window","addEventListener","timeoutId","setTimeout","removeEventListener","clearTimeout","onBlur","tabIndex","role","ref","id","e","stopPropagation","_Fragment","cards","activeRowIndex","dispatch","useReducer","columnCount","setColumnCount","gridRef","getColumnCount","useCallback","innerWidth","handleResize","clickedRowIndex","Math","floor","contains","relatedTarget","cardRowIndex","isCardExpanded","TimelineContainer","media","down","TimelineEventWrapper","EventDot","EventContent","EventTitle","EventYear","xsmall","EventDescription","_ref24","EventVersesContainer","_ref25","dividerColor","_ref26","_ref27","spacing","_ref28","StyledCollapsibleContent","InnerContentWrapper","isOpen","variants","open","collapsed","delay","events","activeEventId","setActiveEventId","handleVerseClick","SectionHeading","event","whileInView","viewport","once","amount","scale","repeat","Infinity","repeatType","handleToggle","whileHover","cursor","year","rotate","marginLeft","CollapsibleContent","verseComponent","verseIndex","key","ContrastDisplayContainer","ContrastItemsWrapper","ContrastItem","$type","positiveBackground","negativeBackground","neutralBackground1","neutralBackground2","positiveBorder","negativeBorder","neutralBorder1","neutralBorder2","ItemHeading","positiveText","negativeText","neutralText1","neutralText2","ItemEmoji","ItemContent","items","heading","DescriptionWithImageContainer","imagePosition","extraLarge","TextContentWrapper","ImageWrapper","secondaryBackground","extraSmall","figcaption","textColorLight","lessonData","lessonTheme","sections","HomeGroupLessonDisplayContainer","HomeGroupLessonTitleWrapper","HomeGroupLessonMetaInfo","MainContentWrapper","HomeGroupLessonTextWrapper","subtitle","paragraph","pIndex","QuizCard","quizData","HighlightBox","QuestionPrompt","ListCards","Timeline","ContrastDisplay","Diagram","ImagePlaceholder","DescriptionWithImage","console","warn","HomeGroups","selectedHomeGroupLesson","setSelectedHomeGroupLesson","useHomeGroups","loadedLessonContent","setLoadedLessonContent","loading","setLoading","selectedLessonMetaData","lessonId","categoryKey","homeGroupsContent","hasOwnProperty","lessonsArray","foundLesson","find","lesson","getLessonMetaDataById","firstLessonId","async","loadLesson","module","default","error","loadLessonContent","HomeGroupLessonDisplay","HomeGroupsPage","VerseButton","StyledQuizCard","QuizQuestion","QuizOptionsList","ul","QuizOptionItem","li","isSelected","showFeedback","isCorrectOption","successBg","successText","dangerBg","dangerText","QuizToggleIcon","showOptions","setShowOptions","selectedAnswerIndex","setSelectedAnswerIndex","toggleOptions","option","handleOptionClick","isCorrect"],"sourceRoot":""}