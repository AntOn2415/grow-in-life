{"version":3,"file":"static/js/58.3acb41a2.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/helpers/helpers.dataset.ts","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getAxisCount() {\n    return this._getAxis().length;\n  }\n\n  getFirstScaleIdForIndexAxis() {\n    const scales = this.chart.scales;\n    const indexScaleId = this.chart.options.indexAxis;\n    return Object.keys(scales).filter(key => scales[key].axis === indexScaleId).shift();\n  }\n\n  _getAxis() {\n    const axis = {};\n    const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n    for (const dataset of this.chart.data.datasets) {\n      axis[valueOrDefault(\n        this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId\n      )] = true;\n    }\n    return Object.keys(axis);\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    const axisCount = this._getAxisCount();\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n      const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n      const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _angleDiff, _normalizeAngle, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\nfunction clipSelf(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, x, y, outerRadius, innerRadius, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n\n  if (innerRadius > 0) {\n    const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n  } else {\n    const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n\n    if (borderJoinStyle === 'round') {\n      ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n    } else if (borderJoinStyle === 'bevel') {\n      const r = 2 * clipWidth * clipWidth;\n      const endX = -r * Math.cos(endAngle + PI / 2) + x;\n      const endY = -r * Math.sin(endAngle + PI / 2) + y;\n      const startX = r * Math.cos(startAngle + PI / 2) + x;\n      const startY = r * Math.sin(startAngle + PI / 2) + y;\n      ctx.lineTo(endX, endY);\n      ctx.lineTo(startX, startY);\n    }\n  }\n  ctx.closePath();\n\n  ctx.moveTo(0, 0);\n  ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  ctx.clip('evenodd');\n}\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset, borderRadius} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n    clipSelf(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n    selfJoin: false,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of a segment -> need to add another point before this,\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of a segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea, getDatasetClipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {chart, index, line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  const meta = chart.getDatasetMeta(index);\n  const clip = getDatasetClipArea(chart, meta);\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis, clip});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale, clip} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  let fillColor = below;\n  if (below !== above) {\n    if (property === 'x') {\n      clipVertical(ctx, target, area.top);\n      fill(ctx, {line, target, color: above, scale, property, clip});\n      ctx.restore();\n      ctx.save();\n      clipVertical(ctx, target, area.bottom);\n    } else if (property === 'y') {\n      clipHorizontal(ctx, target, area.left);\n      fill(ctx, {line, target, color: below, scale, property, clip});\n      ctx.restore();\n      ctx.save();\n      clipHorizontal(ctx, target, area.right);\n      fillColor = above;\n    }\n  }\n  fill(ctx, {line, target, color: fillColor, scale, property, clip});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction clipHorizontal(ctx, target, clipX) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(clipX, firstPoint.y);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(clipX, lastPoint.y);\n    }\n  }\n\n  ctx.lineTo(clipX, target.first().y);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale, clip} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  const chartArea = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n\n  if (property === 'x' || property === 'y') {\n    let left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","props","height","width","redraw","type","options","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","useEffect","chart","nextOptions","setOptions","config","setTimeout","update","React","role","Chart","forwardRef","createTypedChart","registerables","register","Line","LineController","Bar","BarController","Radar","RadarController","Doughnut","DoughnutController","PolarArea","PolarAreaController","Bubble","BubbleController","Pie","PieController","Scatter","ScatterController","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_fullLoop","pointPosition","getPointPositionForValue","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len0","_key0","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","_len1","scaleOptions","_key1","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","clipSelf","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref5","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","fillColor","clipVertical","clipHorizontal","doFill","clipY","lineLoop","clipX","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel"],"sourceRoot":""}