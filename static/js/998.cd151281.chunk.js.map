{"version":3,"file":"static/js/998.cd151281.chunk.js","mappings":"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","sources":["components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.styled.jsx","components/Common/Card/Card.styled.jsx","components/Common/Card/Card.jsx","components/InteractiveContent/QuizCard/QuizCard.styled.jsx","components/InteractiveContent/QuizCard/QuizCard.jsx","components/Common/SectionHeading/SectionHeading.styled.jsx","components/Common/SectionHeading/SectionHeading.jsx","components/InteractiveContent/RevealCard/RevealCard.styled.jsx","components/Common/ToggleButton/ToggleButton.styled.jsx","components/Common/ToggleButton/ToggleButton.jsx","components/InteractiveContent/RevealCard/RevealCard.jsx","components/HomeGroups/HomeGroups.styled.jsx","components/SpecificContentDisplays/HomeGroupLessonMetaInfo/HomeGroupLessonMetaInfo.jsx","components/InteractiveContent/Diagram/Diagram.styled.jsx","components/InteractiveContent/Diagram/Diagram.jsx","utils/chartHelpers.js","components/InteractiveContent/ImagePlaceholder/ImagePlaceholder.styled.jsx","components/InteractiveContent/ImagePlaceholder/ImagePlaceholder.jsx","components/InteractiveContent/HighlightBox/HighlightBox.styled.jsx","components/InteractiveContent/HighlightBox/HighlightBox.jsx","components/InteractiveContent/QuestionPrompt/QuestionPrompt.styled.jsx","components/InteractiveContent/QuestionPrompt/QuestionPrompt.jsx","components/InteractiveContent/ListCards/ListCards.styled.jsx","components/InteractiveContent/ListCards/ListCards.jsx","components/InteractiveContent/Timeline/Timeline.styled.jsx","components/InteractiveContent/Timeline/Timeline.jsx","components/InteractiveContent/ContrastDisplay/ContrastDisplay.styled.jsx","components/InteractiveContent/ContrastDisplay/ContrastDisplay.jsx","components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.jsx","components/HomeGroups/HomeGroups.jsx","pages/HomeGroupsPage.jsx"],"sourcesContent":["// src/components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.styled.js\nimport styled from \"styled-components\";\n\n// Основний контейнер для сторінки уроку домашньої групи\nexport const HomeGroupLessonDisplayContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\n// Обгортка для заголовка та мета-інформації уроку\nexport const HomeGroupLessonTitleWrapper = styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n\n  h2 {\n    font-size: 2.5rem;\n    color: ${props =>\n      props.theme.color}; /* Використовуємо theme.color для основного тексту заголовка */\n    margin-bottom: 0.5rem;\n  }\n`;\n\n// Обгортка для основного вмісту (карток, тексту тощо)\nexport const MainContentWrapper = styled.div`\n  width: 100%;\n`;\n\n// Обгортка для текстового вмісту уроку (всередині Card)\nexport const HomeGroupLessonTextWrapper = styled.div`\n  padding: 1.5rem;\n  line-height: 1.8;\n  font-size: 1.1rem;\n  color: ${props => props.theme.color}; /* Основний колір тексту */\n\n  p {\n    margin-bottom: 1em;\n  }\n\n  ul {\n    list-style-type: disc;\n    margin-left: 1.5em;\n    margin-bottom: 1em;\n  }\n\n  ol {\n    list-style-type: decimal;\n    margin-left: 1.5em;\n    margin-bottom: 1em;\n  }\n\n  li {\n    margin-bottom: 0.5em;\n  }\n\n  strong {\n    color: ${props => props.theme.color}; /* Жирний текст залишається основним кольором */\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${props => props.theme.color};\n    margin-top: 1.5em;\n    margin-bottom: 0.8em;\n  }\n\n  h3 {\n    font-size: 1.6rem;\n  }\n\n  h4 {\n    font-size: 1.3rem;\n  }\n`;\n\n// Стилізований компонент для кнопок-посилань на вірші\nexport const VerseButton = styled.button`\n  /* Скидаємо базові стилі кнопок браузера */\n  background: none;\n  border: none;\n  padding: 0;\n  font: inherit; /* Успадковуємо шрифт від батьківського елемента */\n  cursor: pointer; /* Курсор як у посилання */\n  text-decoration: underline; /* Підкреслення, як у посилань */\n  color: ${props => props.theme.accentColor || \"blue\"}; /* Колір посилання з теми (accentColor) */\n  display: inline; /* Важливо, щоб кнопка вела себе як inline-елемент тексту */\n\n  &:hover {\n    color: ${props =>\n      props.theme.accentBg ||\n      \"darkblue\"}; /* Зміна кольору при наведенні (можливо, accentBg або інший колір для ховеру) */\n    text-decoration: none; /* Прибираємо підкреслення при наведенні */\n  }\n\n  &:focus {\n    /* ЗАВЖДИ забезпечуйте видимий індикатор фокусу для доступності! */\n    outline: 2px solid ${props => props.theme.accentColor || \"blue\"};\n    outline-offset: 2px; /* Відступ обведення від елемента */\n  }\n\n  &:active {\n    color: ${props => props.theme.accentColor || \"purple\"}; /* Колір при активному натисканні */\n  }\n`;\n\n// Якщо у вас були інші експорти, наприклад RevealCardsGrid, додайте їх сюди.\n// export const RevealCardsGrid = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n//   gap: 1.5rem;\n//   margin-top: 1.5rem;\n// `;\n","import styled from \"styled-components\";\n\nexport const StyledCard = styled.section`\n  background-color: ${({ theme }) =>\n    theme.background}; /* Тепер використовує основний колір фону з теми */\n  border-radius: 15px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Тінь залишена без змін */\n  padding: 2rem;\n  margin-bottom: 2rem;\n\n  // ДОДАНО: Плавний перехід для фонового кольору та тіні\n  transition: background-color 0.4s ease-in-out, box-shadow 0.4s ease-in-out;\n`;\n","import React from \"react\";\nimport { StyledCard } from \"./Card.styled\";\n\nexport default function Card({ children }) {\n  return <StyledCard>{children}</StyledCard>;\n}\n","// src/components/InteractiveContent/QuizCard/QuizCard.styled.js\nimport styled from \"styled-components\";\n\nexport const StyledQuizCard = styled.div`\n  background-color: ${({ theme }) => theme.background}; // Основний фон картки\n  border: 1px solid ${({ theme }) => theme.borderColor}; // Межа картки\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05); // Тінь залишена без змін\n\n  // ДОДАНО: Плавні переходи для фону та межі картки\n  transition: background-color 0.4s ease-in-out, border-color 0.4s ease-in-out;\n`;\n\nexport const QuizQuestion = styled.h4`\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: 15px;\n  color: ${({ theme }) => theme.color}; // Колір тексту запитання\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  // ПЕРЕВІРЕНО: Перехід для 'color' вже визначено у GlobalStyles.js для всіх h4 елементів.\n  // Тому тут окремо його додавати не потрібно, він вже працює.\n`;\n\nexport const QuizOptionsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-top: 15px;\n  border-top: 1px solid ${({ theme }) => theme.borderColor}; // Межа для списку опцій\n  padding-top: 15px;\n\n  // ДОДАНО: Плавний перехід для кольору верхньої межі списку опцій\n  transition: border-color 0.4s ease-in-out;\n`;\n\nexport const QuizOptionItem = styled.li`\n  background-color: ${({ theme }) => theme.background}; // Фон опції\n  border: 1px solid ${({ theme }) => theme.borderColor}; // Межа опції\n  border-radius: 5px;\n  padding: 10px 15px;\n  margin-bottom: 10px;\n  font-size: 1rem;\n  color: ${({ theme }) => theme.color}; // Колір тексту опції\n  cursor: pointer;\n\n  // ЧУДОВО! Переходи вже визначені тут, вони охоплюють всі зміни кольорів та фону\n  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.hoverBg}; // Колір фону при наведенні\n  }\n\n  // Стилі для обраної відповіді\n  ${props =>\n    props.isSelected &&\n    `\n    background-color: ${props.theme.accentBg}; // Акцентний фон для обраної\n    border-color: ${props.theme.accentColor}; // Акцентний колір межі для обраної\n    color: ${props.theme.buttonColor}; // Колір тексту для обраної (як buttonColor для контрасту)\n  `}\n\n  // Стилі для правильної відповіді, що відображаються ЛИШЕ ПІСЛЯ ВИБОРУ КОРИСТУВАЧЕМ\n  ${props =>\n    props.showFeedback &&\n    props.isCorrectOption &&\n    `\n    background-color: ${props.theme.successBg}; // Фон для правильної відповіді\n    border-color: ${props.theme.successColor}; // Межа для правильної відповіді\n    color: ${props.theme.successText}; // Текст для правильної відповіді\n    font-weight: bold;\n  `}\n\n  // Стилі для НЕПРАВИЛЬНОЇ відповіді, яку обрав користувач\n  ${props =>\n    props.showFeedback &&\n    props.isSelected &&\n    !props.isCorrectOption &&\n    `\n    background-color: ${props.theme.dangerBg}; // Фон для неправильної відповіді\n    border-color: ${props.theme.dangerColor}; // Межа для неправильної відповіді\n    color: ${props.theme.dangerText}; // Текст для неправильної відповіді\n  `}\n`;\n\nexport const QuizToggleIcon = styled.span`\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: ${({ theme }) => theme.color}; // Колір іконки\n\n  // ДОДАНО: Перехід для кольору іконки (на додаток до transform)\n  transition: transform 0.2s ease-in-out, color 0.2s ease-in-out;\n`;\n","// src/components/InteractiveContent/QuizCard/QuizCard.js\nimport React, { useState } from \"react\";\nimport {\n  StyledQuizCard,\n  QuizQuestion,\n  QuizOptionsList,\n  QuizOptionItem,\n  QuizToggleIcon,\n} from \"./QuizCard.styled\";\n\nexport default function QuizCard({ quizData }) {\n  const [showOptions, setShowOptions] = useState(false);\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null); // Новий стан для обраної відповіді\n\n  const toggleOptions = () => {\n    setShowOptions(!showOptions);\n    // Приховуємо вибрану відповідь, якщо знову закриваємо список\n    if (showOptions) {\n      setSelectedAnswerIndex(null);\n    }\n  };\n\n  const handleOptionClick = index => {\n    setSelectedAnswerIndex(index);\n    // Якщо хочете автоматично показувати результат після вибору, можна тут додати логіку\n    // Наразі просто фіксуємо вибір\n  };\n\n  return (\n    <StyledQuizCard>\n      <QuizQuestion onClick={toggleOptions}>\n        {quizData.question}\n        <QuizToggleIcon isActive={showOptions}>{showOptions ? \"−\" : \"+\"}</QuizToggleIcon>\n      </QuizQuestion>\n\n      {showOptions && (\n        <QuizOptionsList>\n          {quizData.options.map((option, index) => (\n            <QuizOptionItem\n              key={index}\n              onClick={() => handleOptionClick(index)} // Обробник кліку на опцію\n              isSelected={selectedAnswerIndex === index} // Проп для стилізації обраної відповіді\n              isCorrectOption={option.isCorrect} // Проп для стилізації правильної відповіді (не змінює поведінку, але впливає на вигляд)\n              showFeedback={selectedAnswerIndex !== null} // Показувати фідбек лише після вибору відповіді\n            >\n              {option.text}\n            </QuizOptionItem>\n          ))}\n        </QuizOptionsList>\n      )}\n    </StyledQuizCard>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const StyledHeading = styled.h3`\n  color: ${({ theme }) => theme.accentColor}; // ✅ Змінив на accentColor для заголовків секцій\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  margin-top: 2.5rem;\n  margin-bottom: 1.5rem;\n  line-height: 1.2;\n\n  ${props =>\n    props.size === \"default\" &&\n    `\n    font-size: ${props.theme.fontSizes.xlarge}; // ✅ З теми\n  `}\n\n  ${props =>\n    props.size === \"medium\" &&\n    `\n    font-size: ${props.theme.fontSizes.large}; // ✅ З теми\n  `}\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","// src/components/Common/SectionHeading/SectionHeading.js\nimport React from \"react\";\nimport { StyledHeading } from \"./SectionHeading.styled\";\n\n// Компонент SectionHeading\nconst SectionHeading = ({ as = \"h3\", size = \"default\", children }) => {\n  return (\n    <StyledHeading as={as} size={size}>\n      {children} {/* ✅ ВИПРАВЛЕНО: Рендеримо children безпосередньо */}\n    </StyledHeading>\n  );\n};\n\nexport default SectionHeading;\n","import styled from \"styled-components\";\n\nexport const StyledRevealCard = styled.div`\n  background-color: ${({ theme }) => theme.background}; // ✅ З теми\n  border: 1px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  border-radius: ${({ theme }) => theme.borderRadius.medium}; // ✅ З теми\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n  overflow: hidden; /* Щоб вміст не виходив за рамки */\n  transition: box-shadow 0.2s ease-in-out;\n\n  &:hover {\n    box-shadow: ${({ theme }) => theme.shadows.medium}; // ✅ З теми\n  }\n`;\n\nexport const CardTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem 1.5rem;\n  background-color: ${({ theme }) => theme.accentBg}; // ✅ З теми\n  color: ${({ theme }) => theme.buttonColor}; // ✅ З теми (для контрасту на accentBg)\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.accentBgHover || theme.accentBg}; // ✅ З теми\n  }\n\n  span:first-child {\n    /* Для емодзі */\n    margin-right: 0.75rem;\n    font-size: ${({ theme }) => theme.fontSizes.xlarge}; // ✅ З теми\n  }\n\n  a {\n    /* Стилі для посилань всередині заголовка картки */\n    color: ${({ theme }) => theme.buttonColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nexport const CardContent = styled.div`\n  padding: 1.5rem;\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ✅ З теми\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  line-height: 1.6;\n\n  p {\n    margin-bottom: 1rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .bible-quote {\n    font-style: italic;\n    color: ${({ theme }) => theme.colorSecondary}; // ✅ З теми\n    margin-top: 0.5rem;\n    padding-left: 1rem;\n    border-left: 2px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  }\n`;\n","// src/components/Common/ToggleButton/ToggleButton.styled.js\nimport styled from \"styled-components\";\n\nexport const StyledToggleButton = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.2em;\n  cursor: pointer;\n  padding: 5px;\n\n  // Колір кнопки залежить від isActive, використовуючи кольори з теми\n  color: ${props =>\n    props.isActive\n      ? props.theme.accentColor\n      : props.theme.color}; /* Активний: акцентний колір; Неактивний: основний колір тексту */\n\n  // Переходи вже були, це чудово\n  transition: transform 0.2s ease-in-out, color 0.2s ease-in-out;\n  transform: ${props => (props.isActive ? \"rotate(180deg)\" : \"rotate(0deg)\")};\n\n  &:hover {\n    // Колір при наведенні також залежить від isActive та теми\n    // Можна використовувати theme.navActive або додати спеціальний toggleHoverColor до вашої теми\n    color: ${props =>\n      props.isActive\n        ? props.theme.navActive\n        : props.theme\n            .borderColor}; /* Приклад: Активний hover: колір navActive; Неактивний hover: колір borderColor */\n  }\n`;\n","// src/components/Common/ToggleButton/ToggleButton.js\nimport React from \"react\";\nimport { StyledToggleButton } from \"./ToggleButton.styled\";\n\nexport default function ToggleButton({ isActive, onClick }) {\n  return (\n    <StyledToggleButton onClick={onClick} isActive={isActive}>\n      {isActive ? \"▲\" : \"▼\"} {/* Можете використовувати іконки чи інший текст */}\n    </StyledToggleButton>\n  );\n}\n","// src/components/InteractiveContent/RevealCard/RevealCard.js\nimport React, { useState } from \"react\";\nimport { StyledRevealCard, CardContent, CardTitle } from \"./RevealCard.styled\";\nimport ToggleButton from \"../../Common/ToggleButton/ToggleButton\";\n\nexport default function RevealCard({ cardData }) {\n  const [isRevealed, setIsRevealed] = useState(false);\n\n  const toggleReveal = () => setIsRevealed(!isRevealed);\n\n  return (\n    <StyledRevealCard>\n      <CardTitle onClick={toggleReveal}>\n        {cardData.emoji}\n        {/* ✅ ВИПРАВЛЕНО: Рендеримо cardData.title безпосередньо */}\n        <span>{cardData.title}</span>\n        <ToggleButton isActive={isRevealed} onClick={toggleReveal} />\n      </CardTitle>\n      {isRevealed && (\n        // ✅ ВИПРАВЛЕНО: Рендеримо cardData.content безпосередньо\n        <CardContent>{cardData.content}</CardContent>\n      )}\n    </StyledRevealCard>\n  );\n}\n","// src/components/HomeGroups/HomeGroups.styled.jsx\nimport styled from \"styled-components\";\n\n// Перейменовуємо Container на HomeGroupsContainer\nexport const HomeGroupsContainer = styled.div`\n  /* Ваші існуючі стилі для контейнера */\n`;\n\n// Перейменовуємо NoSermonMessage на NoLessonMessage\nexport const NoLessonMessage = styled.p`\n  /* Ваші існуючі стилі для повідомлення */\n  text-align: center;\n  margin-top: 50px;\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colorSecondary};\n`;\n","// src/components/SpecificContentDisplays/HomeGroupLessonMetaInfo/HomeGroupLessonMetaInfo.jsx\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst MetaInfoContainer = styled.div`\n  // Цю назву можна залишити або змінити на HomeGroupLessonMetaInfoContainer\n  font-size: 0.95rem;\n  color: ${({ theme }) => theme.colorSecondary};\n  margin-top: 15px;\n\n  p {\n    margin: 5px 0;\n  }\n\n  span {\n    font-weight: bold;\n    color: ${({ theme }) => theme.color};\n  }\n\n  .lesson-tags {\n    margin-top: 10px;\n    span {\n      display: inline-block;\n      background-color: ${({ theme }) => theme.tagBg};\n      color: ${({ theme }) => theme.tagColor};\n      padding: 4px 8px;\n      border-radius: 4px;\n      margin-right: 8px;\n      margin-bottom: 5px;\n      font-size: 0.85rem;\n    }\n  }\n`;\n\n// Замість LessonMetaInfo використовуємо HomeGroupLessonMetaInfo\nfunction HomeGroupLessonMetaInfo({ author, book, chapter, verses, date, duration, theme, tags }) {\n  return (\n    <MetaInfoContainer>\n      {author && (\n        <p>\n          Автор: <span>{author}</span>\n        </p>\n      )}\n      {(book || chapter || verses) && (\n        <p>\n          Книга:{\" \"}\n          <span>\n            {book} {chapter ? `глава ${chapter}` : \"\"}\n            {verses ? `, вірші ${verses}` : \"\"}\n          </span>\n        </p>\n      )}\n      {date && (\n        <p>\n          Дата: <span>{date}</span>\n        </p>\n      )}\n      {duration && (\n        <p>\n          Тривалість: <span>{duration}</span>\n        </p>\n      )}\n      {theme && (\n        <p>\n          Тема: <span>{theme}</span>\n        </p>\n      )}\n      {tags && tags.length > 0 && (\n        <div className=\"lesson-tags\">\n          {tags.map((tag, index) => (\n            <span key={index}>{tag}</span>\n          ))}\n        </div>\n      )}\n    </MetaInfoContainer>\n  );\n}\n\nexport default HomeGroupLessonMetaInfo;\n","// src/components/InteractiveContent/Diagram/Diagram.styled.js\nimport styled from \"styled-components\";\n\nexport const DiagramContainer = styled.div`\n  width: 100%;\n  max-width: 950px; /* ✅ Збільште це значення, якщо діаграма та легенда не вміщуються */\n  height: 450px; /* ✅ Фіксована висота для всього контейнера */\n  margin: 20px auto;\n  padding: 15px;\n  background-color: ${({ theme }) => theme.background};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n`;\n","// src/components/InteractiveContent/Diagram/Diagram.jsx\nimport React, { useMemo } from \"react\";\nimport { DiagramContainer } from \"./Diagram.styled\";\n\nimport { Line, Bar, Pie, Doughnut, PolarArea, Radar, Bubble, Scatter } from \"react-chartjs-2\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  RadialLinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\n\nimport { useTheme } from \"../../../contexts/ThemeProvider\";\n// ✅ ІМПОРТУЄМО ФУНКЦІЇ З НОВОГО ХЕЛПЕР-ФАЙЛУ\nimport { getChartOptionsWithTheme, getChartDataWithTheme } from \"../../../utils/chartHelpers\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  RadialLinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\n// ✅ renderChart МОЖНА ЗАЛИШИТИ ТУТ АБО ТАКОЖ ВИНЕСТИ\nconst renderChart = (chartType, chartData, chartOptions) => {\n  switch (chartType) {\n    case \"line\":\n      return <Line data={chartData} options={chartOptions} />;\n    case \"bar\":\n      return <Bar data={chartData} options={chartOptions} />;\n    case \"pie\":\n      return <Pie data={chartData} options={chartOptions} />;\n    case \"doughnut\":\n      return <Doughnut data={chartData} options={chartOptions} />;\n    case \"polarArea\":\n      return <PolarArea data={chartData} options={chartOptions} />;\n    case \"radar\":\n      return <Radar data={chartData} options={chartOptions} />;\n    case \"bubble\":\n      return <Bubble data={chartData} options={chartOptions} />;\n    case \"scatter\":\n      return <Scatter data={chartData} options={chartOptions} />;\n    default:\n      return <p>Невідомий тип діаграми: {chartType}</p>;\n  }\n};\n\nfunction Diagram({ title, description, chartType, chartData, chartOptions }) {\n  const { currentTheme } = useTheme();\n\n  // Хуки useMemo тепер викликають імпортовані функції\n  const memoizedChartData = useMemo(() => {\n    return getChartDataWithTheme(chartData, currentTheme, chartType);\n  }, [chartData, currentTheme, chartType]);\n\n  const memoizedChartOptions = useMemo(() => {\n    return getChartOptionsWithTheme({ ...chartOptions, chartType }, currentTheme);\n  }, [chartOptions, currentTheme, chartType]);\n\n  const customLegendItems = useMemo(() => {\n    if (\n      !memoizedChartData ||\n      !memoizedChartData.labels ||\n      !memoizedChartData.datasets ||\n      memoizedChartData.datasets.length === 0\n    ) {\n      return [];\n    }\n    const colors = memoizedChartData.datasets[0]?.backgroundColor || [];\n\n    return memoizedChartData.labels.map((label, index) => ({\n      text: label,\n      color: Array.isArray(colors) ? colors[index % colors.length] : colors,\n    }));\n  }, [memoizedChartData]);\n\n  if (!currentTheme) {\n    return <p>Завантаження діаграми...</p>;\n  }\n\n  return (\n    <DiagramContainer>\n      {title && <h4>{title}</h4>}\n      {description && <p>{description}</p>}\n      <div style={{ display: \"flex\", flexDirection: \"row\", width: \"100%\", height: \"100%\" }}>\n        <div style={{ flexGrow: 1, minWidth: \"0\", maxWidth: \"calc(100% - 320px)\" }}>\n          {\" \"}\n          {/* ✅ Змінено на 320px, щоб відповідати ширині легенди */}\n          {renderChart(chartType, memoizedChartData, memoizedChartOptions)}\n        </div>\n\n        <div\n          style={{\n            width: \"320px\", // ✅ Ширина вашої легенди\n            flexShrink: 0,\n            paddingLeft: \"15px\",\n            overflowY: \"auto\",\n            maxHeight: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          {customLegendItems.map((item, index) => (\n            <div\n              key={index}\n              style={{ display: \"flex\", alignItems: \"flex-start\", marginBottom: \"8px\" }}\n            >\n              <span\n                style={{\n                  display: \"inline-block\",\n                  minWidth: \"15px\",\n                  height: \"15px\",\n                  backgroundColor: item.color,\n                  marginRight: \"8px\",\n                  marginTop: \"3px\",\n                  borderRadius: \"3px\",\n                }}\n              ></span>\n              <span\n                style={{\n                  color: currentTheme.color,\n                  fontSize: \"13px\",\n                  wordBreak: \"break-word\",\n                  wordWrap: \"break-word\",\n                  whiteSpace: \"normal\",\n                  lineHeight: \"1.3\",\n                }}\n              >\n                {item.text}\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n      {!title && !description && !chartData && <p>Діаграма завантажується або відсутні дані.</p>}\n    </DiagramContainer>\n  );\n}\n\nexport default Diagram;\n","// src/utils/chartHelpers.js\n\n/**\n * Повертає опції Chart.js з урахуванням теми.\n * @param {object} options - Початкові опції діаграми.\n * @param {object} themeColors - Об'єкт кольорів поточної теми.\n * @returns {object} Оновлені опції діаграми.\n */\nexport const getChartOptionsWithTheme = (options, themeColors) => {\n  let newOptions = {\n    ...options,\n    responsive: true,\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        left: 5,\n        right: 40,\n        top: 10,\n        bottom: 5,\n      },\n    },\n    plugins: {\n      ...options.plugins,\n      legend: {\n        // Вмикаємо легенду тільки для Line/Bar/Radar/Scatter/Bubble/PolarArea.\n        // Для Pie/Doughnut вона буде вимкнена, оскільки для них використовується кастомна HTML-легенда.\n        display: ![\"pie\", \"doughnut\"].includes(options.chartType),\n        labels: {\n          color: themeColors?.color,\n          font: {\n            size: 12,\n          },\n          boxWidth: 20,\n          padding: 10,\n        },\n        position: \"right\",\n        align: \"center\",\n      },\n      tooltip: {\n        ...options.plugins?.tooltip,\n        bodyFont: {\n          size: 12,\n        },\n        titleFont: {\n          size: 14,\n        },\n      },\n    },\n    scales: {\n      ...options.scales,\n      y: {\n        ...options.scales?.y,\n        border: {\n          display: false,\n        },\n        ticks: {\n          // ✅ ДОДАНО: Вимкнення відображення міток на осі Y\n          display: false,\n          color: themeColors?.color,\n          font: {\n            size: 10,\n          },\n        },\n        grid: {\n          display: false, // Вимкнено лінії сітки на осі Y\n          color: (themeColors?.borderColor || \"#D3D3D3\") + \"80\",\n        },\n      },\n      x: {\n        ...options.scales?.x,\n        border: {\n          display: false,\n        },\n        ticks: {\n          // ✅ ДОДАНО: Вимкнення відображення міток на осі X\n          display: false,\n          color: themeColors?.color,\n          font: {\n            size: 10,\n          },\n        },\n        grid: {\n          display: false, // Вимкнено лінії сітки на осі X\n          color: (themeColors?.borderColor || \"#D3D3D3\") + \"80\",\n        },\n      },\n    },\n  };\n\n  if ([\"doughnut\", \"pie\"].includes(options.chartType)) {\n    newOptions.cutout = options.cutout || \"70%\";\n  }\n\n  if (!newOptions.plugins) newOptions.plugins = {};\n  return newOptions;\n};\n\n/**\n * Повертає дані Chart.js з застосованими кольорами теми.\n * @param {object} data - Початкові дані діаграми.\n * @param {object} themeColors - Об'єкт кольорів поточної теми.\n * @param {string} type - Тип діаграми (для коректного застосування кольорів).\n * @returns {object} Оновлені дані діаграми.\n */\nexport const getChartDataWithTheme = (data, themeColors, type) => {\n  if (!data || !data.datasets) return data;\n\n  if (!themeColors) {\n    return data;\n  }\n\n  const newChartData = { ...data };\n  newChartData.datasets = newChartData.datasets.map(dataset => {\n    const newDataset = { ...dataset };\n\n    const dynamicColors = [\n      themeColors.accentColor,\n      themeColors.navActive,\n      themeColors.accentBg,\n      themeColors.color,\n      themeColors.navBg,\n      themeColors.background,\n      themeColors.borderColor,\n      themeColors.interactiveBgLight,\n      themeColors.interactiveBorderLight,\n      themeColors.interactiveBgYellow,\n      themeColors.interactiveBorderYellow,\n      themeColors.buttonBg,\n      themeColors.successColor,\n      themeColors.dangerColor,\n    ];\n\n    if (\n      !newDataset.backgroundColor ||\n      newDataset.backgroundColor.length === 0 ||\n      newDataset.backgroundColor === \"dynamic\"\n    ) {\n      if (type === \"pie\" || type === \"doughnut\" || type === \"polarArea\") {\n        const dataPointsCount = newDataset.data.length;\n        newDataset.backgroundColor = Array.from(\n          { length: dataPointsCount },\n          (_, i) => dynamicColors[i % dynamicColors.length]\n        );\n        newDataset.borderColor = themeColors.borderColor;\n      } else {\n        newDataset.backgroundColor = themeColors.accentColor + \"B3\";\n        newDataset.borderColor = themeColors.accentColor;\n      }\n    } else if (Array.isArray(newDataset.backgroundColor)) {\n      newDataset.backgroundColor = newDataset.backgroundColor.map((color, i) =>\n        color === \"dynamic\" ? dynamicColors[i % dynamicColors.length] : color\n      );\n      if (!newDataset.borderColor) {\n        newDataset.borderColor = themeColors.borderColor;\n      }\n    }\n\n    if (newDataset.pointBackgroundColor === \"dynamic\") {\n      newDataset.pointBackgroundColor = themeColors.accentColor;\n    }\n    if (newDataset.pointBorderColor === \"dynamic\") {\n      newDataset.pointBorderColor = themeColors.color;\n    }\n    if (newDataset.hoverBackgroundColor === \"dynamic\") {\n      newDataset.hoverBackgroundColor = themeColors.hoverBg;\n    }\n    if (newDataset.hoverBorderColor === \"dynamic\") {\n      newDataset.hoverBorderColor = themeColors.borderColor;\n    }\n    if (newDataset.fill === true) {\n      newDataset.backgroundColor = themeColors.accentBg + \"50\";\n    }\n\n    return newDataset;\n  });\n  return newChartData;\n};\n","// src/components/InteractiveContent/ImagePlaceholder/ImagePlaceholder.styled.js\nimport styled from \"styled-components\";\n\nexport const ImageContainer = styled.div`\n  background-color: ${({ theme }) => theme.background};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 1.5rem;\n  margin: 2rem 0;\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  text-align: center;\n  transition: all 0.4s ease-in-out; /* Додано перехід */\n\n  h4 {\n    margin-bottom: 1rem;\n    color: ${({ theme }) => theme.accentColor};\n    transition: color 0.4s ease-in-out; /* Додано перехід */\n  }\n\n  p {\n    color: ${({ theme }) => theme.color};\n    font-size: ${({ theme }) => theme.fontSizes.medium};\n    margin-bottom: 1.5rem;\n    transition: color 0.4s ease-in-out, font-size 0.4s ease-in-out; /* Додано перехід */\n  }\n`;\n\nexport const StyledImage = styled.img`\n  max-width: 100%;\n  height: auto;\n  border-radius: ${({ theme }) => theme.borderRadius.small};\n  margin-bottom: 1rem;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  transition: border-radius 0.4s ease-in-out; /* Додано перехід */\n`;\n\nexport const ImageCaption = styled.p`\n  font-style: italic;\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  color: ${({ theme }) => theme.color};\n  margin-top: 0.5rem;\n  transition: color 0.4s ease-in-out, font-size 0.4s ease-in-out; /* Додано перехід */\n`;\n","import React from \"react\";\nimport { ImageContainer, StyledImage, ImageCaption } from \"./ImagePlaceholder.styled\"; // Імпортуємо всі потрібні styled-компоненти\n\n// Компонент ImagePlaceholder\nfunction ImagePlaceholder({ imageUrl, caption }) {\n  return (\n    <ImageContainer>\n      {\" \"}\n      {/* Використовуємо ImageContainer як основний обгортковий елемент */}\n      {imageUrl ? (\n        <StyledImage src={imageUrl} alt={caption || \"Зображення\"} /> // Використовуємо StyledImage для самого зображення\n      ) : (\n        <p>Зображення відсутнє.</p>\n      )}\n      {caption && <ImageCaption>{caption}</ImageCaption>}{\" \"}\n      {/* Використовуємо ImageCaption для підпису */}\n    </ImageContainer>\n  );\n}\n\nexport default ImagePlaceholder;\n","import styled from \"styled-components\";\n\nexport const HighlightBoxContainer = styled.div`\n  background-color: ${({ theme }) => theme.interactiveBgLight}; // ✅ З теми\n  border-left: 5px solid ${({ theme }) => theme.interactiveBorderLight}; // ✅ З теми\n  padding: 1.5rem;\n  margin: 2rem 0;\n  border-radius: ${({ theme }) => theme.borderRadius.medium}; // ✅ З теми\n  display: flex;\n  align-items: flex-start;\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n`;\n\nexport const HighlightBoxEmoji = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.xxlarge}; // ✅ З теми\n  margin-right: 1.5rem;\n  line-height: 1;\n`;\n\nexport const HighlightBoxContent = styled.div`\n  flex-grow: 1;\n`;\n\nexport const HighlightBoxTitle = styled.h4`\n  color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n`;\n","// src/components/InteractiveContent/HighlightBox/HighlightBox.js\nimport React from \"react\";\nimport {\n  HighlightBoxContainer,\n  HighlightBoxContent,\n  HighlightBoxTitle,\n  HighlightBoxEmoji,\n} from \"./HighlightBox.styled\";\n\nconst HighlightBox = ({ title, content, emoji }) => {\n  return (\n    <HighlightBoxContainer>\n      {emoji && <HighlightBoxEmoji>{emoji}</HighlightBoxEmoji>}\n      <HighlightBoxContent>\n        {/* ✅ ВИПРАВЛЕНО: Рендеримо title безпосередньо */}\n        {title && <HighlightBoxTitle>{title}</HighlightBoxTitle>}\n\n        {content && <p>{content}</p>}\n      </HighlightBoxContent>\n    </HighlightBoxContainer>\n  );\n};\n\nexport default HighlightBox;\n","import styled from \"styled-components\";\n\nexport const QuestionPromptContainer = styled.div`\n  background-color: ${({ theme }) => theme.interactiveBgYellow}; // ✅ З теми\n  border: 1px solid ${({ theme }) => theme.interactiveBorderYellow}; // ✅ З теми\n  padding: 1.5rem;\n  margin: 2rem 0;\n  border-radius: ${({ theme }) => theme.borderRadius.medium}; // ✅ З теми\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n`;\n\nexport const QuestionEmoji = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.xxlarge}; // ✅ З теми\n  margin-bottom: 1rem;\n`;\n\nexport const QuestionText = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  margin-bottom: 1rem;\n`;\n\nexport const ToggleAnswerButton = styled.button`\n  background-color: ${({ theme }) => theme.buttonBg}; // ✅ З теми\n  color: ${({ theme }) => theme.buttonColor}; // ✅ З теми\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small}; // ✅ З теми\n  cursor: pointer;\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ✅ З теми\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n  }\n`;\n\nexport const AnswerText = styled.div`\n  background-color: ${({ theme }) => theme.background}; // ✅ З теми\n  border-left: 3px solid ${({ theme }) => theme.successColor}; // ✅ З теми\n  padding: 1rem;\n  margin-top: 1.5rem;\n  font-style: italic;\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  border-radius: ${({ theme }) => theme.borderRadius.small}; // ✅ З теми\n  width: 100%;\n`;\n","import React, { useState } from \"react\";\nimport {\n  QuestionPromptContainer,\n  QuestionText,\n  ToggleAnswerButton,\n  AnswerText,\n  QuestionEmoji,\n} from \"./QuestionPrompt.styled\";\n\nconst QuestionPrompt = ({ question, answer, emoji }) => {\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  const handleToggleAnswer = () => {\n    setShowAnswer(!showAnswer);\n  };\n\n  return (\n    <QuestionPromptContainer>\n      <QuestionEmoji>{emoji || \"❓\"}</QuestionEmoji>\n      <QuestionText>{question}</QuestionText>\n      {answer && (\n        <ToggleAnswerButton onClick={handleToggleAnswer}>\n          {showAnswer ? \"Сховати відповідь\" : \"Показати відповідь\"}\n        </ToggleAnswerButton>\n      )}\n      {showAnswer && answer && <AnswerText>{answer}</AnswerText>}\n    </QuestionPromptContainer>\n  );\n};\n\nexport default QuestionPrompt;\n","// src/components/InteractiveContent/ListCards/ListCards.styled.jsx\nimport styled from \"styled-components\";\n\nexport const ListCardsContainer = styled.div`\n  margin: 3rem 0;\n  display: grid;\n  gap: 1.5rem;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  align-items: stretch;\n`;\n\nexport const ExpandedContentWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 10;\n  background: ${({ theme }) => theme.background};\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\n  padding: 1.5rem;\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  box-sizing: border-box;\n\n  opacity: 1;\n  transform: scale(1);\n  transition: opacity 0.3s ease-out, transform 0.3s ease-out;\n\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  &::-webkit-scrollbar-track {\n    background: ${({ theme }) => theme.borderColor};\n    border-radius: 10px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.accentBg};\n    border-radius: 10px;\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background: ${({ theme }) => theme.accentColor};\n  }\n\n  div {\n    font-size: ${({ theme }) => theme.fontSizes.medium};\n    color: ${({ theme }) => theme.color};\n    line-height: 1.6;\n    flex-grow: 1;\n    margin-bottom: 0;\n\n    p {\n      margin-bottom: 0.5rem;\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n  }\n`;\n\nexport const CardItem = styled.div`\n  background-color: ${({ theme }) => theme.background};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  padding: 20px;\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n  position: relative;\n  overflow: hidden;\n\n  ${props =>\n    !props.$isActive &&\n    `\n    height: 290px; // ✅ Збільшили початкову висоту картки\n  `}\n  ${props =>\n    props.$isActive &&\n    `\n    height: 290px;\n  `}\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: ${({ theme }) => theme.shadows.medium};\n  }\n`;\n\nexport const CardEmoji = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.xlarge};\n  margin-bottom: 0.4rem; // ✅ Зменшили відступ, наприклад, з 0.8rem до 0.4rem\n`;\n\nexport const CardTitle = styled.h5`\n  color: ${({ theme }) => theme.accentColor};\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  padding: 0;\n  margin-top: 15px; // ✅ Зменшили відступ, наприклад, з 1rem до 0.5rem\n  margin-bottom: 0.2rem;\n  font-weight: bold;\n  line-height: 1.3;\n`;\n\nexport const CardContent = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  color: ${({ theme }) => theme.color};\n  line-height: 1.6;\n  flex-grow: 1;\n\n  ${props =>\n    !props.$isActive &&\n    `\n    max-height: 120px; \n    overflow: hidden;\n    transition: max-height 0.5s ease-in-out; \n  `}\n  ${props =>\n    props.$isActive &&\n    `\n    max-height: 1000px; \n    overflow: visible;\n    transition: max-height 0.5s ease-in-out; \n  `}\n\n  p {\n    margin-bottom: 0.5rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  a {\n    color: ${({ theme }) => theme.accentColor};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n  .bible-quote {\n    font-style: italic;\n    color: ${({ theme }) => theme.colorSecondary};\n    margin-top: 0.5rem;\n    padding-left: 1rem;\n    border-left: 2px solid ${({ theme }) => theme.borderColor};\n  }\n`;\n\nexport const ReadMoreButton = styled.button`\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.accentColor};\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  margin-top: 0.5rem;\n  cursor: pointer;\n  align-self: flex-start;\n  text-align: left;\n  width: auto;\n  white-space: nowrap;\n  padding: 0;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import React, { useState, useRef, useEffect, useCallback } from \"react\";\n\nimport {\n  ListCardsContainer,\n  CardItem,\n  CardTitle,\n  CardContent,\n  CardEmoji,\n  ReadMoreButton,\n  ExpandedContentWrapper,\n} from \"./ListCards.styled\";\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\";\n\n// Функція для плавного скролу\nconst smoothScrollTo = (element, target, duration = 300) => {\n  let animationFrameId;\n  const start = element.scrollTop;\n  const change = target - start;\n  const startTime = performance.now();\n\n  function animateScroll(currentTime) {\n    const elapsed = currentTime - startTime;\n    // Використовуємо функцію згладжування (ease-in-out)\n    // easeInOutQuad: f(t) = 2t^2 for t < 0.5, else 1 - 2(1-t)^2\n    const progress = Math.min(elapsed / duration, 1);\n    const easeProgress =\n      progress < 0.5 ? 2 * progress * progress : -1 + (4 - 2 * progress) * progress;\n\n    element.scrollTop = start + change * easeProgress;\n\n    if (elapsed < duration) {\n      animationFrameId = requestAnimationFrame(animateScroll);\n    }\n  }\n\n  animationFrameId = requestAnimationFrame(animateScroll);\n\n  return () => {\n    if (animationFrameId) cancelAnimationFrame(animationFrameId);\n  };\n};\n\nconst ListCards = ({ title, cards }) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n  const [showReadMore, setShowReadMore] = useState({});\n  // НОВИЙ СТАН: для збереження позиції скролу вікна перед відкриттям картки\n  const [windowScrollPosition, setWindowScrollPosition] = useState(0);\n\n  const contentRefs = useRef([]); // Для перевірки чи потрібна кнопка \"Читати далі\"\n  const expandedContentInnerRefs = useRef([]); // Для вмісту всередині розгорнутої картки\n  const expandedWrapperRefs = useRef([]); // Для самої розгорнутої картки (обгортки)\n  const cancelScrollRef = useRef(null); // Для зберігання функції відміни скролу\n\n  // Визначення, чи потрібна кнопка \"Читати далі\" (тільки при початковому рендері або зміні карт)\n  useEffect(() => {\n    const newShowReadMore = {};\n    contentRefs.current.forEach((ref, index) => {\n      // Додаємо невеликий допуск, щоб уникнути помилок округлення\n      if (ref) {\n        newShowReadMore[index] = ref.scrollHeight > ref.clientHeight + 4;\n      }\n    });\n    setShowReadMore(newShowReadMore);\n  }, [cards]);\n\n  // Обробник кліку поза карткою для закриття\n  const handleClickOutside = useCallback(\n    e => {\n      if (activeIndex !== null) {\n        const activeCardWrapper = expandedWrapperRefs.current[activeIndex];\n        if (activeCardWrapper && !activeCardWrapper.contains(e.target)) {\n          if (cancelScrollRef.current) cancelScrollRef.current(); // Відміняємо попередній скрол\n          cancelScrollRef.current = smoothScrollTo(activeCardWrapper, 0, 500); // Скролимо догори\n          setTimeout(() => {\n            setActiveIndex(null); // Закриваємо картку після скролу\n            cancelScrollRef.current = null;\n            // Відновлюємо скрол вікна після закриття картки\n            window.scrollTo({ top: windowScrollPosition, behavior: \"smooth\" });\n          }, 500); // Час має відповідати тривалості smoothScrollTo\n        }\n      }\n    },\n    [activeIndex, windowScrollPosition] // Додаємо windowScrollPosition в залежності\n  );\n\n  // Додаємо/видаляємо слухача подій для кліку поза карткою\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  // Обробник натискання кнопки \"Читати далі\"\n  const handleReadMoreClick = index => {\n    if (activeIndex === index) {\n      // Якщо картка вже відкрита, закриваємо її\n      const expandedWrapper = expandedWrapperRefs.current[index];\n      if (expandedWrapper) {\n        if (cancelScrollRef.current) cancelScrollRef.current(); // Відміняємо будь-який активний скрол\n        cancelScrollRef.current = smoothScrollTo(expandedWrapper, 0, 500); // Плавний скрол догори\n        setTimeout(() => {\n          setActiveIndex(null); // Закриваємо картку після завершення скролу\n          cancelScrollRef.current = null;\n          // Відновлюємо скрол вікна після закриття картки\n          window.scrollTo({ top: windowScrollPosition, behavior: \"smooth\" });\n        }, 500); // Час тайм-ауту має відповідати тривалості smoothScrollTo\n      } else {\n        setActiveIndex(null); // На випадок, якщо wrapper ще не існує\n      }\n    } else {\n      // Якщо картка закрита, відкриваємо її\n      // Зберігаємо поточну позицію скролу вікна перед відкриттям\n      setWindowScrollPosition(window.pageYOffset || document.documentElement.scrollTop);\n      setActiveIndex(index);\n    }\n  };\n\n  // Ефект для скролу до початку контенту при відкритті картки\n  useEffect(() => {\n    if (activeIndex !== null) {\n      const wrapper = expandedWrapperRefs.current[activeIndex];\n      const inner = expandedContentInnerRefs.current[activeIndex];\n\n      if (wrapper && inner) {\n        // Використовуємо requestAnimationFrame для забезпечення, що DOM оновився\n        requestAnimationFrame(() => {\n          if (cancelScrollRef.current) cancelScrollRef.current(); // Відміняємо попередній скрол\n\n          const firstContentElement = inner.querySelector(\n            \"p, div, span, h1, h2, h3, h4, h5, h6, ul, ol\"\n          );\n\n          let targetScrollTop = 0;\n          if (firstContentElement) {\n            targetScrollTop = firstContentElement.offsetTop;\n          } else {\n            // Запасний варіант, якщо елементи контенту не знайдені\n            targetScrollTop = inner.offsetTop + (1.3 * 16 + 0.8 * 16) + 20;\n          }\n\n          cancelScrollRef.current = smoothScrollTo(wrapper, targetScrollTop, 500); // Плавний скрол\n        });\n      }\n    }\n    // При розмонтуванні компонента або зміні activeIndex, очищаємо поточний скрол\n    return () => {\n      if (cancelScrollRef.current) {\n        cancelScrollRef.current();\n        cancelScrollRef.current = null;\n      }\n    };\n  }, [activeIndex]);\n\n  return (\n    <>\n      {title && (\n        <SectionHeading\n          as=\"h3\"\n          size=\"default\"\n          style={{\n            marginTop: \"0.5rem\",\n            marginBottom: \"2rem\",\n          }}\n        >\n          {title}\n        </SectionHeading>\n      )}\n      <ListCardsContainer>\n        {cards.map((card, index) => {\n          const isActive = activeIndex === index;\n\n          return (\n            <CardItem key={index} $isActive={isActive}>\n              {!isActive && (\n                <>\n                  {card.emoji && <CardEmoji>{card.emoji}</CardEmoji>}\n                  {card.title && <CardTitle>{card.title}</CardTitle>}\n                  <CardContent\n                    ref={el => {\n                      if (el) contentRefs.current[index] = el;\n                    }}\n                    $isActive={isActive}\n                  >\n                    {card.content}\n                  </CardContent>\n                  {showReadMore[index] && (\n                    <ReadMoreButton onClick={() => handleReadMoreClick(index)}>\n                      Читати далі...\n                    </ReadMoreButton>\n                  )}\n                </>\n              )}\n\n              {isActive && (\n                <ExpandedContentWrapper ref={el => (expandedWrapperRefs.current[index] = el)}>\n                  {card.emoji && <CardEmoji>{card.emoji}</CardEmoji>}\n                  {card.title && <CardTitle>{card.title}</CardTitle>}\n                  <div ref={el => (expandedContentInnerRefs.current[index] = el)}>\n                    {card.content}\n                  </div>\n                </ExpandedContentWrapper>\n              )}\n            </CardItem>\n          );\n        })}\n      </ListCardsContainer>\n    </>\n  );\n};\n\nexport default ListCards;\n","import styled from \"styled-components\";\n\nexport const TimelineContainer = styled.div`\n  margin: 3rem 0;\n  position: relative;\n  padding-left: 30px;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: 12px;\n    top: 0;\n    bottom: 0;\n    width: 2px;\n    background-color: ${({ theme }) => theme.borderColor}; // ✅ З теми\n  }\n`;\n\nexport const TimelineEvent = styled.div`\n  position: relative;\n  margin-bottom: 2rem;\n  padding-left: 30px;\n`;\n\nexport const EventDot = styled.div`\n  position: absolute;\n  left: 0;\n  top: 5px;\n  width: 12px;\n  height: 12px;\n  background-color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n  border-radius: 50%;\n  border: 2px solid ${({ theme }) => theme.background}; // ✅ З теми\n  z-index: 1;\n`;\n\nexport const EventContent = styled.div`\n  background-color: ${({ theme }) => theme.background}; // ✅ З теми\n  padding: 1rem 1.5rem;\n  border-radius: ${({ theme }) => theme.borderRadius.small}; // ✅ З теми\n  box-shadow: ${({ theme }) => theme.shadows.small}; // ✅ З теми\n  border: 1px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n\n  p {\n    margin-bottom: 0.5rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .bible-quote {\n    font-style: italic;\n    color: ${({ theme }) => theme.colorSecondary}; // ✅ З теми\n    margin-top: 0.5rem;\n    padding-left: 1rem;\n    border-left: 2px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  }\n`;\n\nexport const EventTitle = styled.h4`\n  color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n  font-size: ${({ theme }) => theme.fontSizes.large}; // ✅ З теми\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  font-weight: bold; /* Залишаємо, якщо не в темі */\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nexport const EventDescription = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ✅ З теми\n  color: ${({ theme }) => theme.color}; // ✅ З теми\n  line-height: 1.5;\n  margin-bottom: 0;\n\n  strong {\n    font-weight: bold; /* Залишаємо, якщо не в темі */\n  }\n\n  em {\n    font-style: italic;\n  }\n\n  a {\n    color: ${({ theme }) => theme.accentColor}; // ✅ З теми\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .bible-quote {\n    font-style: italic;\n    color: ${({ theme }) => theme.colorSecondary}; // ✅ З теми\n    margin-top: 0.5rem;\n    padding-left: 1rem;\n    border-left: 2px solid ${({ theme }) => theme.borderColor}; // ✅ З теми\n  }\n`;\n","// src/components/InteractiveContent/Timeline/Timeline.js\nimport React from \"react\";\nimport {\n  TimelineContainer,\n  TimelineEvent,\n  EventDot,\n  EventContent,\n  EventTitle,\n  EventDescription,\n} from \"./Timeline.styled\";\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\";\n\nconst Timeline = ({ title, events }) => {\n  return (\n    <TimelineContainer>\n      {title && (\n        <SectionHeading as=\"h3\" size=\"default\">\n          {/* ✅ ВИПРАВЛЕНО: Рендеримо title безпосередньо */}\n          {title}\n        </SectionHeading>\n      )}\n      {events.map((event, index) => (\n        <TimelineEvent key={index}>\n          <EventDot />\n          <EventContent>\n            {/* ✅ ВИПРАВЛЕНО: Рендеримо event.title безпосередньо */}\n            <EventTitle>{event.title}</EventTitle>\n            {/* ✅ ВИПРАВЛЕНО: Рендеримо event.description безпосередньо */}\n            <EventDescription>{event.description}</EventDescription>\n          </EventContent>\n        </TimelineEvent>\n      ))}\n    </TimelineContainer>\n  );\n};\n\nexport default Timeline;\n","// src/components/InteractiveContent/ContrastDisplay/ContrastDisplay.styled.jsx\nimport styled from \"styled-components\";\n\nexport const ContrastDisplayContainer = styled.div`\n  // ✅ Додано export\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 0 1rem;\n\n  @media (min-width: 768px) {\n    padding: 0;\n  }\n`;\n\nexport const ContrastItemsWrapper = styled.div`\n  // ✅ Додано export\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1.5rem;\n  justify-content: center;\n  align-items: stretch;\n  width: 100%;\n`;\n\nexport const ContrastItem = styled.div`\n  flex: 1 1 auto;\n  max-width: calc(50% - 0.75rem);\n\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n  box-sizing: border-box;\n\n  background-color: ${({ theme }) => theme.cardBackground || theme.background};\n  border: 1px solid ${({ theme }) => theme.borderColor || theme.accentBg};\n  border-radius: ${({ theme }) => theme.borderRadius.medium};\n  box-shadow: ${({ theme }) => theme.shadows.small};\n  transition: all 0.3s ease-in-out;\n\n  background-color: ${props => {\n    if (props.$type === \"positive\") return props.theme.positiveBackground;\n    if (props.$type === \"negative\") return props.theme.negativeBackground;\n    if (props.$type === \"neutral1\") return props.theme.neutralBackground1;\n    if (props.$type === \"neutral2\") return props.theme.neutralBackground2;\n    return props.theme.cardBackground;\n  }};\n  border: 1px solid\n    ${props => {\n      if (props.$type === \"positive\") return props.theme.positiveBorder;\n      if (props.$type === \"negative\") return props.theme.negativeBorder;\n      if (props.$type === \"neutral1\") return props.theme.neutralBorder1;\n      if (props.$type === \"neutral2\") return props.theme.neutralBorder2;\n      return props.theme.cardBorder;\n    }};\n\n  &:hover {\n    box-shadow: ${({ theme }) => theme.shadows.medium};\n    transform: translateY(-2px);\n  }\n\n  @media (max-width: 650px) {\n    max-width: 100%;\n  }\n  min-width: 280px;\n`;\n\nexport const ItemHeading = styled.h4`\n  // ✅ Додано export\n  font-size: 1.3rem;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  color: ${props => {\n    if (props.$type === \"positive\") return props.theme.positiveText;\n    if (props.$type === \"negative\") return props.theme.negativeText;\n    if (props.$type === \"neutral1\") return props.theme.neutralText1;\n    if (props.$type === \"neutral2\") return props.theme.neutralText2;\n    return props.theme.color;\n  }};\n`;\n\nexport const ItemEmoji = styled.span`\n  // ✅ Додано export\n  font-size: 2rem;\n  margin-right: 0.8rem;\n`;\n\nexport const ItemContent = styled.div`\n  // ✅ Додано export\n  font-size: 1rem;\n  line-height: 1.6;\n  color: ${({ theme }) => theme.color};\n\n  p {\n    margin-bottom: 1em;\n  }\n  p:last-child {\n    margin-bottom: 0;\n  }\n`;\n","// src/components/InteractiveContent/ContrastDisplay/ContrastDisplay.jsx\nimport React from \"react\";\n// ✅ ВИПРАВЛЕНО: Імпортуємо всі стилізовані компоненти з ContrastDisplay.styled.jsx\nimport {\n  ContrastDisplayContainer,\n  ContrastItemsWrapper,\n  ContrastItem,\n  ItemHeading,\n  ItemEmoji,\n  ItemContent,\n} from \"./ContrastDisplay.styled\";\n\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\"; // Залишаємо цей імпорт, якщо SectionHeading не перенесено\n\n// --- Компонент ContrastDisplay ---\nconst ContrastDisplay = ({ title, items }) => {\n  if (!items || items.length < 2) {\n    return null; // Потрібно принаймні два елементи для порівняння\n  }\n\n  return (\n    <ContrastDisplayContainer>\n      {title && <SectionHeading as=\"h3\">{title}</SectionHeading>}\n      <ContrastItemsWrapper>\n        {items.map((item, index) => (\n          <ContrastItem key={index} $type={item.type}>\n            <ItemHeading $type={item.type}>\n              {item.emoji && <ItemEmoji>{item.emoji}</ItemEmoji>}\n              {item.heading}\n            </ItemHeading>\n            <ItemContent>{item.content}</ItemContent>\n          </ContrastItem>\n        ))}\n      </ContrastItemsWrapper>\n    </ContrastDisplayContainer>\n  );\n};\n\nexport default ContrastDisplay;\n","// src/components/SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay.jsx\nimport React from \"react\";\nimport Card from \"../../Common/Card/Card\";\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\";\nimport QuizCard from \"../../InteractiveContent/QuizCard/QuizCard\";\nimport RevealCard from \"../../InteractiveContent/RevealCard/RevealCard\";\n\nimport HomeGroupLessonMetaInfo from \"../HomeGroupLessonMetaInfo/HomeGroupLessonMetaInfo\";\nimport Diagram from \"../../InteractiveContent/Diagram/Diagram\";\nimport ImagePlaceholder from \"../../InteractiveContent/ImagePlaceholder/ImagePlaceholder\";\nimport HighlightBox from \"../../InteractiveContent/HighlightBox/HighlightBox\";\nimport QuestionPrompt from \"../../InteractiveContent/QuestionPrompt/QuestionPrompt\";\nimport ListCards from \"../../InteractiveContent/ListCards/ListCards\";\nimport Timeline from \"../../InteractiveContent/Timeline/Timeline\";\nimport ContrastDisplay from \"../../InteractiveContent/ContrastDisplay/ContrastDisplay\";\n\nimport {\n  HomeGroupLessonDisplayContainer,\n  HomeGroupLessonTextWrapper,\n  HomeGroupLessonTitleWrapper,\n  MainContentWrapper,\n  // Переконайтеся, що VerseButton експортується звідси\n  // Це буде використовуватися в nehemiah3Lesson.js\n  // Але визначається в HomeGroupLessonDisplay.styled.js\n  // Його НЕ потрібно імпортувати тут, якщо ви не використовуєте його безпосередньо в цьому JSX.\n  // Залиште його в HomeGroupLessonDisplay.styled.js для визначення стилів\n} from \"./HomeGroupLessonDisplay.styled\";\n\nfunction HomeGroupLessonDisplay({ lessonData }) {\n  if (!lessonData) {\n    return <p>Завантаження уроку домашньої групи...</p>;\n  }\n\n  const {\n    title,\n    author,\n    book,\n    chapter,\n    verses,\n    date,\n    duration,\n    theme: lessonTheme,\n    tags,\n    description,\n    sections,\n  } = lessonData;\n\n  return (\n    <HomeGroupLessonDisplayContainer>\n      <HomeGroupLessonTitleWrapper>\n        <h2>{title}</h2>\n        <HomeGroupLessonMetaInfo\n          author={author}\n          book={book}\n          chapter={chapter}\n          verses={verses}\n          date={date}\n          duration={duration}\n          theme={lessonTheme}\n          tags={tags}\n        />\n      </HomeGroupLessonTitleWrapper>\n      <MainContentWrapper>\n        <Card>\n          <HomeGroupLessonTextWrapper>\n            {description && description}\n            {sections.map((section, index) => {\n              switch (section.type) {\n                case \"text\":\n                  return (\n                    <React.Fragment key={index}>\n                      {section.title && (\n                        <SectionHeading\n                          as={section.subtitle ? \"h4\" : \"h3\"}\n                          size={section.subtitle ? \"medium\" : \"default\"}\n                        >\n                          {section.title}\n                        </SectionHeading>\n                      )}\n                      {/* content тепер масив JSX елементів, рендеримо їх напряму */}\n                      {section.content.map((paragraph, pIndex) => (\n                        <React.Fragment key={pIndex}>{paragraph}</React.Fragment>\n                      ))}\n                    </React.Fragment>\n                  );\n                case \"quiz\":\n                  return <QuizCard key={section.id} quizData={section} />;\n                case \"reveal-cards\":\n                  return (\n                    <React.Fragment key={index}>\n                      {section.title && (\n                        <SectionHeading as=\"h3\" size=\"default\">\n                          {section.title}\n                        </SectionHeading>\n                      )}\n                      {section.cards.map(card => (\n                        <RevealCard key={card.id} cardData={card} />\n                      ))}\n                    </React.Fragment>\n                  );\n                case \"highlight-box\":\n                  return <HighlightBox key={index} {...section} />;\n                case \"question-prompt\":\n                  return <QuestionPrompt key={index} {...section} />;\n                case \"list-cards\":\n                  return <ListCards key={index} {...section} />;\n                case \"timeline\":\n                  return <Timeline key={index} {...section} />;\n                case \"contrast-section\":\n                  return <ContrastDisplay key={index} {...section} />;\n\n                case \"diagram\":\n                  return (\n                    <Diagram\n                      key={index}\n                      chartType={section.chartType}\n                      title={section.title}\n                      description={section.description}\n                      chartData={section.chartData}\n                      chartOptions={section.chartOptions}\n                    />\n                  );\n                case \"image-placeholder\":\n                  return (\n                    <ImagePlaceholder\n                      key={index}\n                      title={section.title}\n                      description={section.description}\n                      imageSrc={section.imageSrc}\n                      altText={section.altText}\n                      caption={section.caption}\n                    />\n                  );\n\n                default:\n                  console.warn(`Невідомий тип секції: ${section.type}`);\n                  return null;\n              }\n            })}\n          </HomeGroupLessonTextWrapper>\n        </Card>\n      </MainContentWrapper>\n    </HomeGroupLessonDisplayContainer>\n  );\n}\n\nexport default HomeGroupLessonDisplay;\n","// src/components/HomeGroups/HomeGroups.jsx\nimport React, { useEffect, useState } from \"react\"; // ✅ ДОДАНО useState\nimport { HomeGroupsContainer, NoLessonMessage } from \"./HomeGroups.styled\";\nimport HomeGroupLessonDisplay from \"../SpecificContentDisplays/HomeGroupLessonDisplay/HomeGroupLessonDisplay\";\nimport { homeGroupsContent } from \"../../data/homeGroups/homeGroupsContent\";\nimport { useHomeGroups } from \"../../contexts/HomeGroupsContext\";\n\nconst getLessonMetaDataById = lessonId => {\n  // ✅ ЗМІНЕНО НАЗВУ: тепер отримуємо метадані\n  if (!lessonId) return null;\n\n  for (const categoryKey in homeGroupsContent) {\n    if (homeGroupsContent.hasOwnProperty(categoryKey)) {\n      const lessonsArray = homeGroupsContent[categoryKey];\n      if (Array.isArray(lessonsArray) && lessonsArray.length > 0) {\n        const foundLesson = lessonsArray.find(lesson => lesson.id === lessonId);\n        if (foundLesson) {\n          return foundLesson; // Повертаємо об'єкт з метаданими та loadLesson\n        }\n      }\n    }\n  }\n  return null;\n};\n\nconst HomeGroups = () => {\n  const { selectedHomeGroupLesson, setSelectedHomeGroupLesson } = useHomeGroups();\n  const [loadedLessonContent, setLoadedLessonContent] = useState(null); // ✅ НОВИЙ СТАН: для зберігання завантаженого уроку\n  const [loading, setLoading] = useState(true); // ✅ НОВИЙ СТАН: для індикації завантаження\n\n  // Отримуємо метадані обраного уроку (з loadLesson функцією)\n  const selectedLessonMetaData = getLessonMetaDataById(selectedHomeGroupLesson);\n\n  useEffect(() => {\n    // Встановлюємо перший урок за замовчуванням, якщо жоден не вибрано\n    if (!selectedHomeGroupLesson) {\n      let firstLessonId = null;\n      for (const categoryKey in homeGroupsContent) {\n        if (homeGroupsContent.hasOwnProperty(categoryKey)) {\n          const lessonsArray = homeGroupsContent[categoryKey];\n          if (Array.isArray(lessonsArray) && lessonsArray.length > 0) {\n            firstLessonId = lessonsArray[0].id;\n            break;\n          }\n        }\n      }\n      if (firstLessonId) {\n        setSelectedHomeGroupLesson(firstLessonId);\n      } else {\n        setLoading(false); // Якщо немає уроків взагалі\n      }\n    }\n  }, [selectedHomeGroupLesson, setSelectedHomeGroupLesson]);\n\n  // ✅ НОВИЙ useEffect для завантаження контенту уроку\n  useEffect(() => {\n    const loadLessonContent = async () => {\n      setLoading(true); // Починаємо завантаження\n      setLoadedLessonContent(null); // Очищаємо попередній контент\n\n      if (selectedLessonMetaData && selectedLessonMetaData.loadLesson) {\n        try {\n          const module = await selectedLessonMetaData.loadLesson();\n          // Припускаємо, що module.default містить об'єкт уроку (як nehemiah4.js)\n          setLoadedLessonContent(module.default);\n        } catch (error) {\n          console.error(\"Помилка завантаження уроку:\", error);\n          setLoadedLessonContent(null); // У випадку помилки скидаємо контент\n        } finally {\n          setLoading(false); // Завершуємо завантаження\n        }\n      } else {\n        setLoading(false); // Немає метаданих або функції loadLesson\n      }\n    };\n\n    if (selectedHomeGroupLesson) {\n      // Запускаємо завантаження, лише якщо selectedHomeGroupLesson встановлено\n      loadLessonContent();\n    }\n  }, [selectedLessonMetaData, selectedHomeGroupLesson]); // Залежності: зміни метаданих або ID обраного уроку\n\n  return (\n    <HomeGroupsContainer>\n      {loading ? (\n        <NoLessonMessage>Завантаження уроку...</NoLessonMessage> // Показати, поки урок завантажується\n      ) : loadedLessonContent ? (\n        <HomeGroupLessonDisplay lessonData={loadedLessonContent} /> // Передаємо завантажений контент\n      ) : (\n        <NoLessonMessage>\n          Будь ласка, оберіть урок домашньої групи зі списку в меню.\n        </NoLessonMessage>\n      )}\n    </HomeGroupsContainer>\n  );\n};\n\nexport default HomeGroups;\n","import HomeGroups from \"../components/HomeGroups\";\n\nexport default function HomeGroupsPage() {\n  return <HomeGroups />;\n}\n"],"names":["HomeGroupLessonDisplayContainer","styled","div","HomeGroupLessonTitleWrapper","props","theme","color","MainContentWrapper","HomeGroupLessonTextWrapper","VerseButton","button","accentColor","accentBg","StyledCard","section","_ref","background","Card","children","_jsx","StyledQuizCard","_ref2","borderColor","QuizQuestion","h4","_ref3","QuizOptionsList","ul","_ref4","QuizOptionItem","li","_ref5","_ref6","_ref7","_ref8","hoverBg","isSelected","buttonColor","showFeedback","isCorrectOption","successBg","successColor","successText","dangerBg","dangerColor","dangerText","QuizToggleIcon","span","_ref9","QuizCard","quizData","showOptions","setShowOptions","useState","selectedAnswerIndex","setSelectedAnswerIndex","_jsxs","onClick","toggleOptions","question","isActive","options","map","option","index","handleOptionClick","isCorrect","text","StyledHeading","h3","size","fontSizes","xlarge","large","as","StyledRevealCard","borderRadius","medium","shadows","small","CardTitle","accentBgHover","_ref0","_ref1","CardContent","_ref10","_ref11","_ref12","_ref13","colorSecondary","_ref14","StyledToggleButton","navActive","ToggleButton","RevealCard","cardData","isRevealed","setIsRevealed","toggleReveal","emoji","title","content","HomeGroupsContainer","NoLessonMessage","p","MetaInfoContainer","tagBg","tagColor","author","book","chapter","verses","date","duration","tags","length","className","tag","DiagramContainer","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","RadialLinearScale","Title","Tooltip","Legend","Filler","renderChart","chartType","chartData","chartOptions","Line","data","Bar","Pie","Doughnut","PolarArea","Radar","Bubble","Scatter","description","currentTheme","useTheme","memoizedChartData","useMemo","getChartDataWithTheme","themeColors","type","datasets","newChartData","dataset","newDataset","dynamicColors","navBg","interactiveBgLight","interactiveBorderLight","interactiveBgYellow","interactiveBorderYellow","buttonBg","backgroundColor","Array","isArray","i","dataPointsCount","from","_","pointBackgroundColor","pointBorderColor","hoverBackgroundColor","hoverBorderColor","fill","memoizedChartOptions","getChartOptionsWithTheme","_options$plugins","_options$scales","_options$scales2","newOptions","responsive","maintainAspectRatio","layout","padding","left","right","top","bottom","plugins","legend","display","includes","labels","font","boxWidth","position","align","tooltip","bodyFont","titleFont","scales","y","border","ticks","grid","x","cutout","customLegendItems","_memoizedChartData$da","colors","label","style","flexDirection","width","height","flexGrow","minWidth","maxWidth","flexShrink","paddingLeft","overflowY","maxHeight","justifyContent","item","alignItems","marginBottom","marginRight","marginTop","fontSize","wordBreak","wordWrap","whiteSpace","lineHeight","ImageContainer","StyledImage","img","ImageCaption","imageUrl","caption","src","alt","HighlightBoxContainer","HighlightBoxEmoji","xxlarge","HighlightBoxContent","HighlightBoxTitle","QuestionPromptContainer","QuestionEmoji","QuestionText","ToggleAnswerButton","AnswerText","answer","showAnswer","setShowAnswer","handleToggleAnswer","ListCardsContainer","ExpandedContentWrapper","CardItem","$isActive","CardEmoji","h5","_ref15","_ref16","_ref17","_ref18","ReadMoreButton","_ref19","_ref20","smoothScrollTo","element","target","animationFrameId","arguments","undefined","start","scrollTop","change","startTime","performance","now","requestAnimationFrame","animateScroll","currentTime","elapsed","progress","Math","min","easeProgress","cancelAnimationFrame","cards","activeIndex","setActiveIndex","showReadMore","setShowReadMore","windowScrollPosition","setWindowScrollPosition","contentRefs","useRef","expandedContentInnerRefs","expandedWrapperRefs","cancelScrollRef","useEffect","newShowReadMore","current","forEach","ref","scrollHeight","clientHeight","handleClickOutside","useCallback","e","activeCardWrapper","contains","setTimeout","window","scrollTo","behavior","document","addEventListener","removeEventListener","wrapper","inner","firstContentElement","querySelector","targetScrollTop","offsetTop","_Fragment","SectionHeading","card","el","expandedWrapper","pageYOffset","documentElement","handleReadMoreClick","TimelineContainer","TimelineEvent","EventDot","EventContent","EventTitle","EventDescription","events","event","ContrastDisplayContainer","ContrastItemsWrapper","ContrastItem","cardBackground","$type","positiveBackground","negativeBackground","neutralBackground1","neutralBackground2","positiveBorder","negativeBorder","neutralBorder1","neutralBorder2","cardBorder","ItemHeading","positiveText","negativeText","neutralText1","neutralText2","ItemEmoji","ItemContent","items","heading","lessonData","lessonTheme","sections","HomeGroupLessonMetaInfo","React","subtitle","paragraph","pIndex","id","HighlightBox","QuestionPrompt","ListCards","Timeline","ContrastDisplay","Diagram","ImagePlaceholder","imageSrc","altText","console","warn","HomeGroups","selectedHomeGroupLesson","setSelectedHomeGroupLesson","useHomeGroups","loadedLessonContent","setLoadedLessonContent","loading","setLoading","selectedLessonMetaData","lessonId","categoryKey","homeGroupsContent","hasOwnProperty","lessonsArray","foundLesson","find","lesson","getLessonMetaDataById","firstLessonId","async","loadLesson","module","default","error","loadLessonContent","HomeGroupLessonDisplay","HomeGroupsPage"],"sourceRoot":""}