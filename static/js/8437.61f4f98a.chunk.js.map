{"version":3,"file":"static/js/8437.61f4f98a.chunk.js","mappings":"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","sources":["components/Sermons/Sermons.styled.jsx","components/SpecificContentDisplays/SermonMetaInfo/SermonMetaInfo.styled.jsx","components/SpecificContentDisplays/SermonMetaInfo/SermonMetaInfo.jsx","components/SpecificContentDisplays/SermonDisplay/SermonDisplay.styled.jsx","components/SpecificContentDisplays/SermonDisplay/SermonDisplay.jsx","components/Sermons/Sermons.jsx","pages/SermonsPage.jsx","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs"],"sourcesContent":["// Припускається, що це файл для стилів сторінки, наприклад, SermonsPage.styled.jsx\n\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  // Цей компонент не має прямих властивостей кольору, які потрібно змінювати.\n  // Його фон та колір тексту, швидше за все, контролюються батьківськими компонентами\n  // (наприклад, Main, Wrapper у Layout) або глобальними стилями body, де переходи вже налаштовані.\n  // Додамо медіазапит для адаптивності.\n  ${({ theme }) => theme.media.up(\"md\")`\n    padding: ${({ theme }) => theme.spacing.medium};\n  `}\n`;\n\nexport const Title = styled.h2`\n  color: ${({ theme }) => theme.colors.color}; // ОНОВЛЕНО: Використано основний колір тексту з теми\n  text-align: center;\n  margin-bottom: ${({ theme }) => theme.spacing.large}; // ОНОВЛЕНО: Використано spacing\n  font-size: ${({ theme }) => theme.fontSizes.xxlarge}; // ОНОВЛЕНО: Використано fontSizes\n\n  // Медіазапит для мобільних пристроїв, щоб зменшити шрифт\n  ${({ theme }) => theme.media.down(\"sm\")`\n    font-size: ${({ theme }) => theme.fontSizes.xlarge};\n  `}\n`;\n\n// Новий styled component для повідомлення\nexport const NoSermonMessage = styled.p`\n  text-align: center;\n  color: ${({ theme }) => theme.colors.color}; // ОНОВЛЕНО: Використано основний колір тексту з теми\n  margin-top: ${({ theme }) => theme.spacing.large}; // ОНОВЛЕНО: Використано spacing\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ОНОВЛЕНО: Використано fontSizes\n\n  // ДОДАНО: Плавний перехід для кольору тексту, оскільки це <p>\n  transition: color 0.25s ease-in-out;\n`;\n","// src/components/SpecificContentDisplays/SermonMetaInfo/SermonMetaInfo.styled.js\nimport styled from \"styled-components\";\n\nexport const MetaContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: ${({ theme }) => theme.spacing.small}; // ОНОВЛЕНО: використовуємо spacing\n  font-size: ${({ theme }) => theme.fontSizes.small}; // ОНОВЛЕНО: використовуємо fontSizes\n  color: inherit;\n  transition: color 0.25s ease-in-out;\n\n  span {\n    white-space: nowrap;\n  }\n`;\n\nexport const MetaItem = styled.span`\n  /* Додаткові стилі для кожного елемента мета-інформації */\n`;\n\nexport const DescriptionText = styled.p`\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ОНОВЛЕНО: використовуємо fontSizes\n  line-height: 1.5;\n  opacity: 0.9;\n  text-align: center;\n  margin-bottom: ${({ theme }) => theme.spacing.medium};\n`;\n","// src/components/SpecificContentDisplays/SermonMetaInfo/SermonMetaInfo.js\nimport React from \"react\";\nimport { MetaContainer, MetaItem, DescriptionText } from \"./SermonMetaInfo.styled\";\n\nexport default function SermonMetaInfo({ speaker, date, theme, book, description }) {\n  return (\n    <MetaContainer>\n      {book && (\n        <MetaItem>\n          Книга: <strong>{book}</strong>\n        </MetaItem>\n      )}\n      {speaker && (\n        <MetaItem>\n          Спікер: <strong>{speaker}</strong>\n        </MetaItem>\n      )}\n      {date && <MetaItem>Дата: {date}</MetaItem>}\n      {theme && (\n        <MetaItem>\n          Тема: <strong>{theme}</strong>\n        </MetaItem>\n      )}\n      {description && <DescriptionText>{description}</DescriptionText>}\n    </MetaContainer>\n  );\n}\n","// src/components/SpecificContentDisplays/SermonDisplay/SermonDisplay.styled.js\nimport styled from \"styled-components\";\nimport { MetaContainer } from \"../SermonMetaInfo/SermonMetaInfo.styled\"; // Імпортуємо MetaContainer\n\nexport const SermonDisplayContainer = styled.div`\n  /* Загальні стилі для контейнера вмісту проповіді */\n  // Не має theme-залежних властивостей, які потребують transition.\n`;\n\nexport const SermonTitleWrapper = styled.div`\n  /* Нова стилізація для секції \"герой\" */\n  background: ${({ theme }) =>\n    `linear-gradient(180deg, ${theme.colors.gradientStart} 0%, ${theme.colors.gradientEnd} 100%)`}; // ОНОВЛЕНО\n  color: ${({ theme }) => theme.colors.color}; // ОНОВЛЕНО: Використовуємо theme.colors\n  padding: ${({ theme }) => theme.spacing.xlarge} ${({ theme }) => theme.spacing.small}; // ОНОВЛЕНО: Використовуємо spacing\n  text-align: center;\n  margin-bottom: ${({ theme }) => theme.spacing.xlarge}; // ОНОВЛЕНО: Використовуємо spacing\n  box-shadow: ${({ theme }) => theme.shadows.medium}; // ОНОВЛЕНО: Використовуємо shadows\n\n  // Перехід налаштований і працює коректно\n  transition: background 0.25s ease-in-out, color 0.25s ease-in-out, box-shadow 0.25s ease-in-out;\n\n  /* Стилі для основного заголовка h2 всередині цього блоку */\n  h2 {\n    font-size: ${({ theme }) => theme.fontSizes.xxlarge}; // ОНОВЛЕНО: Використовуємо fontSizes\n    margin-bottom: ${({ theme }) => theme.spacing.small}; // ОНОВЛЕНО: Використовуємо spacing\n    line-height: 1.2;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.05);\n  }\n\n  /* Регулювання стилів MetaContainer, коли він знаходиться всередині SermonTitleWrapper */\n  ${MetaContainer} {\n    margin-top: ${({ theme }) => theme.spacing.large}; // ОНОВЛЕНО: Використовуємо spacing\n    font-size: 1.1em;\n  }\n\n  /* Медіа-запити для адаптивності */\n  ${({ theme }) => theme.media.down(\"sm\")` // ОНОВЛЕНО: Використовуємо медіа-запит з теми\n    padding: ${({ theme }) => theme.spacing.large} ${({ theme }) =>\n    theme.spacing.small}; // ОНОВЛЕНО: Використовуємо spacing\n    h2 {\n      font-size: ${({ theme }) => theme.fontSizes.xlarge}; // ОНОВЛЕНО: Використовуємо fontSizes\n    }\n    ${MetaContainer} {\n      font-size: 1em;\n    }\n  `}\n`;\n\nexport const MainContentWrapper = styled.main`\n  max-width: 960px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: ${({ theme }) => theme.spacing.large}; // ОНОВЛЕНО: Використовуємо spacing\n  padding-left: ${({ theme }) => theme.spacing.small}; // ОНОВЛЕНО: Використовуємо spacing\n  padding-right: ${({ theme }) => theme.spacing.small}; // ОНОВЛЕНО: Використовуємо spacing\n`;\n\nexport const SermonTextWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.color}; // ОНОВЛЕНО: Використовуємо theme.colors\n\n  // ДОДАНО: Плавний перехід для кольору тексту\n  transition: color 0.25s ease-in-out;\n`;\n\nexport const StyledParagraph = styled.p`\n  margin-bottom: ${({ theme }) => theme.spacing.small}; // ОНОВЛЕНО: Використовуємо spacing\n  font-size: ${({ theme }) => theme.fontSizes.medium}; // ОНОВЛЕНО: Використовуємо fontSizes\n  line-height: 1.6;\n`;\n\nexport const RevealCardsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: ${({ theme }) => theme.spacing.medium}; // ОНОВЛЕНО: Використовуємо spacing\n  margin-top: ${({ theme }) => theme.spacing.medium}; // ОНОВЛЕНО: Використовуємо spacing\n  margin-bottom: ${({ theme }) => theme.spacing.medium}; // ОНОВЛЕНО: Використовуємо spacing\n  justify-items: center;\n\n  ${({ theme }) => theme.media.up(\"sm\")` // ОНОВЛЕНО: Використовуємо медіа-запит з теми\n    grid-template-columns: repeat(2, 1fr);\n  `}\n\n  ${({ theme }) => theme.media.up(\"md\")` // ОНОВЛЕНО: Використовуємо медіа-запит з теми\n    grid-template-columns: repeat(3, 1fr);\n  `}\n`;\n","// src/components/SpecificContentDisplays/SermonDisplay/SermonDisplay.js\nimport React from \"react\";\nimport Card from \"../../Common/Card/Card\";\nimport SectionHeading from \"../../Common/SectionHeading/SectionHeading\";\nimport QuizCard from \"../../InteractiveContent/QuizCard/QuizCard\";\nimport RevealCard from \"../../InteractiveContent/RevealCard/RevealCard\";\nimport SermonMetaInfo from \"../SermonMetaInfo/SermonMetaInfo\";\n\nimport {\n  SermonDisplayContainer,\n  SermonTextWrapper,\n  StyledParagraph,\n  RevealCardsGrid,\n  SermonTitleWrapper,\n  MainContentWrapper,\n} from \"./SermonDisplay.styled\";\n\nfunction SermonDisplay({ sermonData }) {\n  if (!sermonData) {\n    return <p>Завантаження проповіді...</p>;\n  }\n\n  const { title, speaker, date, book, description, theme, sections } = sermonData;\n\n  return (\n    <SermonDisplayContainer>\n      <SermonTitleWrapper>\n        <h2>{title}</h2>\n        <SermonMetaInfo\n          speaker={speaker}\n          date={date}\n          theme={theme}\n          book={book}\n          description={description}\n        />\n      </SermonTitleWrapper>\n\n      <MainContentWrapper>\n        <Card>\n          <SermonTextWrapper>\n            {sections.map((section, index) => {\n              if (section.type === \"text\") {\n                return (\n                  <React.Fragment key={index}>\n                    {section.title && (\n                      <SectionHeading\n                        as={section.subtitle ? \"h4\" : \"h3\"}\n                        size={section.subtitle ? \"medium\" : \"default\"}\n                      >\n                        {section.title}\n                      </SectionHeading>\n                    )}\n\n                    {section.content.map((paragraph, pIndex) => (\n                      <StyledParagraph key={pIndex}>{paragraph}</StyledParagraph>\n                    ))}\n                  </React.Fragment>\n                );\n              } else if (section.type === \"quiz\") {\n                return <QuizCard key={section.id} quizData={section} />;\n              } else if (section.type === \"reveal-cards\") {\n                return (\n                  <RevealCardsGrid key={index}>\n                    {section.cards.map(card => (\n                      <RevealCard key={card.id} cardData={card} />\n                    ))}\n                  </RevealCardsGrid>\n                );\n              }\n              return null;\n            })}\n          </SermonTextWrapper>\n        </Card>\n      </MainContentWrapper>\n    </SermonDisplayContainer>\n  );\n}\n\nexport default SermonDisplay;\n","// src/components/Sermons/Sermons.jsx\nimport React, { useEffect } from \"react\";\nimport { Container, NoSermonMessage } from \"./Sermons.styled\";\nimport SermonDisplay from \"../SpecificContentDisplays/SermonDisplay/SermonDisplay\";\nimport { sermonsContent } from \"../../data/sermons/sermonsContent\"; // Переконайтесь, що цей шлях правильний\nimport { useSermons } from \"../../contexts/SermonsContext\";\n\n// Нова функція для отримання даних проповіді за її ID\nconst getSermonDataById = sermonId => {\n  if (!sermonId) return null;\n\n  // Проходимо по всіх категоріях (книги, тематичні, особливі) в sermonsContent\n  for (const categoryKey in sermonsContent) {\n    if (sermonsContent.hasOwnProperty(categoryKey)) {\n      const sermonsArray = sermonsContent[categoryKey];\n      // Перевіряємо, чи це масив і чи він не порожній\n      if (Array.isArray(sermonsArray) && sermonsArray.length > 0) {\n        const foundSermon = sermonsArray.find(sermon => sermon.id === sermonId);\n        if (foundSermon) {\n          return foundSermon;\n        }\n      }\n    }\n  }\n  return null; // Якщо проповідь з таким ID не знайдено\n};\n\nconst Sermons = () => {\n  const { selectedSermon, setSelectedSermon } = useSermons();\n\n  // Тепер використовуємо нову функцію пошуку за ID\n  const sermonData = getSermonDataById(selectedSermon);\n\n  useEffect(() => {\n    // Якщо жодна проповідь не обрана (при першому завантаженні або перезавантаженні)\n    if (!selectedSermon) {\n      // Знаходимо першу доступну проповідь для відображення за замовчуванням\n      let firstSermonId = null;\n      for (const categoryKey in sermonsContent) {\n        if (sermonsContent.hasOwnProperty(categoryKey)) {\n          const sermonsArray = sermonsContent[categoryKey];\n          if (Array.isArray(sermonsArray) && sermonsArray.length > 0) {\n            firstSermonId = sermonsArray[0].id; // Беремо ID першої проповіді з першої категорії\n            break; // Зупиняємо пошук після знаходження першої проповіді\n          }\n        }\n      }\n\n      if (firstSermonId) {\n        setSelectedSermon(firstSermonId); // Встановлюємо ID першої проповіді\n      }\n    }\n  }, [selectedSermon, setSelectedSermon]);\n\n  return (\n    <Container>\n      {sermonData ? (\n        <SermonDisplay sermonData={sermonData} />\n      ) : (\n        <NoSermonMessage>Будь ласка, оберіть проповідь зі списку в меню.</NoSermonMessage>\n      )}\n    </Container>\n  );\n};\n\nexport default Sermons;\n","import Sermons from \"../components/Sermons\";\n\nexport default function SermonsPage() {\n  return <Sermons />;\n}\n","import { invariant } from 'motion-utils';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { animationControls } from './animation-controls.mjs';\n\n/**\n * Creates `LegacyAnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `LegacyAnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n"],"names":["Container","styled","div","_ref","theme","media","up","_ref2","spacing","medium","NoSermonMessage","h2","_ref3","colors","color","_ref4","large","_ref5","fontSizes","xxlarge","_ref6","down","_ref7","xlarge","p","_ref8","_ref9","_ref0","MetaContainer","small","MetaItem","span","DescriptionText","SermonMetaInfo","speaker","date","book","description","_jsxs","children","_jsx","SermonDisplayContainer","SermonTitleWrapper","gradientStart","gradientEnd","shadows","_ref1","_ref10","_ref11","MainContentWrapper","main","_ref12","_ref13","_ref14","SermonTextWrapper","_ref15","StyledParagraph","_ref16","_ref17","RevealCardsGrid","_ref18","_ref19","_ref20","_ref21","_ref22","sermonData","title","sections","Card","map","section","index","type","React","SectionHeading","as","subtitle","size","content","paragraph","pIndex","QuizCard","quizData","id","cards","card","RevealCard","cardData","Sermons","selectedSermon","setSelectedSermon","useSermons","sermonId","categoryKey","sermonsContent","hasOwnProperty","sermonsArray","Array","isArray","length","foundSermon","find","sermon","getSermonDataById","useEffect","firstSermonId","SermonDisplay","SermonsPage","setVariants","visualElement","variantLabels","reverse","forEach","key","variant","getVariant","setTarget","variantChildren","child","animationControls","hasMounted","subscribers","Set","controls","subscribe","add","delete","start","definition","transitionOverride","invariant","animations","push","animateVisualElement","Promise","all","set","setValues","stop","values","value","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect"],"sourceRoot":""}